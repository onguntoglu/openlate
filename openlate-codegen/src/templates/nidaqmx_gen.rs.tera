pub mod DaqmxValues {
    {% for namespace, enums in nidaqmx.enums %}
    #[derive(Debug)]
    pub enum {{namespace}} {
        {% for variant in enums.values %}{% if variant.documentation %}#[doc="{{variant.documentation.description}}"]{%endif%}
        {{variant.name}},
        {% endfor %}
    }
    
    #[derive(Debug)]
    impl From<i32> for {{namespace}} {
        fn from(raw: i32) -> Self {
            match raw {
                {% for variant in enums.values %}
                {{variant.value}}_i32 => {{namespace}}::{{fix_enum_variant(variant["name"])}}
                {% endfor %}
            }
        }
    }
    
    
    #[derive(Debug)]
    impl From<{{namespace}}> for i32 {
        fn from(attr: {{namespace}}) -> Self {
            match attr {
                {% for variant in enums.values %}
                {{namespace}}::{{variant.name}} => {{variant.value}}_i32,
                {% endfor %}
            }
        }
    }
    {% endfor %}
}
