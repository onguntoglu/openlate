pub trait CharBuffer {
  fn from(v: Vec<i8>) -> Vec<u8> {
    // ideally we'd use Vec::into_raw_parts, but it's unstable,
    // so we have to do it manually:

    // first, make sure v's destructor doesn't free the data
    // it thinks it owns when it goes out of scope
    let mut v = std::mem::ManuallyDrop::new(v);

    // then, pick apart the existing Vec
    let p = v.as_mut_ptr();
    let len = v.len();
    let cap = v.capacity();

    // finally, adopt the data into a new Vec
    unsafe { Vec::from_raw_parts(p as *mut u8, len, cap) }
  }
}
// mod generate_error_strings {
//     use nidaqmx_sys;
//     use strum::{self, Display, EnumIter};

//     impl From<i32> for NidaqmxError {
//         fn from(raw: i32) -> Self {
//             NidaqmxError::from_repr(raw).unwrap()
//         }
//     }

//     impl From<i32> for NidaqmxSuccess {
//         fn from(raw: i32) -> Self {
//             NidaqmxSuccess::from_repr(raw).unwrap()
//         }
//     }

//     impl From<NidaqmxError> for i32 {
//         fn from(ret: NidaqmxError) -> Self {
//             match ret {
//           NidaqmxError::ErrorMultiTaskCfgSampRateNotSupportedWithPropSet => nidaqmx_sys::DAQmxErrorMultiTaskCfgSampRateNotSupportedWithPropSet,
//           NidaqmxError::ErrorMultiTaskCfgSampRateConflictingProp => nidaqmx_sys::DAQmxErrorMultiTaskCfgSampRateConflictingProp,
//           NidaqmxError::ErrorNoCommonSampRateFoundNoRepeatSamps => nidaqmx_sys::DAQmxErrorNoCommonSampRateFoundNoRepeatSamps,
//           NidaqmxError::ErrorNoCommonSampRateFound => nidaqmx_sys::DAQmxErrorNoCommonSampRateFound,
//           NidaqmxError::ErrorMultiTaskCfgDoesNotSupportMultiDevTask => nidaqmx_sys::DAQmxErrorMultiTaskCfgDoesNotSupportMultiDevTask,
//           NidaqmxError::ErrorMultiTaskSampRateCfgNotSupported => nidaqmx_sys::DAQmxErrorMultiTaskSampRateCfgNotSupported,
//           NidaqmxError::ErrorDebugSessionNotAllowedTimingSourceRegistered => nidaqmx_sys::DAQmxErrorDebugSessionNotAllowedTimingSourceRegistered,
//           NidaqmxError::ErrorDebugSessionNotAllowedWhenLogging => nidaqmx_sys::DAQmxErrorDebugSessionNotAllowedWhenLogging,
//           NidaqmxError::ErrorDebugSessionNotAllowedEventRegistered => nidaqmx_sys::DAQmxErrorDebugSessionNotAllowedEventRegistered,
//           NidaqmxError::ErrorInvalidTargetTaskForDebugSession => nidaqmx_sys::DAQmxErrorInvalidTargetTaskForDebugSession,
//           NidaqmxError::ErrorFunctionNotSupportedForDevice => nidaqmx_sys::DAQmxErrorFunctionNotSupportedForDevice,
//           NidaqmxError::ErrorMultipleTargetTasksFoundForDebugSession => nidaqmx_sys::DAQmxErrorMultipleTargetTasksFoundForDebugSession,
//           NidaqmxError::ErrorTargetTaskNotFoundForDebugSession => nidaqmx_sys::DAQmxErrorTargetTaskNotFoundForDebugSession,
//           NidaqmxError::ErrorOperationNotSupportedInDebugSession => nidaqmx_sys::DAQmxErrorOperationNotSupportedInDebugSession,
//           NidaqmxError::ErrorOperationNotPermittedInMonitorModeForDebugSession => nidaqmx_sys::DAQmxErrorOperationNotPermittedInMonitorModeForDebugSession,
//           NidaqmxError::ErrorGetActiveDevPrptyFailedDueToDifftVals => nidaqmx_sys::DAQmxErrorGetActiveDevPrptyFailedDueToDifftVals,
//           NidaqmxError::ErrorTaskAlreadyRegisteredATimingSource => nidaqmx_sys::DAQmxErrorTaskAlreadyRegisteredATimingSource,
//           NidaqmxError::ErrorFilterNotSupportedOnHWRev => nidaqmx_sys::DAQmxErrorFilterNotSupportedOnHWRev,
//           NidaqmxError::ErrorSensorPowerSupplyVoltageLevel => nidaqmx_sys::DAQmxErrorSensorPowerSupplyVoltageLevel,
//           NidaqmxError::ErrorSensorPowerSupply => nidaqmx_sys::DAQmxErrorSensorPowerSupply,
//           NidaqmxError::ErrorInvalidScanlist => nidaqmx_sys::DAQmxErrorInvalidScanlist,
//           NidaqmxError::ErrorTimeResourceCannotBeRouted => nidaqmx_sys::DAQmxErrorTimeResourceCannotBeRouted,
//           NidaqmxError::ErrorInvalidResetDelayRequested => nidaqmx_sys::DAQmxErrorInvalidResetDelayRequested,
//           NidaqmxError::ErrorExceededTotalTimetriggersAvailable => nidaqmx_sys::DAQmxErrorExceededTotalTimetriggersAvailable,
//           NidaqmxError::ErrorExceededTotalTimestampsAvailable => nidaqmx_sys::DAQmxErrorExceededTotalTimestampsAvailable,
//           NidaqmxError::ErrorNoSynchronizationProtocolRunning => nidaqmx_sys::DAQmxErrorNoSynchronizationProtocolRunning,
//           NidaqmxError::ErrorConflictingCoherencyRequirements => nidaqmx_sys::DAQmxErrorConflictingCoherencyRequirements,
//           NidaqmxError::ErrorNoSharedTimescale => nidaqmx_sys::DAQmxErrorNoSharedTimescale,
//           NidaqmxError::ErrorInvalidFieldDAQBankName => nidaqmx_sys::DAQmxErrorInvalidFieldDAQBankName,
//           NidaqmxError::ErrorDeviceDoesNotSupportHWTSP => nidaqmx_sys::DAQmxErrorDeviceDoesNotSupportHWTSP,
//           NidaqmxError::ErrorBankTypeDoesNotMatchBankTypeInDestination => nidaqmx_sys::DAQmxErrorBankTypeDoesNotMatchBankTypeInDestination,
//           NidaqmxError::ErrorInvalidFieldDAQBankNumberSpecd => nidaqmx_sys::DAQmxErrorInvalidFieldDAQBankNumberSpecd,
//           NidaqmxError::ErrorUnsupportedSimulatedBankForSimulatedFieldDAQ => nidaqmx_sys::DAQmxErrorUnsupportedSimulatedBankForSimulatedFieldDAQ,
//           NidaqmxError::ErrorFieldDAQBankSimMustMatchFieldDAQSim => nidaqmx_sys::DAQmxErrorFieldDAQBankSimMustMatchFieldDAQSim,
//           NidaqmxError::ErrorDevNoLongerSupportedWithinDAQmxAPI => nidaqmx_sys::DAQmxErrorDevNoLongerSupportedWithinDAQmxAPI,
//           NidaqmxError::ErrorTimingEngineDoesNotSupportOnBoardMemory => nidaqmx_sys::DAQmxErrorTimingEngineDoesNotSupportOnBoardMemory,
//           NidaqmxError::ErrorDuplicateTaskCrossProject => nidaqmx_sys::DAQmxErrorDuplicateTaskCrossProject,
//           NidaqmxError::ErrorTimeStartTriggerBeforeArmStartTrigger => nidaqmx_sys::DAQmxErrorTimeStartTriggerBeforeArmStartTrigger,
//           NidaqmxError::ErrorTimeTriggerCannotBeSet => nidaqmx_sys::DAQmxErrorTimeTriggerCannotBeSet,
//           NidaqmxError::ErrorInvalidTriggerWindowValue => nidaqmx_sys::DAQmxErrorInvalidTriggerWindowValue,
//           NidaqmxError::ErrorCannotQueryPropertyBeforeOrDuringAcquisition => nidaqmx_sys::DAQmxErrorCannotQueryPropertyBeforeOrDuringAcquisition,
//           NidaqmxError::ErrorSampleClockTimebaseNotSupported => nidaqmx_sys::DAQmxErrorSampleClockTimebaseNotSupported,
//           NidaqmxError::ErrorTimestampNotYetReceived => nidaqmx_sys::DAQmxErrorTimestampNotYetReceived,
//           NidaqmxError::ErrorTimeTriggerNotSupported => nidaqmx_sys::DAQmxErrorTimeTriggerNotSupported,
//           NidaqmxError::ErrorTimestampNotEnabled => nidaqmx_sys::DAQmxErrorTimestampNotEnabled,
//           NidaqmxError::ErrorTimeTriggersInconsistent => nidaqmx_sys::DAQmxErrorTimeTriggersInconsistent,
//           NidaqmxError::ErrorTriggerConfiguredIsInThePast => nidaqmx_sys::DAQmxErrorTriggerConfiguredIsInThePast,
//           NidaqmxError::ErrorTriggerConfiguredIsTooFarFromCurrentTime => nidaqmx_sys::DAQmxErrorTriggerConfiguredIsTooFarFromCurrentTime,
//           NidaqmxError::ErrorSynchronizationLockLost => nidaqmx_sys::DAQmxErrorSynchronizationLockLost,
//           NidaqmxError::ErrorInconsistentTimescales => nidaqmx_sys::DAQmxErrorInconsistentTimescales,
//           NidaqmxError::ErrorCannotSynchronizeDevices => nidaqmx_sys::DAQmxErrorCannotSynchronizeDevices,
//           NidaqmxError::ErrorAssociatedChansHaveAttributeConflictWithMultipleMaxMinRanges => nidaqmx_sys::DAQmxErrorAssociatedChansHaveAttributeConflictWithMultipleMaxMinRanges,
//           NidaqmxError::ErrorSampleRateNumChansOrAttributeValues => nidaqmx_sys::DAQmxErrorSampleRateNumChansOrAttributeValues,
//           NidaqmxError::ErrorWaitForValidTimestampNotSupported => nidaqmx_sys::DAQmxErrorWaitForValidTimestampNotSupported,
//           NidaqmxError::ErrorTrigWinTimeoutExpired => nidaqmx_sys::DAQmxErrorTrigWinTimeoutExpired,
//           NidaqmxError::ErrorInvalidTriggerCfgForDevice => nidaqmx_sys::DAQmxErrorInvalidTriggerCfgForDevice,
//           NidaqmxError::ErrorInvalidDataTransferMechanismForDevice => nidaqmx_sys::DAQmxErrorInvalidDataTransferMechanismForDevice,
//           NidaqmxError::ErrorInputFIFOOverflow3 => nidaqmx_sys::DAQmxErrorInputFIFOOverflow3,
//           NidaqmxError::ErrorTooManyDevicesForAnalogMultiEdgeTrigCDAQ => nidaqmx_sys::DAQmxErrorTooManyDevicesForAnalogMultiEdgeTrigCDAQ,
//           NidaqmxError::ErrorTooManyTriggersTypesSpecifiedInTask => nidaqmx_sys::DAQmxErrorTooManyTriggersTypesSpecifiedInTask,
//           NidaqmxError::ErrorMismatchedMultiTriggerConfigValues => nidaqmx_sys::DAQmxErrorMismatchedMultiTriggerConfigValues,
//           NidaqmxError::ErrorInconsistentAODACRangeAcrossTasks => nidaqmx_sys::DAQmxErrorInconsistentAODACRangeAcrossTasks,
//           NidaqmxError::ErrorInconsistentDTToWrite => nidaqmx_sys::DAQmxErrorInconsistentDTToWrite,
//           NidaqmxError::ErrorFunctionObsolete => nidaqmx_sys::DAQmxErrorFunctionObsolete,
//           NidaqmxError::ErrorNegativeDurationNotSupported => nidaqmx_sys::DAQmxErrorNegativeDurationNotSupported,
//           NidaqmxError::ErrorDurationTooSmall => nidaqmx_sys::DAQmxErrorDurationTooSmall,
//           NidaqmxError::ErrorDurationTooLong => nidaqmx_sys::DAQmxErrorDurationTooLong,
//           NidaqmxError::ErrorDurationBasedNotSupportedForSpecifiedTimingMode => nidaqmx_sys::DAQmxErrorDurationBasedNotSupportedForSpecifiedTimingMode,
//           NidaqmxError::ErrorInvalidLEDState => nidaqmx_sys::DAQmxErrorInvalidLEDState,
//           NidaqmxError::ErrorWatchdogStatesNotUniform => nidaqmx_sys::DAQmxErrorWatchdogStatesNotUniform,
//           NidaqmxError::ErrorSelfTestFailedPowerSupplyOutOfTolerance => nidaqmx_sys::DAQmxErrorSelfTestFailedPowerSupplyOutOfTolerance,
//           NidaqmxError::ErrorHWTSPMultiSampleWrite => nidaqmx_sys::DAQmxErrorHWTSPMultiSampleWrite,
//           NidaqmxError::ErrorOnboardRegenExceedsChannelLimit => nidaqmx_sys::DAQmxErrorOnboardRegenExceedsChannelLimit,
//           NidaqmxError::ErrorWatchdogChannelExpirationStateNotSpecified => nidaqmx_sys::DAQmxErrorWatchdogChannelExpirationStateNotSpecified,
//           NidaqmxError::ErrorInvalidShuntSourceForCalibration => nidaqmx_sys::DAQmxErrorInvalidShuntSourceForCalibration,
//           NidaqmxError::ErrorInvalidShuntSelectForCalibration => nidaqmx_sys::DAQmxErrorInvalidShuntSelectForCalibration,
//           NidaqmxError::ErrorInvalidShuntCalibrationConfiguration => nidaqmx_sys::DAQmxErrorInvalidShuntCalibrationConfiguration,
//           NidaqmxError::ErrorBufferedOperationsNotSupportedOnChannelStandalone => nidaqmx_sys::DAQmxErrorBufferedOperationsNotSupportedOnChannelStandalone,
//           NidaqmxError::ErrorFeatureNotAvailableOnAccessory => nidaqmx_sys::DAQmxErrorFeatureNotAvailableOnAccessory,
//           NidaqmxError::ErrorInconsistentThreshVoltageAcrossTerminals => nidaqmx_sys::DAQmxErrorInconsistentThreshVoltageAcrossTerminals,
//           NidaqmxError::ErrorDAQmxIsNotInstalledOnTarget => nidaqmx_sys::DAQmxErrorDAQmxIsNotInstalledOnTarget,
//           NidaqmxError::ErrorCOCannotKeepUpInHWTimedSinglePoint => nidaqmx_sys::DAQmxErrorCOCannotKeepUpInHWTimedSinglePoint,
//           NidaqmxError::ErrorWaitForNextSampClkDetected3OrMoreSampClks => nidaqmx_sys::DAQmxErrorWaitForNextSampClkDetected3OrMoreSampClks,
//           NidaqmxError::ErrorWaitForNextSampClkDetectedMissedSampClk => nidaqmx_sys::DAQmxErrorWaitForNextSampClkDetectedMissedSampClk,
//           NidaqmxError::ErrorWriteNotCompleteBeforeSampClk => nidaqmx_sys::DAQmxErrorWriteNotCompleteBeforeSampClk,
//           NidaqmxError::ErrorReadNotCompleteBeforeSampClk => nidaqmx_sys::DAQmxErrorReadNotCompleteBeforeSampClk,
//           NidaqmxError::ErrorInconsistentDigitalFilteringAcrossTerminals => nidaqmx_sys::DAQmxErrorInconsistentDigitalFilteringAcrossTerminals,
//           NidaqmxError::ErrorInconsistentPullUpCfgAcrossTerminals => nidaqmx_sys::DAQmxErrorInconsistentPullUpCfgAcrossTerminals,
//           NidaqmxError::ErrorInconsistentTermCfgAcrossTerminals => nidaqmx_sys::DAQmxErrorInconsistentTermCfgAcrossTerminals,
//           NidaqmxError::ErrorVCXODCMBecameUnlocked => nidaqmx_sys::DAQmxErrorVCXODCMBecameUnlocked,
//           NidaqmxError::ErrorPLLDACUpdateFailed => nidaqmx_sys::DAQmxErrorPLLDACUpdateFailed,
//           NidaqmxError::ErrorNoCabledDevice => nidaqmx_sys::DAQmxErrorNoCabledDevice,
//           NidaqmxError::ErrorLostRefClk => nidaqmx_sys::DAQmxErrorLostRefClk,
//           NidaqmxError::ErrorCantUseAITimingEngineWithCounters => nidaqmx_sys::DAQmxErrorCantUseAITimingEngineWithCounters,
//           NidaqmxError::ErrorDACOffsetValNotSet => nidaqmx_sys::DAQmxErrorDACOffsetValNotSet,
//           NidaqmxError::ErrorCalAdjustRefValOutOfRange => nidaqmx_sys::DAQmxErrorCalAdjustRefValOutOfRange,
//           NidaqmxError::ErrorChansForCalAdjustMustPerformSetContext => nidaqmx_sys::DAQmxErrorChansForCalAdjustMustPerformSetContext,
//           NidaqmxError::ErrorGetCalDataInvalidForCalMode => nidaqmx_sys::DAQmxErrorGetCalDataInvalidForCalMode,
//           NidaqmxError::ErrorNoIEPEWithACNotAllowed => nidaqmx_sys::DAQmxErrorNoIEPEWithACNotAllowed,
//           NidaqmxError::ErrorSetupCalNeededBeforeGetCalDataPoints => nidaqmx_sys::DAQmxErrorSetupCalNeededBeforeGetCalDataPoints,
//           NidaqmxError::ErrorVoltageNotCalibrated => nidaqmx_sys::DAQmxErrorVoltageNotCalibrated,
//           NidaqmxError::ErrorMissingRangeForCalibration => nidaqmx_sys::DAQmxErrorMissingRangeForCalibration,
//           NidaqmxError::ErrorMultipleChansNotSupportedDuringCalAdjust => nidaqmx_sys::DAQmxErrorMultipleChansNotSupportedDuringCalAdjust,
//           NidaqmxError::ErrorShuntCalFailedOutOfRange => nidaqmx_sys::DAQmxErrorShuntCalFailedOutOfRange,
//           NidaqmxError::ErrorOperationNotSupportedOnSimulatedDevice => nidaqmx_sys::DAQmxErrorOperationNotSupportedOnSimulatedDevice,
//           NidaqmxError::ErrorFirmwareVersionSameAsInstalledVersion => nidaqmx_sys::DAQmxErrorFirmwareVersionSameAsInstalledVersion,
//           NidaqmxError::ErrorFirmwareVersionOlderThanInstalledVersion => nidaqmx_sys::DAQmxErrorFirmwareVersionOlderThanInstalledVersion,
//           NidaqmxError::ErrorFirmwareUpdateInvalidState => nidaqmx_sys::DAQmxErrorFirmwareUpdateInvalidState,
//           NidaqmxError::ErrorFirmwareUpdateInvalidID => nidaqmx_sys::DAQmxErrorFirmwareUpdateInvalidID,
//           NidaqmxError::ErrorFirmwareUpdateAutomaticManagementEnabled => nidaqmx_sys::DAQmxErrorFirmwareUpdateAutomaticManagementEnabled,
//           NidaqmxError::ErrorSetupCalibrationNotCalled => nidaqmx_sys::DAQmxErrorSetupCalibrationNotCalled,
//           NidaqmxError::ErrorCalMeasuredDataSizeVsActualDataSizeMismatch => nidaqmx_sys::DAQmxErrorCalMeasuredDataSizeVsActualDataSizeMismatch,
//           NidaqmxError::ErrorCDAQMissingDSAMasterForChanExpansion => nidaqmx_sys::DAQmxErrorCDAQMissingDSAMasterForChanExpansion,
//           NidaqmxError::ErrorCDAQMasterNotFoundForChanExpansion => nidaqmx_sys::DAQmxErrorCDAQMasterNotFoundForChanExpansion,
//           NidaqmxError::ErrorAllChansShouldBeProvidedForCalibration => nidaqmx_sys::DAQmxErrorAllChansShouldBeProvidedForCalibration,
//           NidaqmxError::ErrorMustSpecifyExpirationStateForAllLinesInRange => nidaqmx_sys::DAQmxErrorMustSpecifyExpirationStateForAllLinesInRange,
//           NidaqmxError::ErrorOpenSessionExists => nidaqmx_sys::DAQmxErrorOpenSessionExists,
//           NidaqmxError::ErrorCannotQueryTerminalForSWArmStart => nidaqmx_sys::DAQmxErrorCannotQueryTerminalForSWArmStart,
//           NidaqmxError::ErrorChassisWatchdogTimerExpired => nidaqmx_sys::DAQmxErrorChassisWatchdogTimerExpired,
//           NidaqmxError::ErrorCantReserveWatchdogTaskWhileOtherTasksReserved => nidaqmx_sys::DAQmxErrorCantReserveWatchdogTaskWhileOtherTasksReserved,
//           NidaqmxError::ErrorCantReserveTaskWhileWatchdogTaskReserving => nidaqmx_sys::DAQmxErrorCantReserveTaskWhileWatchdogTaskReserving,
//           NidaqmxError::ErrorAuxPowerSourceRequired => nidaqmx_sys::DAQmxErrorAuxPowerSourceRequired,
//           NidaqmxError::ErrorDeviceNotSupportedOnLocalSystem => nidaqmx_sys::DAQmxErrorDeviceNotSupportedOnLocalSystem,
//           NidaqmxError::ErrorOneTimestampChannelRequiredForCombinedNavigationRead => nidaqmx_sys::DAQmxErrorOneTimestampChannelRequiredForCombinedNavigationRead,
//           NidaqmxError::ErrorMultDevsMultPhysChans => nidaqmx_sys::DAQmxErrorMultDevsMultPhysChans,
//           NidaqmxError::ErrorInvalidCalAdjustmentPointValues => nidaqmx_sys::DAQmxErrorInvalidCalAdjustmentPointValues,
//           NidaqmxError::ErrorDifferentDigitizerFromCommunicator => nidaqmx_sys::DAQmxErrorDifferentDigitizerFromCommunicator,
//           NidaqmxError::ErrorCDAQSyncMasterClockNotPresent => nidaqmx_sys::DAQmxErrorCDAQSyncMasterClockNotPresent,
//           NidaqmxError::ErrorAssociatedChansHaveConflictingProps => nidaqmx_sys::DAQmxErrorAssociatedChansHaveConflictingProps,
//           NidaqmxError::ErrorAutoConfigBetweenMultipleDeviceStatesInvalid => nidaqmx_sys::DAQmxErrorAutoConfigBetweenMultipleDeviceStatesInvalid,
//           NidaqmxError::ErrorAutoConfigOfOfflineDevicesInvalid => nidaqmx_sys::DAQmxErrorAutoConfigOfOfflineDevicesInvalid,
//           NidaqmxError::ErrorExternalFIFOFault => nidaqmx_sys::DAQmxErrorExternalFIFOFault,
//           NidaqmxError::ErrorConnectionsNotReciprocal => nidaqmx_sys::DAQmxErrorConnectionsNotReciprocal,
//           NidaqmxError::ErrorInvalidOutputToInputCDAQSyncConnection => nidaqmx_sys::DAQmxErrorInvalidOutputToInputCDAQSyncConnection,
//           NidaqmxError::ErrorReferenceClockNotPresent => nidaqmx_sys::DAQmxErrorReferenceClockNotPresent,
//           NidaqmxError::ErrorBlankStringExpansionFoundNoSupportedCDAQSyncConnectionDevices => nidaqmx_sys::DAQmxErrorBlankStringExpansionFoundNoSupportedCDAQSyncConnectionDevices,
//           NidaqmxError::ErrorNoDevicesSupportCDAQSyncConnections => nidaqmx_sys::DAQmxErrorNoDevicesSupportCDAQSyncConnections,
//           NidaqmxError::ErrorInvalidCDAQSyncTimeoutValue => nidaqmx_sys::DAQmxErrorInvalidCDAQSyncTimeoutValue,
//           NidaqmxError::ErrorCDAQSyncConnectionToSamePort => nidaqmx_sys::DAQmxErrorCDAQSyncConnectionToSamePort,
//           NidaqmxError::ErrorDevsWithoutCommonSyncConnectionStrategy => nidaqmx_sys::DAQmxErrorDevsWithoutCommonSyncConnectionStrategy,
//           NidaqmxError::ErrorNoCDAQSyncBetweenPhysAndSimulatedDevs => nidaqmx_sys::DAQmxErrorNoCDAQSyncBetweenPhysAndSimulatedDevs,
//           NidaqmxError::ErrorUnableToContainCards => nidaqmx_sys::DAQmxErrorUnableToContainCards,
//           NidaqmxError::ErrorFindDisconnectedBetweenPhysAndSimDeviceStatesInvalid => nidaqmx_sys::DAQmxErrorFindDisconnectedBetweenPhysAndSimDeviceStatesInvalid,
//           NidaqmxError::ErrorOperationAborted => nidaqmx_sys::DAQmxErrorOperationAborted,
//           NidaqmxError::ErrorTwoPortsRequired => nidaqmx_sys::DAQmxErrorTwoPortsRequired,
//           NidaqmxError::ErrorDeviceDoesNotSupportCDAQSyncConnections => nidaqmx_sys::DAQmxErrorDeviceDoesNotSupportCDAQSyncConnections,
//           NidaqmxError::ErrorInvalidcDAQSyncPortConnectionFormat => nidaqmx_sys::DAQmxErrorInvalidcDAQSyncPortConnectionFormat,
//           NidaqmxError::ErrorRosetteMeasurementsNotSpecified => nidaqmx_sys::DAQmxErrorRosetteMeasurementsNotSpecified,
//           NidaqmxError::ErrorInvalidNumOfPhysChansForDeltaRosette => nidaqmx_sys::DAQmxErrorInvalidNumOfPhysChansForDeltaRosette,
//           NidaqmxError::ErrorInvalidNumOfPhysChansForTeeRosette => nidaqmx_sys::DAQmxErrorInvalidNumOfPhysChansForTeeRosette,
//           NidaqmxError::ErrorRosetteStrainChanNamesNeeded => nidaqmx_sys::DAQmxErrorRosetteStrainChanNamesNeeded,
//           NidaqmxError::ErrorMultideviceWithOnDemandTiming => nidaqmx_sys::DAQmxErrorMultideviceWithOnDemandTiming,
//           NidaqmxError::ErrorFREQOUTCannotProduceDesiredFrequency3 => nidaqmx_sys::DAQmxErrorFREQOUTCannotProduceDesiredFrequency3,
//           NidaqmxError::ErrorTwoEdgeSeparationSameTerminalSameEdge => nidaqmx_sys::DAQmxErrorTwoEdgeSeparationSameTerminalSameEdge,
//           NidaqmxError::ErrorDontMixSyncPulseAndSampClkTimebaseOn449x => nidaqmx_sys::DAQmxErrorDontMixSyncPulseAndSampClkTimebaseOn449x,
//           NidaqmxError::ErrorNeitherRefClkNorSampClkTimebaseConfiguredForDSASync => nidaqmx_sys::DAQmxErrorNeitherRefClkNorSampClkTimebaseConfiguredForDSASync,
//           NidaqmxError::ErrorRetriggeringFiniteCONotAllowed => nidaqmx_sys::DAQmxErrorRetriggeringFiniteCONotAllowed,
//           NidaqmxError::ErrorDeviceRebootedFromWDTTimeout => nidaqmx_sys::DAQmxErrorDeviceRebootedFromWDTTimeout,
//           NidaqmxError::ErrorTimeoutValueExceedsMaximum => nidaqmx_sys::DAQmxErrorTimeoutValueExceedsMaximum,
//           NidaqmxError::ErrorSharingDifferentWireModes => nidaqmx_sys::DAQmxErrorSharingDifferentWireModes,
//           NidaqmxError::ErrorCantPrimeWithEmptyBuffer => nidaqmx_sys::DAQmxErrorCantPrimeWithEmptyBuffer,
//           NidaqmxError::ErrorConfigFailedBecauseWatchdogExpired => nidaqmx_sys::DAQmxErrorConfigFailedBecauseWatchdogExpired,
//           NidaqmxError::ErrorWriteFailedBecauseWatchdogChangedLineDirection => nidaqmx_sys::DAQmxErrorWriteFailedBecauseWatchdogChangedLineDirection,
//           NidaqmxError::ErrorMultipleSubsytemCalibration => nidaqmx_sys::DAQmxErrorMultipleSubsytemCalibration,
//           NidaqmxError::ErrorIncorrectChannelForOffsetAdjustment => nidaqmx_sys::DAQmxErrorIncorrectChannelForOffsetAdjustment,
//           NidaqmxError::ErrorInvalidNumRefVoltagesToWrite => nidaqmx_sys::DAQmxErrorInvalidNumRefVoltagesToWrite,
//           NidaqmxError::ErrorStartTrigDelayWithDSAModule => nidaqmx_sys::DAQmxErrorStartTrigDelayWithDSAModule,
//           NidaqmxError::ErrorMoreThanOneSyncPulseDetected => nidaqmx_sys::DAQmxErrorMoreThanOneSyncPulseDetected,
//           NidaqmxError::ErrorDevNotSupportedWithinDAQmxAPI => nidaqmx_sys::DAQmxErrorDevNotSupportedWithinDAQmxAPI,
//           NidaqmxError::ErrorDevsWithoutSyncStrategies => nidaqmx_sys::DAQmxErrorDevsWithoutSyncStrategies,
//           NidaqmxError::ErrorDevsWithoutCommonSyncStrategy => nidaqmx_sys::DAQmxErrorDevsWithoutCommonSyncStrategy,
//           NidaqmxError::ErrorSyncStrategiesCannotSync => nidaqmx_sys::DAQmxErrorSyncStrategiesCannotSync,
//           NidaqmxError::ErrorChassisCommunicationInterrupted => nidaqmx_sys::DAQmxErrorChassisCommunicationInterrupted,
//           NidaqmxError::ErrorUnknownCardPowerProfileInCarrier => nidaqmx_sys::DAQmxErrorUnknownCardPowerProfileInCarrier,
//           NidaqmxError::ErrorAttrNotSupportedOnAccessory => nidaqmx_sys::DAQmxErrorAttrNotSupportedOnAccessory,
//           NidaqmxError::ErrorNetworkDeviceReservedByAnotherHost => nidaqmx_sys::DAQmxErrorNetworkDeviceReservedByAnotherHost,
//           NidaqmxError::ErrorIncorrectFirmwareFileUploaded => nidaqmx_sys::DAQmxErrorIncorrectFirmwareFileUploaded,
//           NidaqmxError::ErrorInvalidFirmwareFileUploaded => nidaqmx_sys::DAQmxErrorInvalidFirmwareFileUploaded,
//           NidaqmxError::ErrorInTimerTimeoutOnArm => nidaqmx_sys::DAQmxErrorInTimerTimeoutOnArm,
//           NidaqmxError::ErrorCantExceedSlotRelayDriveLimit => nidaqmx_sys::DAQmxErrorCantExceedSlotRelayDriveLimit,
//           NidaqmxError::ErrorModuleUnsupportedFor9163 => nidaqmx_sys::DAQmxErrorModuleUnsupportedFor9163,
//           NidaqmxError::ErrorConnectionsNotSupported => nidaqmx_sys::DAQmxErrorConnectionsNotSupported,
//           NidaqmxError::ErrorAccessoryNotPresent => nidaqmx_sys::DAQmxErrorAccessoryNotPresent,
//           NidaqmxError::ErrorSpecifiedAccessoryChannelsNotPresentOnDevice => nidaqmx_sys::DAQmxErrorSpecifiedAccessoryChannelsNotPresentOnDevice,
//           NidaqmxError::ErrorConnectionsNotSupportedOnAccessory => nidaqmx_sys::DAQmxErrorConnectionsNotSupportedOnAccessory,
//           NidaqmxError::ErrorRateTooFastForHWTSP => nidaqmx_sys::DAQmxErrorRateTooFastForHWTSP,
//           NidaqmxError::ErrorDelayFromSampleClockOutOfRangeForHWTSP => nidaqmx_sys::DAQmxErrorDelayFromSampleClockOutOfRangeForHWTSP,
//           NidaqmxError::ErrorAveragingWhenNotInternalHWTSP => nidaqmx_sys::DAQmxErrorAveragingWhenNotInternalHWTSP,
//           NidaqmxError::ErrorAttributeNotSupportedUnlessHWTSP => nidaqmx_sys::DAQmxErrorAttributeNotSupportedUnlessHWTSP,
//           NidaqmxError::ErrorFiveVoltDetectFailed => nidaqmx_sys::DAQmxErrorFiveVoltDetectFailed,
//           NidaqmxError::ErrorAnalogBusStateInconsistent => nidaqmx_sys::DAQmxErrorAnalogBusStateInconsistent,
//           NidaqmxError::ErrorCardDetectedDoesNotMatchExpectedCard => nidaqmx_sys::DAQmxErrorCardDetectedDoesNotMatchExpectedCard,
//           NidaqmxError::ErrorLoggingStartNewFileNotCalled => nidaqmx_sys::DAQmxErrorLoggingStartNewFileNotCalled,
//           NidaqmxError::ErrorLoggingSampsPerFileNotDivisible => nidaqmx_sys::DAQmxErrorLoggingSampsPerFileNotDivisible,
//           NidaqmxError::ErrorRetrievingNetworkDeviceProperties => nidaqmx_sys::DAQmxErrorRetrievingNetworkDeviceProperties,
//           NidaqmxError::ErrorFilePreallocationFailed => nidaqmx_sys::DAQmxErrorFilePreallocationFailed,
//           NidaqmxError::ErrorModuleMismatchInSameTimedTask => nidaqmx_sys::DAQmxErrorModuleMismatchInSameTimedTask,
//           NidaqmxError::ErrorInvalidAttributeValuePossiblyDueToOtherAttributeValues => nidaqmx_sys::DAQmxErrorInvalidAttributeValuePossiblyDueToOtherAttributeValues,
//           NidaqmxError::ErrorChangeDetectionStoppedToPreventDeviceHang => nidaqmx_sys::DAQmxErrorChangeDetectionStoppedToPreventDeviceHang,
//           NidaqmxError::ErrorFilterDelayRemovalNotPosssibleWithAnalogTrigger => nidaqmx_sys::DAQmxErrorFilterDelayRemovalNotPosssibleWithAnalogTrigger,
//           NidaqmxError::ErrorNonbufferedOrNoChannels => nidaqmx_sys::DAQmxErrorNonbufferedOrNoChannels,
//           NidaqmxError::ErrorTristateLogicLevelNotSpecdForEntirePort => nidaqmx_sys::DAQmxErrorTristateLogicLevelNotSpecdForEntirePort,
//           NidaqmxError::ErrorTristateLogicLevelNotSupportedOnDigOutChan => nidaqmx_sys::DAQmxErrorTristateLogicLevelNotSupportedOnDigOutChan,
//           NidaqmxError::ErrorTristateLogicLevelNotSupported => nidaqmx_sys::DAQmxErrorTristateLogicLevelNotSupported,
//           NidaqmxError::ErrorIncompleteGainAndCouplingCalAdjustment => nidaqmx_sys::DAQmxErrorIncompleteGainAndCouplingCalAdjustment,
//           NidaqmxError::ErrorNetworkStatusConnectionLost => nidaqmx_sys::DAQmxErrorNetworkStatusConnectionLost,
//           NidaqmxError::ErrorModuleChangeDuringConnectionLoss => nidaqmx_sys::DAQmxErrorModuleChangeDuringConnectionLoss,
//           NidaqmxError::ErrorNetworkDeviceNotReservedByHost => nidaqmx_sys::DAQmxErrorNetworkDeviceNotReservedByHost,
//           NidaqmxError::ErrorDuplicateCalibrationAdjustmentInput => nidaqmx_sys::DAQmxErrorDuplicateCalibrationAdjustmentInput,
//           NidaqmxError::ErrorSelfCalFailedContactTechSupport => nidaqmx_sys::DAQmxErrorSelfCalFailedContactTechSupport,
//           NidaqmxError::ErrorSelfCalFailedToConverge => nidaqmx_sys::DAQmxErrorSelfCalFailedToConverge,
//           NidaqmxError::ErrorUnsupportedSimulatedModuleForSimulatedChassis => nidaqmx_sys::DAQmxErrorUnsupportedSimulatedModuleForSimulatedChassis,
//           NidaqmxError::ErrorLoggingWriteSizeTooBig => nidaqmx_sys::DAQmxErrorLoggingWriteSizeTooBig,
//           NidaqmxError::ErrorLoggingWriteSizeNotDivisible => nidaqmx_sys::DAQmxErrorLoggingWriteSizeNotDivisible,
//           NidaqmxError::ErrorMyDAQPowerRailFault => nidaqmx_sys::DAQmxErrorMyDAQPowerRailFault,
//           NidaqmxError::ErrorDeviceDoesNotSupportThisOperation => nidaqmx_sys::DAQmxErrorDeviceDoesNotSupportThisOperation,
//           NidaqmxError::ErrorNetworkDevicesNotSupportedOnThisPlatform => nidaqmx_sys::DAQmxErrorNetworkDevicesNotSupportedOnThisPlatform,
//           NidaqmxError::ErrorUnknownFirmwareVersion => nidaqmx_sys::DAQmxErrorUnknownFirmwareVersion,
//           NidaqmxError::ErrorFirmwareIsUpdating => nidaqmx_sys::DAQmxErrorFirmwareIsUpdating,
//           NidaqmxError::ErrorAccessoryEEPROMIsCorrupt => nidaqmx_sys::DAQmxErrorAccessoryEEPROMIsCorrupt,
//           NidaqmxError::ErrorThrmcplLeadOffsetNullingCalNotSupported => nidaqmx_sys::DAQmxErrorThrmcplLeadOffsetNullingCalNotSupported,
//           NidaqmxError::ErrorSelfCalFailedTryExtCal => nidaqmx_sys::DAQmxErrorSelfCalFailedTryExtCal,
//           NidaqmxError::ErrorOutputP2PNotSupportedWithMultithreadedScripts => nidaqmx_sys::DAQmxErrorOutputP2PNotSupportedWithMultithreadedScripts,
//           NidaqmxError::ErrorThrmcplCalibrationChannelsOpen => nidaqmx_sys::DAQmxErrorThrmcplCalibrationChannelsOpen,
//           NidaqmxError::ErrorMDNSServiceInstanceAlreadyInUse => nidaqmx_sys::DAQmxErrorMDNSServiceInstanceAlreadyInUse,
//           NidaqmxError::ErrorIPAddressAlreadyInUse => nidaqmx_sys::DAQmxErrorIPAddressAlreadyInUse,
//           NidaqmxError::ErrorHostnameAlreadyInUse => nidaqmx_sys::DAQmxErrorHostnameAlreadyInUse,
//           NidaqmxError::ErrorInvalidNumberOfCalAdjustmentPoints => nidaqmx_sys::DAQmxErrorInvalidNumberOfCalAdjustmentPoints,
//           NidaqmxError::ErrorFilterOrDigitalSyncInternalSignal => nidaqmx_sys::DAQmxErrorFilterOrDigitalSyncInternalSignal,
//           NidaqmxError::ErrorBadDDSSource => nidaqmx_sys::DAQmxErrorBadDDSSource,
//           NidaqmxError::ErrorOnboardRegenWithMoreThan16Channels => nidaqmx_sys::DAQmxErrorOnboardRegenWithMoreThan16Channels,
//           NidaqmxError::ErrorTriggerTooFast => nidaqmx_sys::DAQmxErrorTriggerTooFast,
//           NidaqmxError::ErrorMinMaxOutsideTableRange => nidaqmx_sys::DAQmxErrorMinMaxOutsideTableRange,
//           NidaqmxError::ErrorChannelExpansionWithInvalidAnalogTriggerDevice => nidaqmx_sys::DAQmxErrorChannelExpansionWithInvalidAnalogTriggerDevice,
//           NidaqmxError::ErrorSyncPulseSrcInvalidForTask => nidaqmx_sys::DAQmxErrorSyncPulseSrcInvalidForTask,
//           NidaqmxError::ErrorInvalidCarrierSlotNumberSpecd => nidaqmx_sys::DAQmxErrorInvalidCarrierSlotNumberSpecd,
//           NidaqmxError::ErrorCardsMustBeInSameCarrier => nidaqmx_sys::DAQmxErrorCardsMustBeInSameCarrier,
//           NidaqmxError::ErrorCardDevCarrierSimMustMatch => nidaqmx_sys::DAQmxErrorCardDevCarrierSimMustMatch,
//           NidaqmxError::ErrorDevMustHaveAtLeastOneCard => nidaqmx_sys::DAQmxErrorDevMustHaveAtLeastOneCard,
//           NidaqmxError::ErrorCardTopologyError => nidaqmx_sys::DAQmxErrorCardTopologyError,
//           NidaqmxError::ErrorExceededCarrierPowerLimit => nidaqmx_sys::DAQmxErrorExceededCarrierPowerLimit,
//           NidaqmxError::ErrorCardsIncompatible => nidaqmx_sys::DAQmxErrorCardsIncompatible,
//           NidaqmxError::ErrorAnalogBusNotValid => nidaqmx_sys::DAQmxErrorAnalogBusNotValid,
//           NidaqmxError::ErrorReservationConflict => nidaqmx_sys::DAQmxErrorReservationConflict,
//           NidaqmxError::ErrorMemMappedOnDemandNotSupported => nidaqmx_sys::DAQmxErrorMemMappedOnDemandNotSupported,
//           NidaqmxError::ErrorSlaveWithNoStartTriggerConfigured => nidaqmx_sys::DAQmxErrorSlaveWithNoStartTriggerConfigured,
//           NidaqmxError::ErrorChannelExpansionWithDifferentTriggerDevices => nidaqmx_sys::DAQmxErrorChannelExpansionWithDifferentTriggerDevices,
//           NidaqmxError::ErrorCounterSyncAndRetriggered => nidaqmx_sys::DAQmxErrorCounterSyncAndRetriggered,
//           NidaqmxError::ErrorNoExternalSyncPulseDetected => nidaqmx_sys::DAQmxErrorNoExternalSyncPulseDetected,
//           NidaqmxError::ErrorSlaveAndNoExternalSyncPulse => nidaqmx_sys::DAQmxErrorSlaveAndNoExternalSyncPulse,
//           NidaqmxError::ErrorCustomTimingRequiredForAttribute => nidaqmx_sys::DAQmxErrorCustomTimingRequiredForAttribute,
//           NidaqmxError::ErrorCustomTimingModeNotSet => nidaqmx_sys::DAQmxErrorCustomTimingModeNotSet,
//           NidaqmxError::ErrorAccessoryPowerTripped => nidaqmx_sys::DAQmxErrorAccessoryPowerTripped,
//           NidaqmxError::ErrorUnsupportedAccessory => nidaqmx_sys::DAQmxErrorUnsupportedAccessory,
//           NidaqmxError::ErrorInvalidAccessoryChange => nidaqmx_sys::DAQmxErrorInvalidAccessoryChange,
//           NidaqmxError::ErrorFirmwareRequiresUpgrade => nidaqmx_sys::DAQmxErrorFirmwareRequiresUpgrade,
//           NidaqmxError::ErrorFastExternalTimebaseNotSupportedForDevice => nidaqmx_sys::DAQmxErrorFastExternalTimebaseNotSupportedForDevice,
//           NidaqmxError::ErrorInvalidShuntLocationForCalibration => nidaqmx_sys::DAQmxErrorInvalidShuntLocationForCalibration,
//           NidaqmxError::ErrorDeviceNameTooLong => nidaqmx_sys::DAQmxErrorDeviceNameTooLong,
//           NidaqmxError::ErrorBridgeScalesUnsupported => nidaqmx_sys::DAQmxErrorBridgeScalesUnsupported,
//           NidaqmxError::ErrorMismatchedElecPhysValues => nidaqmx_sys::DAQmxErrorMismatchedElecPhysValues,
//           NidaqmxError::ErrorLinearRequiresUniquePoints => nidaqmx_sys::DAQmxErrorLinearRequiresUniquePoints,
//           NidaqmxError::ErrorMissingRequiredScalingParameter => nidaqmx_sys::DAQmxErrorMissingRequiredScalingParameter,
//           NidaqmxError::ErrorLoggingNotSupportOnOutputTasks => nidaqmx_sys::DAQmxErrorLoggingNotSupportOnOutputTasks,
//           NidaqmxError::ErrorMemoryMappedHardwareTimedNonBufferedUnsupported => nidaqmx_sys::DAQmxErrorMemoryMappedHardwareTimedNonBufferedUnsupported,
//           NidaqmxError::ErrorCannotUpdatePulseTrainWithAutoIncrementEnabled => nidaqmx_sys::DAQmxErrorCannotUpdatePulseTrainWithAutoIncrementEnabled,
//           NidaqmxError::ErrorHWTimedSinglePointAndDataXferNotDMA => nidaqmx_sys::DAQmxErrorHWTimedSinglePointAndDataXferNotDMA,
//           NidaqmxError::ErrorSCCSecondStageEmpty => nidaqmx_sys::DAQmxErrorSCCSecondStageEmpty,
//           NidaqmxError::ErrorSCCInvalidDualStageCombo => nidaqmx_sys::DAQmxErrorSCCInvalidDualStageCombo,
//           NidaqmxError::ErrorSCCInvalidSecondStage => nidaqmx_sys::DAQmxErrorSCCInvalidSecondStage,
//           NidaqmxError::ErrorSCCInvalidFirstStage => nidaqmx_sys::DAQmxErrorSCCInvalidFirstStage,
//           NidaqmxError::ErrorCounterMultipleSampleClockedChannels => nidaqmx_sys::DAQmxErrorCounterMultipleSampleClockedChannels,
//           NidaqmxError::ErrorTwoCounterMeasurementModeAndSampleClocked => nidaqmx_sys::DAQmxError2CounterMeasurementModeAndSampleClocked,
//           NidaqmxError::ErrorCantHaveBothMemMappedAndNonMemMappedTasks => nidaqmx_sys::DAQmxErrorCantHaveBothMemMappedAndNonMemMappedTasks,
//           NidaqmxError::ErrorMemMappedDataReadByAnotherProcess => nidaqmx_sys::DAQmxErrorMemMappedDataReadByAnotherProcess,
//           NidaqmxError::ErrorRetriggeringInvalidForGivenSettings => nidaqmx_sys::DAQmxErrorRetriggeringInvalidForGivenSettings,
//           NidaqmxError::ErrorAIOverrun => nidaqmx_sys::DAQmxErrorAIOverrun,
//           NidaqmxError::ErrorCOOverrun => nidaqmx_sys::DAQmxErrorCOOverrun,
//           NidaqmxError::ErrorCounterMultipleBufferedChannels => nidaqmx_sys::DAQmxErrorCounterMultipleBufferedChannels,
//           NidaqmxError::ErrorInvalidTimebaseForCOHWTSP => nidaqmx_sys::DAQmxErrorInvalidTimebaseForCOHWTSP,
//           NidaqmxError::ErrorWriteBeforeEvent => nidaqmx_sys::DAQmxErrorWriteBeforeEvent,
//           NidaqmxError::ErrorCIOverrun => nidaqmx_sys::DAQmxErrorCIOverrun,
//           NidaqmxError::ErrorCounterNonResponsiveAndReset => nidaqmx_sys::DAQmxErrorCounterNonResponsiveAndReset,
//           NidaqmxError::ErrorMeasTypeOrChannelNotSupportedForLogging => nidaqmx_sys::DAQmxErrorMeasTypeOrChannelNotSupportedForLogging,
//           NidaqmxError::ErrorFileAlreadyOpenedForWrite => nidaqmx_sys::DAQmxErrorFileAlreadyOpenedForWrite,
//           NidaqmxError::ErrorTdmsNotFound => nidaqmx_sys::DAQmxErrorTdmsNotFound,
//           NidaqmxError::ErrorGenericFileIO => nidaqmx_sys::DAQmxErrorGenericFileIO,
//           NidaqmxError::ErrorFiniteSTCCounterNotSupportedForLogging => nidaqmx_sys::DAQmxErrorFiniteSTCCounterNotSupportedForLogging,
//           NidaqmxError::ErrorMeasurementTypeNotSupportedForLogging => nidaqmx_sys::DAQmxErrorMeasurementTypeNotSupportedForLogging,
//           NidaqmxError::ErrorFileAlreadyOpened => nidaqmx_sys::DAQmxErrorFileAlreadyOpened,
//           NidaqmxError::ErrorDiskFull => nidaqmx_sys::DAQmxErrorDiskFull,
//           NidaqmxError::ErrorFilePathInvalid => nidaqmx_sys::DAQmxErrorFilePathInvalid,
//           NidaqmxError::ErrorFileVersionMismatch => nidaqmx_sys::DAQmxErrorFileVersionMismatch,
//           NidaqmxError::ErrorFileWriteProtected => nidaqmx_sys::DAQmxErrorFileWriteProtected,
//           NidaqmxError::ErrorReadNotSupportedForLoggingMode => nidaqmx_sys::DAQmxErrorReadNotSupportedForLoggingMode,
//           NidaqmxError::ErrorAttributeNotSupportedWhenLogging => nidaqmx_sys::DAQmxErrorAttributeNotSupportedWhenLogging,
//           NidaqmxError::ErrorLoggingModeNotSupportedNonBuffered => nidaqmx_sys::DAQmxErrorLoggingModeNotSupportedNonBuffered,
//           NidaqmxError::ErrorPropertyNotSupportedWithConflictingProperty => nidaqmx_sys::DAQmxErrorPropertyNotSupportedWithConflictingProperty,
//           NidaqmxError::ErrorParallelSSHOnConnector1 => nidaqmx_sys::DAQmxErrorParallelSSHOnConnector1,
//           NidaqmxError::ErrorCOOnlyImplicitSampleTimingTypeSupported => nidaqmx_sys::DAQmxErrorCOOnlyImplicitSampleTimingTypeSupported,
//           NidaqmxError::ErrorCalibrationFailedAOOutOfRange => nidaqmx_sys::DAQmxErrorCalibrationFailedAOOutOfRange,
//           NidaqmxError::ErrorCalibrationFailedAIOutOfRange => nidaqmx_sys::DAQmxErrorCalibrationFailedAIOutOfRange,
//           NidaqmxError::ErrorCalPWMLinearityFailed => nidaqmx_sys::DAQmxErrorCalPWMLinearityFailed,
//           NidaqmxError::ErrorOverrunUnderflowConfigurationCombo => nidaqmx_sys::DAQmxErrorOverrunUnderflowConfigurationCombo,
//           NidaqmxError::ErrorCannotWriteToFiniteCOTask => nidaqmx_sys::DAQmxErrorCannotWriteToFiniteCOTask,
//           NidaqmxError::ErrorNetworkDAQInvalidWEPKeyLength => nidaqmx_sys::DAQmxErrorNetworkDAQInvalidWEPKeyLength,
//           NidaqmxError::ErrorCalInputsShortedNotSupported => nidaqmx_sys::DAQmxErrorCalInputsShortedNotSupported,
//           NidaqmxError::ErrorCannotSetPropertyWhenTaskIsReserved => nidaqmx_sys::DAQmxErrorCannotSetPropertyWhenTaskIsReserved,
//           NidaqmxError::ErrorMinus12VFuseBlown => nidaqmx_sys::DAQmxErrorMinus12VFuseBlown,
//           NidaqmxError::ErrorPlus12VFuseBlown => nidaqmx_sys::DAQmxErrorPlus12VFuseBlown,
//           NidaqmxError::ErrorPlus5VFuseBlown => nidaqmx_sys::DAQmxErrorPlus5VFuseBlown,
//           NidaqmxError::ErrorPlus3VFuseBlown => nidaqmx_sys::DAQmxErrorPlus3VFuseBlown,
//           NidaqmxError::ErrorDeviceSerialPortError => nidaqmx_sys::DAQmxErrorDeviceSerialPortError,
//           NidaqmxError::ErrorPowerUpStateMachineNotDone => nidaqmx_sys::DAQmxErrorPowerUpStateMachineNotDone,
//           NidaqmxError::ErrorTooManyTriggersSpecifiedInTask => nidaqmx_sys::DAQmxErrorTooManyTriggersSpecifiedInTask,
//           NidaqmxError::ErrorVerticalOffsetNotSupportedOnDevice => nidaqmx_sys::DAQmxErrorVerticalOffsetNotSupportedOnDevice,
//           NidaqmxError::ErrorInvalidCouplingForMeasurementType => nidaqmx_sys::DAQmxErrorInvalidCouplingForMeasurementType,
//           NidaqmxError::ErrorDigitalLineUpdateTooFastForDevice => nidaqmx_sys::DAQmxErrorDigitalLineUpdateTooFastForDevice,
//           NidaqmxError::ErrorCertificateIsTooBigToTransfer => nidaqmx_sys::DAQmxErrorCertificateIsTooBigToTransfer,
//           NidaqmxError::ErrorOnlyPEMOrDERCertiticatesAccepted => nidaqmx_sys::DAQmxErrorOnlyPEMOrDERCertiticatesAccepted,
//           NidaqmxError::ErrorCalCouplingNotSupported => nidaqmx_sys::DAQmxErrorCalCouplingNotSupported,
//           NidaqmxError::ErrorDeviceNotSupportedIn64Bit => nidaqmx_sys::DAQmxErrorDeviceNotSupportedIn64Bit,
//           NidaqmxError::ErrorNetworkDeviceInUse => nidaqmx_sys::DAQmxErrorNetworkDeviceInUse,
//           NidaqmxError::ErrorInvalidIPv4AddressFormat => nidaqmx_sys::DAQmxErrorInvalidIPv4AddressFormat,
//           NidaqmxError::ErrorNetworkProductTypeMismatch => nidaqmx_sys::DAQmxErrorNetworkProductTypeMismatch,
//           NidaqmxError::ErrorOnlyPEMCertificatesAccepted => nidaqmx_sys::DAQmxErrorOnlyPEMCertificatesAccepted,
//           NidaqmxError::ErrorCalibrationRequiresPrototypingBoardEnabled => nidaqmx_sys::DAQmxErrorCalibrationRequiresPrototypingBoardEnabled,
//           NidaqmxError::ErrorAllCurrentLimitingResourcesAlreadyTaken => nidaqmx_sys::DAQmxErrorAllCurrentLimitingResourcesAlreadyTaken,
//           NidaqmxError::ErrorUserDefInfoStringBadLength => nidaqmx_sys::DAQmxErrorUserDefInfoStringBadLength,
//           NidaqmxError::ErrorPropertyNotFound => nidaqmx_sys::DAQmxErrorPropertyNotFound,
//           NidaqmxError::ErrorOverVoltageProtectionActivated => nidaqmx_sys::DAQmxErrorOverVoltageProtectionActivated,
//           NidaqmxError::ErrorScaledIQWaveformTooLarge => nidaqmx_sys::DAQmxErrorScaledIQWaveformTooLarge,
//           NidaqmxError::ErrorFirmwareFailedToDownload => nidaqmx_sys::DAQmxErrorFirmwareFailedToDownload,
//           NidaqmxError::ErrorPropertyNotSupportedForBusType => nidaqmx_sys::DAQmxErrorPropertyNotSupportedForBusType,
//           NidaqmxError::ErrorChangeRateWhileRunningCouldNotBeCompleted => nidaqmx_sys::DAQmxErrorChangeRateWhileRunningCouldNotBeCompleted,
//           NidaqmxError::ErrorCannotQueryManualControlAttribute => nidaqmx_sys::DAQmxErrorCannotQueryManualControlAttribute,
//           NidaqmxError::ErrorInvalidNetworkConfiguration => nidaqmx_sys::DAQmxErrorInvalidNetworkConfiguration,
//           NidaqmxError::ErrorInvalidWirelessConfiguration => nidaqmx_sys::DAQmxErrorInvalidWirelessConfiguration,
//           NidaqmxError::ErrorInvalidWirelessCountryCode => nidaqmx_sys::DAQmxErrorInvalidWirelessCountryCode,
//           NidaqmxError::ErrorInvalidWirelessChannel => nidaqmx_sys::DAQmxErrorInvalidWirelessChannel,
//           NidaqmxError::ErrorNetworkEEPROMHasChanged => nidaqmx_sys::DAQmxErrorNetworkEEPROMHasChanged,
//           NidaqmxError::ErrorNetworkSerialNumberMismatch => nidaqmx_sys::DAQmxErrorNetworkSerialNumberMismatch,
//           NidaqmxError::ErrorNetworkStatusDown => nidaqmx_sys::DAQmxErrorNetworkStatusDown,
//           NidaqmxError::ErrorNetworkTargetUnreachable => nidaqmx_sys::DAQmxErrorNetworkTargetUnreachable,
//           NidaqmxError::ErrorNetworkTargetNotFound => nidaqmx_sys::DAQmxErrorNetworkTargetNotFound,
//           NidaqmxError::ErrorNetworkStatusTimedOut => nidaqmx_sys::DAQmxErrorNetworkStatusTimedOut,
//           NidaqmxError::ErrorInvalidWirelessSecuritySelection => nidaqmx_sys::DAQmxErrorInvalidWirelessSecuritySelection,
//           NidaqmxError::ErrorNetworkDeviceConfigurationLocked => nidaqmx_sys::DAQmxErrorNetworkDeviceConfigurationLocked,
//           NidaqmxError::ErrorNetworkDAQDeviceNotSupported => nidaqmx_sys::DAQmxErrorNetworkDAQDeviceNotSupported,
//           NidaqmxError::ErrorNetworkDAQCannotCreateEmptySleeve => nidaqmx_sys::DAQmxErrorNetworkDAQCannotCreateEmptySleeve,
//           NidaqmxError::ErrorUserDefInfoStringTooLong => nidaqmx_sys::DAQmxErrorUserDefInfoStringTooLong,
//           NidaqmxError::ErrorModuleTypeDoesNotMatchModuleTypeInDestination => nidaqmx_sys::DAQmxErrorModuleTypeDoesNotMatchModuleTypeInDestination,
//           NidaqmxError::ErrorInvalidTEDSInterfaceAddress => nidaqmx_sys::DAQmxErrorInvalidTEDSInterfaceAddress,
//           NidaqmxError::ErrorDevDoesNotSupportSCXIComm => nidaqmx_sys::DAQmxErrorDevDoesNotSupportSCXIComm,
//           NidaqmxError::ErrorSCXICommDevConnector0MustBeCabledToModule => nidaqmx_sys::DAQmxErrorSCXICommDevConnector0MustBeCabledToModule,
//           NidaqmxError::ErrorSCXIModuleDoesNotSupportDigitizationMode => nidaqmx_sys::DAQmxErrorSCXIModuleDoesNotSupportDigitizationMode,
//           NidaqmxError::ErrorDevDoesNotSupportMultiplexedSCXIDigitizationMode => nidaqmx_sys::DAQmxErrorDevDoesNotSupportMultiplexedSCXIDigitizationMode,
//           NidaqmxError::ErrorDevOrDevPhysChanDoesNotSupportSCXIDigitization => nidaqmx_sys::DAQmxErrorDevOrDevPhysChanDoesNotSupportSCXIDigitization,
//           NidaqmxError::ErrorInvalidPhysChanName => nidaqmx_sys::DAQmxErrorInvalidPhysChanName,
//           NidaqmxError::ErrorSCXIChassisCommModeInvalid => nidaqmx_sys::DAQmxErrorSCXIChassisCommModeInvalid,
//           NidaqmxError::ErrorRequiredDependencyNotFound => nidaqmx_sys::DAQmxErrorRequiredDependencyNotFound,
//           NidaqmxError::ErrorInvalidStorage => nidaqmx_sys::DAQmxErrorInvalidStorage,
//           NidaqmxError::ErrorInvalidObject => nidaqmx_sys::DAQmxErrorInvalidObject,
//           NidaqmxError::ErrorStorageAlteredPriorToSave => nidaqmx_sys::DAQmxErrorStorageAlteredPriorToSave,
//           NidaqmxError::ErrorTaskDoesNotReferenceLocalChannel => nidaqmx_sys::DAQmxErrorTaskDoesNotReferenceLocalChannel,
//           NidaqmxError::ErrorReferencedDevSimMustMatchTarget => nidaqmx_sys::DAQmxErrorReferencedDevSimMustMatchTarget,
//           NidaqmxError::ErrorProgrammedIOFailsBecauseOfWatchdogTimer => nidaqmx_sys::DAQmxErrorProgrammedIOFailsBecauseOfWatchdogTimer,
//           NidaqmxError::ErrorWatchdogTimerFailsBecauseOfProgrammedIO => nidaqmx_sys::DAQmxErrorWatchdogTimerFailsBecauseOfProgrammedIO,
//           NidaqmxError::ErrorCantUseThisTimingEngineWithAPort => nidaqmx_sys::DAQmxErrorCantUseThisTimingEngineWithAPort,
//           NidaqmxError::ErrorProgrammedIOConflict => nidaqmx_sys::DAQmxErrorProgrammedIOConflict,
//           NidaqmxError::ErrorChangeDetectionIncompatibleWithProgrammedIO => nidaqmx_sys::DAQmxErrorChangeDetectionIncompatibleWithProgrammedIO,
//           NidaqmxError::ErrorTristateNotEnoughLines => nidaqmx_sys::DAQmxErrorTristateNotEnoughLines,
//           NidaqmxError::ErrorTristateConflict => nidaqmx_sys::DAQmxErrorTristateConflict,
//           NidaqmxError::ErrorGenerateOrFiniteWaitExpectedBeforeBreakBlock => nidaqmx_sys::DAQmxErrorGenerateOrFiniteWaitExpectedBeforeBreakBlock,
//           NidaqmxError::ErrorBreakBlockNotAllowedInLoop => nidaqmx_sys::DAQmxErrorBreakBlockNotAllowedInLoop,
//           NidaqmxError::ErrorClearTriggerNotAllowedInBreakBlock => nidaqmx_sys::DAQmxErrorClearTriggerNotAllowedInBreakBlock,
//           NidaqmxError::ErrorNestingNotAllowedInBreakBlock => nidaqmx_sys::DAQmxErrorNestingNotAllowedInBreakBlock,
//           NidaqmxError::ErrorIfElseBlockNotAllowedInBreakBlock => nidaqmx_sys::DAQmxErrorIfElseBlockNotAllowedInBreakBlock,
//           NidaqmxError::ErrorRepeatUntilTriggerLoopNotAllowedInBreakBlock => nidaqmx_sys::DAQmxErrorRepeatUntilTriggerLoopNotAllowedInBreakBlock,
//           NidaqmxError::ErrorWaitUntilTriggerNotAllowedInBreakBlock => nidaqmx_sys::DAQmxErrorWaitUntilTriggerNotAllowedInBreakBlock,
//           NidaqmxError::ErrorMarkerPosInvalidInBreakBlock => nidaqmx_sys::DAQmxErrorMarkerPosInvalidInBreakBlock,
//           NidaqmxError::ErrorInvalidWaitDurationInBreakBlock => nidaqmx_sys::DAQmxErrorInvalidWaitDurationInBreakBlock,
//           NidaqmxError::ErrorInvalidSubsetLengthInBreakBlock => nidaqmx_sys::DAQmxErrorInvalidSubsetLengthInBreakBlock,
//           NidaqmxError::ErrorInvalidWaveformLengthInBreakBlock => nidaqmx_sys::DAQmxErrorInvalidWaveformLengthInBreakBlock,
//           NidaqmxError::ErrorInvalidWaitDurationBeforeBreakBlock => nidaqmx_sys::DAQmxErrorInvalidWaitDurationBeforeBreakBlock,
//           NidaqmxError::ErrorInvalidSubsetLengthBeforeBreakBlock => nidaqmx_sys::DAQmxErrorInvalidSubsetLengthBeforeBreakBlock,
//           NidaqmxError::ErrorInvalidWaveformLengthBeforeBreakBlock => nidaqmx_sys::DAQmxErrorInvalidWaveformLengthBeforeBreakBlock,
//           NidaqmxError::ErrorSampleRateTooHighForADCTimingMode => nidaqmx_sys::DAQmxErrorSampleRateTooHighForADCTimingMode,
//           NidaqmxError::ErrorActiveDevNotSupportedWithMultiDevTask => nidaqmx_sys::DAQmxErrorActiveDevNotSupportedWithMultiDevTask,
//           NidaqmxError::ErrorRealDevAndSimDevNotSupportedInSameTask => nidaqmx_sys::DAQmxErrorRealDevAndSimDevNotSupportedInSameTask,
//           NidaqmxError::ErrorRTSISimMustMatchDevSim => nidaqmx_sys::DAQmxErrorRTSISimMustMatchDevSim,
//           NidaqmxError::ErrorBridgeShuntCaNotSupported => nidaqmx_sys::DAQmxErrorBridgeShuntCaNotSupported,
//           NidaqmxError::ErrorStrainShuntCaNotSupported => nidaqmx_sys::DAQmxErrorStrainShuntCaNotSupported,
//           NidaqmxError::ErrorGainTooLargeForGainCalConst => nidaqmx_sys::DAQmxErrorGainTooLargeForGainCalConst,
//           NidaqmxError::ErrorOffsetTooLargeForOffsetCalConst => nidaqmx_sys::DAQmxErrorOffsetTooLargeForOffsetCalConst,
//           NidaqmxError::ErrorElvisPrototypingBoardRemoved => nidaqmx_sys::DAQmxErrorElvisPrototypingBoardRemoved,
//           NidaqmxError::ErrorElvis2PowerRailFault => nidaqmx_sys::DAQmxErrorElvis2PowerRailFault,
//           NidaqmxError::ErrorElvis2PhysicalChansFault => nidaqmx_sys::DAQmxErrorElvis2PhysicalChansFault,
//           NidaqmxError::ErrorElvis2PhysicalChansThermalEvent => nidaqmx_sys::DAQmxErrorElvis2PhysicalChansThermalEvent,
//           NidaqmxError::ErrorRXBitErrorRateLimitExceeded => nidaqmx_sys::DAQmxErrorRXBitErrorRateLimitExceeded,
//           NidaqmxError::ErrorPHYBitErrorRateLimitExceeded => nidaqmx_sys::DAQmxErrorPHYBitErrorRateLimitExceeded,
//           NidaqmxError::ErrorTwoPartAttributeCalledOutOfOrder => nidaqmx_sys::DAQmxErrorTwoPartAttributeCalledOutOfOrder,
//           NidaqmxError::ErrorInvalidSCXIChassisAddress => nidaqmx_sys::DAQmxErrorInvalidSCXIChassisAddress,
//           NidaqmxError::ErrorCouldNotConnectToRemoteMXS => nidaqmx_sys::DAQmxErrorCouldNotConnectToRemoteMXS,
//           NidaqmxError::ErrorExcitationStateRequiredForAttributes => nidaqmx_sys::DAQmxErrorExcitationStateRequiredForAttributes,
//           NidaqmxError::ErrorDeviceNotUsableUntilUSBReplug => nidaqmx_sys::DAQmxErrorDeviceNotUsableUntilUSBReplug,
//           NidaqmxError::ErrorInputFIFOOverflowDuringCalibrationOnFullSpeedUSB => nidaqmx_sys::DAQmxErrorInputFIFOOverflowDuringCalibrationOnFullSpeedUSB,
//           NidaqmxError::ErrorInputFIFOOverflowDuringCalibration => nidaqmx_sys::DAQmxErrorInputFIFOOverflowDuringCalibration,
//           NidaqmxError::ErrorCJCChanConflictsWithNonThermocoupleChan => nidaqmx_sys::DAQmxErrorCJCChanConflictsWithNonThermocoupleChan,
//           NidaqmxError::ErrorCommDeviceForPXIBackplaneNotInRightmostSlot => nidaqmx_sys::DAQmxErrorCommDeviceForPXIBackplaneNotInRightmostSlot,
//           NidaqmxError::ErrorCommDeviceForPXIBackplaneNotInSameChassis => nidaqmx_sys::DAQmxErrorCommDeviceForPXIBackplaneNotInSameChassis,
//           NidaqmxError::ErrorCommDeviceForPXIBackplaneNotPXI => nidaqmx_sys::DAQmxErrorCommDeviceForPXIBackplaneNotPXI,
//           NidaqmxError::ErrorInvalidCalExcitFrequency => nidaqmx_sys::DAQmxErrorInvalidCalExcitFrequency,
//           NidaqmxError::ErrorInvalidCalExcitVoltage => nidaqmx_sys::DAQmxErrorInvalidCalExcitVoltage,
//           NidaqmxError::ErrorInvalidAIInputSrc => nidaqmx_sys::DAQmxErrorInvalidAIInputSrc,
//           NidaqmxError::ErrorInvalidCalInputRef => nidaqmx_sys::DAQmxErrorInvalidCalInputRef,
//           NidaqmxError::ErrordBReferenceValueNotGreaterThanZero => nidaqmx_sys::DAQmxErrordBReferenceValueNotGreaterThanZero,
//           NidaqmxError::ErrorSampleClockRateIsTooFastForSampleClockTiming => nidaqmx_sys::DAQmxErrorSampleClockRateIsTooFastForSampleClockTiming,
//           NidaqmxError::ErrorDeviceNotUsableUntilColdStart => nidaqmx_sys::DAQmxErrorDeviceNotUsableUntilColdStart,
//           NidaqmxError::ErrorSampleClockRateIsTooFastForBurstTiming => nidaqmx_sys::DAQmxErrorSampleClockRateIsTooFastForBurstTiming,
//           NidaqmxError::ErrorDevImportFailedAssociatedResourceIDsNotSupported => nidaqmx_sys::DAQmxErrorDevImportFailedAssociatedResourceIDsNotSupported,
//           NidaqmxError::ErrorSCXI1600ImportNotSupported => nidaqmx_sys::DAQmxErrorSCXI1600ImportNotSupported,
//           NidaqmxError::ErrorPowerSupplyConfigurationFailed => nidaqmx_sys::DAQmxErrorPowerSupplyConfigurationFailed,
//           NidaqmxError::ErrorIEPEWithDCNotAllowed => nidaqmx_sys::DAQmxErrorIEPEWithDCNotAllowed,
//           NidaqmxError::ErrorMinTempForThermocoupleTypeOutsideAccuracyForPolyScaling => nidaqmx_sys::DAQmxErrorMinTempForThermocoupleTypeOutsideAccuracyForPolyScaling,
//           NidaqmxError::ErrorDevImportFailedNoDeviceToOverwriteAndSimulationNotSupported => nidaqmx_sys::DAQmxErrorDevImportFailedNoDeviceToOverwriteAndSimulationNotSupported,
//           NidaqmxError::ErrorDevImportFailedDeviceNotSupportedOnDestination => nidaqmx_sys::DAQmxErrorDevImportFailedDeviceNotSupportedOnDestination,
//           NidaqmxError::ErrorFirmwareIsTooOld => nidaqmx_sys::DAQmxErrorFirmwareIsTooOld,
//           NidaqmxError::ErrorFirmwareCouldntUpdate => nidaqmx_sys::DAQmxErrorFirmwareCouldntUpdate,
//           NidaqmxError::ErrorFirmwareIsCorrupt => nidaqmx_sys::DAQmxErrorFirmwareIsCorrupt,
//           NidaqmxError::ErrorFirmwareTooNew => nidaqmx_sys::DAQmxErrorFirmwareTooNew,
//           NidaqmxError::ErrorSampClockCannotBeExportedFromExternalSampClockSrc => nidaqmx_sys::DAQmxErrorSampClockCannotBeExportedFromExternalSampClockSrc,
//           NidaqmxError::ErrorPhysChanReservedForInputWhenDesiredForOutput => nidaqmx_sys::DAQmxErrorPhysChanReservedForInputWhenDesiredForOutput,
//           NidaqmxError::ErrorPhysChanReservedForOutputWhenDesiredForInput => nidaqmx_sys::DAQmxErrorPhysChanReservedForOutputWhenDesiredForInput,
//           NidaqmxError::ErrorSpecifiedCDAQSlotNotEmpty => nidaqmx_sys::DAQmxErrorSpecifiedCDAQSlotNotEmpty,
//           NidaqmxError::ErrorDeviceDoesNotSupportSimulation => nidaqmx_sys::DAQmxErrorDeviceDoesNotSupportSimulation,
//           NidaqmxError::ErrorInvalidCDAQSlotNumberSpecd => nidaqmx_sys::DAQmxErrorInvalidCDAQSlotNumberSpecd,
//           NidaqmxError::ErrorCSeriesModSimMustMatchCDAQChassisSim => nidaqmx_sys::DAQmxErrorCSeriesModSimMustMatchCDAQChassisSim,
//           NidaqmxError::ErrorSCCCabledDevMustNotBeSimWhenSCCCarrierIsNotSim => nidaqmx_sys::DAQmxErrorSCCCabledDevMustNotBeSimWhenSCCCarrierIsNotSim,
//           NidaqmxError::ErrorSCCModSimMustMatchSCCCarrierSim => nidaqmx_sys::DAQmxErrorSCCModSimMustMatchSCCCarrierSim,
//           NidaqmxError::ErrorSCXIModuleDoesNotSupportSimulation => nidaqmx_sys::DAQmxErrorSCXIModuleDoesNotSupportSimulation,
//           NidaqmxError::ErrorSCXICableDevMustNotBeSimWhenModIsNotSim => nidaqmx_sys::DAQmxErrorSCXICableDevMustNotBeSimWhenModIsNotSim,
//           NidaqmxError::ErrorSCXIDigitizerSimMustNotBeSimWhenModIsNotSim => nidaqmx_sys::DAQmxErrorSCXIDigitizerSimMustNotBeSimWhenModIsNotSim,
//           NidaqmxError::ErrorSCXIModSimMustMatchSCXIChassisSim => nidaqmx_sys::DAQmxErrorSCXIModSimMustMatchSCXIChassisSim,
//           NidaqmxError::ErrorSimPXIDevReqSlotAndChassisSpecd => nidaqmx_sys::DAQmxErrorSimPXIDevReqSlotAndChassisSpecd,
//           NidaqmxError::ErrorSimDevConflictWithRealDev => nidaqmx_sys::DAQmxErrorSimDevConflictWithRealDev,
//           NidaqmxError::ErrorInsufficientDataForCalibration => nidaqmx_sys::DAQmxErrorInsufficientDataForCalibration,
//           NidaqmxError::ErrorTriggerChannelMustBeEnabled => nidaqmx_sys::DAQmxErrorTriggerChannelMustBeEnabled,
//           NidaqmxError::ErrorCalibrationDataConflictCouldNotBeResolved => nidaqmx_sys::DAQmxErrorCalibrationDataConflictCouldNotBeResolved,
//           NidaqmxError::ErrorSoftwareTooNewForSelfCalibrationData => nidaqmx_sys::DAQmxErrorSoftwareTooNewForSelfCalibrationData,
//           NidaqmxError::ErrorSoftwareTooNewForExtCalibrationData => nidaqmx_sys::DAQmxErrorSoftwareTooNewForExtCalibrationData,
//           NidaqmxError::ErrorSelfCalibrationDataTooNewForSoftware => nidaqmx_sys::DAQmxErrorSelfCalibrationDataTooNewForSoftware,
//           NidaqmxError::ErrorExtCalibrationDataTooNewForSoftware => nidaqmx_sys::DAQmxErrorExtCalibrationDataTooNewForSoftware,
//           NidaqmxError::ErrorSoftwareTooNewForEEPROM => nidaqmx_sys::DAQmxErrorSoftwareTooNewForEEPROM,
//           NidaqmxError::ErrorEEPROMTooNewForSoftware => nidaqmx_sys::DAQmxErrorEEPROMTooNewForSoftware,
//           NidaqmxError::ErrorSoftwareTooNewForHardware => nidaqmx_sys::DAQmxErrorSoftwareTooNewForHardware,
//           NidaqmxError::ErrorHardwareTooNewForSoftware => nidaqmx_sys::DAQmxErrorHardwareTooNewForSoftware,
//           NidaqmxError::ErrorTaskCannotRestartFirstSampNotAvailToGenerate => nidaqmx_sys::DAQmxErrorTaskCannotRestartFirstSampNotAvailToGenerate,
//           NidaqmxError::ErrorOnlyUseStartTrigSrcPrptyWithDevDataLines => nidaqmx_sys::DAQmxErrorOnlyUseStartTrigSrcPrptyWithDevDataLines,
//           NidaqmxError::ErrorOnlyUsePauseTrigSrcPrptyWithDevDataLines => nidaqmx_sys::DAQmxErrorOnlyUsePauseTrigSrcPrptyWithDevDataLines,
//           NidaqmxError::ErrorOnlyUseRefTrigSrcPrptyWithDevDataLines => nidaqmx_sys::DAQmxErrorOnlyUseRefTrigSrcPrptyWithDevDataLines,
//           NidaqmxError::ErrorPauseTrigDigPatternSizeDoesNotMatchSrcSize => nidaqmx_sys::DAQmxErrorPauseTrigDigPatternSizeDoesNotMatchSrcSize,
//           NidaqmxError::ErrorLineConflictCDAQ => nidaqmx_sys::DAQmxErrorLineConflictCDAQ,
//           NidaqmxError::ErrorCannotWriteBeyondFinalFiniteSample => nidaqmx_sys::DAQmxErrorCannotWriteBeyondFinalFiniteSample,
//           NidaqmxError::ErrorRefAndStartTriggerSrcCantBeSame => nidaqmx_sys::DAQmxErrorRefAndStartTriggerSrcCantBeSame,
//           NidaqmxError::ErrorMemMappingIncompatibleWithPhysChansInTask => nidaqmx_sys::DAQmxErrorMemMappingIncompatibleWithPhysChansInTask,
//           NidaqmxError::ErrorOutputDriveTypeMemMappingConflict => nidaqmx_sys::DAQmxErrorOutputDriveTypeMemMappingConflict,
//           NidaqmxError::ErrorCAPIDeviceIndexInvalid => nidaqmx_sys::DAQmxErrorCAPIDeviceIndexInvalid,
//           NidaqmxError::ErrorRatiometricDevicesMustUseExcitationForScaling => nidaqmx_sys::DAQmxErrorRatiometricDevicesMustUseExcitationForScaling,
//           NidaqmxError::ErrorPropertyRequiresPerDeviceCfg => nidaqmx_sys::DAQmxErrorPropertyRequiresPerDeviceCfg,
//           NidaqmxError::ErrorAICouplingAndAIInputSourceConflict => nidaqmx_sys::DAQmxErrorAICouplingAndAIInputSourceConflict,
//           NidaqmxError::ErrorOnlyOneTaskCanPerformDOMemoryMappingAtATime => nidaqmx_sys::DAQmxErrorOnlyOneTaskCanPerformDOMemoryMappingAtATime,
//           NidaqmxError::ErrorTooManyChansForAnalogRefTrigCDAQ => nidaqmx_sys::DAQmxErrorTooManyChansForAnalogRefTrigCDAQ,
//           NidaqmxError::ErrorSpecdPropertyValueIsIncompatibleWithSampleTimingType => nidaqmx_sys::DAQmxErrorSpecdPropertyValueIsIncompatibleWithSampleTimingType,
//           NidaqmxError::ErrorCPUNotSupportedRequireSSE => nidaqmx_sys::DAQmxErrorCPUNotSupportedRequireSSE,
//           NidaqmxError::ErrorSpecdPropertyValueIsIncompatibleWithSampleTimingResponseMode => nidaqmx_sys::DAQmxErrorSpecdPropertyValueIsIncompatibleWithSampleTimingResponseMode,
//           NidaqmxError::ErrorConflictingNextWriteIsLastAndRegenModeProperties => nidaqmx_sys::DAQmxErrorConflictingNextWriteIsLastAndRegenModeProperties,
//           NidaqmxError::ErrorMStudioOperationDoesNotSupportDeviceContext => nidaqmx_sys::DAQmxErrorMStudioOperationDoesNotSupportDeviceContext,
//           NidaqmxError::ErrorPropertyValueInChannelExpansionContextInvalid => nidaqmx_sys::DAQmxErrorPropertyValueInChannelExpansionContextInvalid,
//           NidaqmxError::ErrorHWTimedNonBufferedAONotSupported => nidaqmx_sys::DAQmxErrorHWTimedNonBufferedAONotSupported,
//           NidaqmxError::ErrorWaveformLengthNotMultOfQuantum => nidaqmx_sys::DAQmxErrorWaveformLengthNotMultOfQuantum,
//           NidaqmxError::ErrorDSAExpansionMixedBoardsWrongOrderInPXIChassis => nidaqmx_sys::DAQmxErrorDSAExpansionMixedBoardsWrongOrderInPXIChassis,
//           NidaqmxError::ErrorPowerLevelTooLowForOOK => nidaqmx_sys::DAQmxErrorPowerLevelTooLowForOOK,
//           NidaqmxError::ErrorDeviceComponentTestFailure => nidaqmx_sys::DAQmxErrorDeviceComponentTestFailure,
//           NidaqmxError::ErrorUserDefinedWfmWithOOKUnsupported => nidaqmx_sys::DAQmxErrorUserDefinedWfmWithOOKUnsupported,
//           NidaqmxError::ErrorInvalidDigitalModulationUserDefinedWaveform => nidaqmx_sys::DAQmxErrorInvalidDigitalModulationUserDefinedWaveform,
//           NidaqmxError::ErrorBothRefInAndRefOutEnabled => nidaqmx_sys::DAQmxErrorBothRefInAndRefOutEnabled,
//           NidaqmxError::ErrorBothAnalogAndDigitalModulationEnabled => nidaqmx_sys::DAQmxErrorBothAnalogAndDigitalModulationEnabled,
//           NidaqmxError::ErrorBufferedOpsNotSupportedInSpecdSlotForCDAQ => nidaqmx_sys::DAQmxErrorBufferedOpsNotSupportedInSpecdSlotForCDAQ,
//           NidaqmxError::ErrorPhysChanNotSupportedInSpecdSlotForCDAQ => nidaqmx_sys::DAQmxErrorPhysChanNotSupportedInSpecdSlotForCDAQ,
//           NidaqmxError::ErrorResourceReservedWithConflictingSettings => nidaqmx_sys::DAQmxErrorResourceReservedWithConflictingSettings,
//           NidaqmxError::ErrorInconsistentAnalogTrigSettingsCDAQ => nidaqmx_sys::DAQmxErrorInconsistentAnalogTrigSettingsCDAQ,
//           NidaqmxError::ErrorTooManyChansForAnalogPauseTrigCDAQ => nidaqmx_sys::DAQmxErrorTooManyChansForAnalogPauseTrigCDAQ,
//           NidaqmxError::ErrorAnalogTrigNotFirstInScanListCDAQ => nidaqmx_sys::DAQmxErrorAnalogTrigNotFirstInScanListCDAQ,
//           NidaqmxError::ErrorTooManyChansGivenTimingType => nidaqmx_sys::DAQmxErrorTooManyChansGivenTimingType,
//           NidaqmxError::ErrorSampClkTimebaseDivWithExtSampClk => nidaqmx_sys::DAQmxErrorSampClkTimebaseDivWithExtSampClk,
//           NidaqmxError::ErrorCantSaveTaskWithPerDeviceTimingProperties => nidaqmx_sys::DAQmxErrorCantSaveTaskWithPerDeviceTimingProperties,
//           NidaqmxError::ErrorConflictingAutoZeroMode => nidaqmx_sys::DAQmxErrorConflictingAutoZeroMode,
//           NidaqmxError::ErrorSampClkRateNotSupportedWithEAREnabled => nidaqmx_sys::DAQmxErrorSampClkRateNotSupportedWithEAREnabled,
//           NidaqmxError::ErrorSampClkTimebaseRateNotSpecd => nidaqmx_sys::DAQmxErrorSampClkTimebaseRateNotSpecd,
//           NidaqmxError::ErrorSessionCorruptedByDLLReload => nidaqmx_sys::DAQmxErrorSessionCorruptedByDLLReload,
//           NidaqmxError::ErrorActiveDevNotSupportedWithChanExpansion => nidaqmx_sys::DAQmxErrorActiveDevNotSupportedWithChanExpansion,
//           NidaqmxError::ErrorSampClkRateInvalid => nidaqmx_sys::DAQmxErrorSampClkRateInvalid,
//           NidaqmxError::ErrorExtSyncPulseSrcCannotBeExported => nidaqmx_sys::DAQmxErrorExtSyncPulseSrcCannotBeExported,
//           NidaqmxError::ErrorSyncPulseMinDelayToStartNeededForExtSyncPulseSrc => nidaqmx_sys::DAQmxErrorSyncPulseMinDelayToStartNeededForExtSyncPulseSrc,
//           NidaqmxError::ErrorSyncPulseSrcInvalid => nidaqmx_sys::DAQmxErrorSyncPulseSrcInvalid,
//           NidaqmxError::ErrorSampClkTimebaseRateInvalid => nidaqmx_sys::DAQmxErrorSampClkTimebaseRateInvalid,
//           NidaqmxError::ErrorSampClkTimebaseSrcInvalid => nidaqmx_sys::DAQmxErrorSampClkTimebaseSrcInvalid,
//           NidaqmxError::ErrorSampClkRateMustBeSpecd => nidaqmx_sys::DAQmxErrorSampClkRateMustBeSpecd,
//           NidaqmxError::ErrorInvalidAttributeName => nidaqmx_sys::DAQmxErrorInvalidAttributeName,
//           NidaqmxError::ErrorCJCChanNameMustBeSetWhenCJCSrcIsScannableChan => nidaqmx_sys::DAQmxErrorCJCChanNameMustBeSetWhenCJCSrcIsScannableChan,
//           NidaqmxError::ErrorHiddenChanMissingInChansPropertyInCfgFile => nidaqmx_sys::DAQmxErrorHiddenChanMissingInChansPropertyInCfgFile,
//           NidaqmxError::ErrorChanNamesNotSpecdInCfgFile => nidaqmx_sys::DAQmxErrorChanNamesNotSpecdInCfgFile,
//           NidaqmxError::ErrorDuplicateHiddenChanNamesInCfgFile => nidaqmx_sys::DAQmxErrorDuplicateHiddenChanNamesInCfgFile,
//           NidaqmxError::ErrorDuplicateChanNameInCfgFile => nidaqmx_sys::DAQmxErrorDuplicateChanNameInCfgFile,
//           NidaqmxError::ErrorInvalidSCCModuleForSlotSpecd => nidaqmx_sys::DAQmxErrorInvalidSCCModuleForSlotSpecd,
//           NidaqmxError::ErrorInvalidSCCSlotNumberSpecd => nidaqmx_sys::DAQmxErrorInvalidSCCSlotNumberSpecd,
//           NidaqmxError::ErrorInvalidSectionIdentifier => nidaqmx_sys::DAQmxErrorInvalidSectionIdentifier,
//           NidaqmxError::ErrorInvalidSectionName => nidaqmx_sys::DAQmxErrorInvalidSectionName,
//           NidaqmxError::ErrorDAQmxVersionNotSupported => nidaqmx_sys::DAQmxErrorDAQmxVersionNotSupported,
//           NidaqmxError::ErrorSWObjectsFoundInFile => nidaqmx_sys::DAQmxErrorSWObjectsFoundInFile,
//           NidaqmxError::ErrorHWObjectsFoundInFile => nidaqmx_sys::DAQmxErrorHWObjectsFoundInFile,
//           NidaqmxError::ErrorLocalChannelSpecdWithNoParentTask => nidaqmx_sys::DAQmxErrorLocalChannelSpecdWithNoParentTask,
//           NidaqmxError::ErrorTaskReferencesMissingLocalChannel => nidaqmx_sys::DAQmxErrorTaskReferencesMissingLocalChannel,
//           NidaqmxError::ErrorTaskReferencesLocalChannelFromOtherTask => nidaqmx_sys::DAQmxErrorTaskReferencesLocalChannelFromOtherTask,
//           NidaqmxError::ErrorTaskMissingChannelProperty => nidaqmx_sys::DAQmxErrorTaskMissingChannelProperty,
//           NidaqmxError::ErrorInvalidLocalChanName => nidaqmx_sys::DAQmxErrorInvalidLocalChanName,
//           NidaqmxError::ErrorInvalidEscapeCharacterInString => nidaqmx_sys::DAQmxErrorInvalidEscapeCharacterInString,
//           NidaqmxError::ErrorInvalidTableIdentifier => nidaqmx_sys::DAQmxErrorInvalidTableIdentifier,
//           NidaqmxError::ErrorValueFoundInInvalidColumn => nidaqmx_sys::DAQmxErrorValueFoundInInvalidColumn,
//           NidaqmxError::ErrorMissingStartOfTable => nidaqmx_sys::DAQmxErrorMissingStartOfTable,
//           NidaqmxError::ErrorFileMissingRequiredDAQmxHeader => nidaqmx_sys::DAQmxErrorFileMissingRequiredDAQmxHeader,
//           NidaqmxError::ErrorDeviceIDDoesNotMatch => nidaqmx_sys::DAQmxErrorDeviceIDDoesNotMatch,
//           NidaqmxError::ErrorBufferedOperationsNotSupportedOnSelectedLines => nidaqmx_sys::DAQmxErrorBufferedOperationsNotSupportedOnSelectedLines,
//           NidaqmxError::ErrorPropertyConflictsWithScale => nidaqmx_sys::DAQmxErrorPropertyConflictsWithScale,
//           NidaqmxError::ErrorInvalidINIFileSyntax => nidaqmx_sys::DAQmxErrorInvalidINIFileSyntax,
//           NidaqmxError::ErrorDeviceInfoFailedPXIChassisNotIdentified => nidaqmx_sys::DAQmxErrorDeviceInfoFailedPXIChassisNotIdentified,
//           NidaqmxError::ErrorInvalidHWProductNumber => nidaqmx_sys::DAQmxErrorInvalidHWProductNumber,
//           NidaqmxError::ErrorInvalidHWProductType => nidaqmx_sys::DAQmxErrorInvalidHWProductType,
//           NidaqmxError::ErrorInvalidNumericFormatSpecd => nidaqmx_sys::DAQmxErrorInvalidNumericFormatSpecd,
//           NidaqmxError::ErrorDuplicatePropertyInObject => nidaqmx_sys::DAQmxErrorDuplicatePropertyInObject,
//           NidaqmxError::ErrorInvalidEnumValueSpecd => nidaqmx_sys::DAQmxErrorInvalidEnumValueSpecd,
//           NidaqmxError::ErrorTEDSSensorPhysicalChannelConflict => nidaqmx_sys::DAQmxErrorTEDSSensorPhysicalChannelConflict,
//           NidaqmxError::ErrorTooManyPhysicalChansForTEDSInterfaceSpecd => nidaqmx_sys::DAQmxErrorTooManyPhysicalChansForTEDSInterfaceSpecd,
//           NidaqmxError::ErrorIncapableTEDSInterfaceControllingDeviceSpecd => nidaqmx_sys::DAQmxErrorIncapableTEDSInterfaceControllingDeviceSpecd,
//           NidaqmxError::ErrorSCCCarrierSpecdIsMissing => nidaqmx_sys::DAQmxErrorSCCCarrierSpecdIsMissing,
//           NidaqmxError::ErrorIncapableSCCDigitizingDeviceSpecd => nidaqmx_sys::DAQmxErrorIncapableSCCDigitizingDeviceSpecd,
//           NidaqmxError::ErrorAccessorySettingNotApplicable => nidaqmx_sys::DAQmxErrorAccessorySettingNotApplicable,
//           NidaqmxError::ErrorDeviceAndConnectorSpecdAlreadyOccupied => nidaqmx_sys::DAQmxErrorDeviceAndConnectorSpecdAlreadyOccupied,
//           NidaqmxError::ErrorIllegalAccessoryTypeForDeviceSpecd => nidaqmx_sys::DAQmxErrorIllegalAccessoryTypeForDeviceSpecd,
//           NidaqmxError::ErrorInvalidDeviceConnectorNumberSpecd => nidaqmx_sys::DAQmxErrorInvalidDeviceConnectorNumberSpecd,
//           NidaqmxError::ErrorInvalidAccessoryName => nidaqmx_sys::DAQmxErrorInvalidAccessoryName,
//           NidaqmxError::ErrorMoreThanOneMatchForSpecdDevice => nidaqmx_sys::DAQmxErrorMoreThanOneMatchForSpecdDevice,
//           NidaqmxError::ErrorNoMatchForSpecdDevice => nidaqmx_sys::DAQmxErrorNoMatchForSpecdDevice,
//           NidaqmxError::ErrorProductTypeAndProductNumberConflict => nidaqmx_sys::DAQmxErrorProductTypeAndProductNumberConflict,
//           NidaqmxError::ErrorExtraPropertyDetectedInSpecdObject => nidaqmx_sys::DAQmxErrorExtraPropertyDetectedInSpecdObject,
//           NidaqmxError::ErrorRequiredPropertyMissing => nidaqmx_sys::DAQmxErrorRequiredPropertyMissing,
//           NidaqmxError::ErrorCantSetAuthorForLocalChan => nidaqmx_sys::DAQmxErrorCantSetAuthorForLocalChan,
//           NidaqmxError::ErrorInvalidTimeValue => nidaqmx_sys::DAQmxErrorInvalidTimeValue,
//           NidaqmxError::ErrorInvalidTimeFormat => nidaqmx_sys::DAQmxErrorInvalidTimeFormat,
//           NidaqmxError::ErrorDigDevChansSpecdInModeOtherThanParallel => nidaqmx_sys::DAQmxErrorDigDevChansSpecdInModeOtherThanParallel,
//           NidaqmxError::ErrorCascadeDigitizationModeNotSupported => nidaqmx_sys::DAQmxErrorCascadeDigitizationModeNotSupported,
//           NidaqmxError::ErrorSpecdSlotAlreadyOccupied => nidaqmx_sys::DAQmxErrorSpecdSlotAlreadyOccupied,
//           NidaqmxError::ErrorInvalidSCXISlotNumberSpecd => nidaqmx_sys::DAQmxErrorInvalidSCXISlotNumberSpecd,
//           NidaqmxError::ErrorAddressAlreadyInUse => nidaqmx_sys::DAQmxErrorAddressAlreadyInUse,
//           NidaqmxError::ErrorSpecdDeviceDoesNotSupportRTSI => nidaqmx_sys::DAQmxErrorSpecdDeviceDoesNotSupportRTSI,
//           NidaqmxError::ErrorSpecdDeviceIsAlreadyOnRTSIBus => nidaqmx_sys::DAQmxErrorSpecdDeviceIsAlreadyOnRTSIBus,
//           NidaqmxError::ErrorIdentifierInUse => nidaqmx_sys::DAQmxErrorIdentifierInUse,
//           NidaqmxError::ErrorWaitForNextSampleClockOrReadDetected3OrMoreMissedSampClks => nidaqmx_sys::DAQmxErrorWaitForNextSampleClockOrReadDetected3OrMoreMissedSampClks,
//           NidaqmxError::ErrorHWTimedAndDataXferPIO => nidaqmx_sys::DAQmxErrorHWTimedAndDataXferPIO,
//           NidaqmxError::ErrorNonBufferedAndHWTimed => nidaqmx_sys::DAQmxErrorNonBufferedAndHWTimed,
//           NidaqmxError::ErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriodPolled => nidaqmx_sys::DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriodPolled,
//           NidaqmxError::ErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriod2 => nidaqmx_sys::DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriod2,
//           NidaqmxError::ErrorCOCannotKeepUpInHWTimedSinglePointPolled => nidaqmx_sys::DAQmxErrorCOCannotKeepUpInHWTimedSinglePointPolled,
//           NidaqmxError::ErrorWriteRecoveryCannotKeepUpInHWTimedSinglePoint => nidaqmx_sys::DAQmxErrorWriteRecoveryCannotKeepUpInHWTimedSinglePoint,
//           NidaqmxError::ErrorNoChangeDetectionOnSelectedLineForDevice => nidaqmx_sys::DAQmxErrorNoChangeDetectionOnSelectedLineForDevice,
//           NidaqmxError::ErrorSMIOPauseTriggersNotSupportedWithChannelExpansion => nidaqmx_sys::DAQmxErrorSMIOPauseTriggersNotSupportedWithChannelExpansion,
//           NidaqmxError::ErrorClockMasterForExternalClockNotLongestPipeline => nidaqmx_sys::DAQmxErrorClockMasterForExternalClockNotLongestPipeline,
//           NidaqmxError::ErrorUnsupportedUnicodeByteOrderMarker => nidaqmx_sys::DAQmxErrorUnsupportedUnicodeByteOrderMarker,
//           NidaqmxError::ErrorTooManyInstructionsInLoopInScript => nidaqmx_sys::DAQmxErrorTooManyInstructionsInLoopInScript,
//           NidaqmxError::ErrorPLLNotLocked => nidaqmx_sys::DAQmxErrorPLLNotLocked,
//           NidaqmxError::ErrorIfElseBlockNotAllowedInFiniteRepeatLoopInScript => nidaqmx_sys::DAQmxErrorIfElseBlockNotAllowedInFiniteRepeatLoopInScript,
//           NidaqmxError::ErrorIfElseBlockNotAllowedInConditionalRepeatLoopInScript => nidaqmx_sys::DAQmxErrorIfElseBlockNotAllowedInConditionalRepeatLoopInScript,
//           NidaqmxError::ErrorClearIsLastInstructionInIfElseBlockInScript => nidaqmx_sys::DAQmxErrorClearIsLastInstructionInIfElseBlockInScript,
//           NidaqmxError::ErrorInvalidWaitDurationBeforeIfElseBlockInScript => nidaqmx_sys::DAQmxErrorInvalidWaitDurationBeforeIfElseBlockInScript,
//           NidaqmxError::ErrorMarkerPosInvalidBeforeIfElseBlockInScript => nidaqmx_sys::DAQmxErrorMarkerPosInvalidBeforeIfElseBlockInScript,
//           NidaqmxError::ErrorInvalidSubsetLengthBeforeIfElseBlockInScript => nidaqmx_sys::DAQmxErrorInvalidSubsetLengthBeforeIfElseBlockInScript,
//           NidaqmxError::ErrorInvalidWaveformLengthBeforeIfElseBlockInScript => nidaqmx_sys::DAQmxErrorInvalidWaveformLengthBeforeIfElseBlockInScript,
//           NidaqmxError::ErrorGenerateOrFiniteWaitInstructionExpectedBeforeIfElseBlockInScript => nidaqmx_sys::DAQmxErrorGenerateOrFiniteWaitInstructionExpectedBeforeIfElseBlockInScript,
//           NidaqmxError::ErrorCalPasswordNotSupported => nidaqmx_sys::DAQmxErrorCalPasswordNotSupported,
//           NidaqmxError::ErrorSetupCalNeededBeforeAdjustCal => nidaqmx_sys::DAQmxErrorSetupCalNeededBeforeAdjustCal,
//           NidaqmxError::ErrorMultipleChansNotSupportedDuringCalSetup => nidaqmx_sys::DAQmxErrorMultipleChansNotSupportedDuringCalSetup,
//           NidaqmxError::ErrorDevCannotBeAccessed => nidaqmx_sys::DAQmxErrorDevCannotBeAccessed,
//           NidaqmxError::ErrorSampClkRateDoesntMatchSampClkSrc => nidaqmx_sys::DAQmxErrorSampClkRateDoesntMatchSampClkSrc,
//           NidaqmxError::ErrorSampClkRateNotSupportedWithEARDisabled => nidaqmx_sys::DAQmxErrorSampClkRateNotSupportedWithEARDisabled,
//           NidaqmxError::ErrorLabVIEWVersionDoesntSupportDAQmxEvents => nidaqmx_sys::DAQmxErrorLabVIEWVersionDoesntSupportDAQmxEvents,
//           NidaqmxError::ErrorCOReadyForNewValNotSupportedWithOnDemand => nidaqmx_sys::DAQmxErrorCOReadyForNewValNotSupportedWithOnDemand,
//           NidaqmxError::ErrorCIHWTimedSinglePointNotSupportedForMeasType => nidaqmx_sys::DAQmxErrorCIHWTimedSinglePointNotSupportedForMeasType,
//           NidaqmxError::ErrorOnDemandNotSupportedWithHWTimedSinglePoint => nidaqmx_sys::DAQmxErrorOnDemandNotSupportedWithHWTimedSinglePoint,
//           NidaqmxError::ErrorHWTimedSinglePointAndDataXferNotProgIO => nidaqmx_sys::DAQmxErrorHWTimedSinglePointAndDataXferNotProgIO,
//           NidaqmxError::ErrorMemMapAndHWTimedSinglePoint => nidaqmx_sys::DAQmxErrorMemMapAndHWTimedSinglePoint,
//           NidaqmxError::ErrorCannotSetPropertyWhenHWTimedSinglePointTaskIsRunning => nidaqmx_sys::DAQmxErrorCannotSetPropertyWhenHWTimedSinglePointTaskIsRunning,
//           NidaqmxError::ErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriod => nidaqmx_sys::DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriod,
//           NidaqmxError::ErrorTooManyEventsGenerated => nidaqmx_sys::DAQmxErrorTooManyEventsGenerated,
//           NidaqmxError::ErrorMStudioCppRemoveEventsBeforeStop => nidaqmx_sys::DAQmxErrorMStudioCppRemoveEventsBeforeStop,
//           NidaqmxError::ErrorCAPICannotRegisterSyncEventsFromMultipleThreads => nidaqmx_sys::DAQmxErrorCAPICannotRegisterSyncEventsFromMultipleThreads,
//           NidaqmxError::ErrorReadWaitNextSampClkWaitMismatchTwo => nidaqmx_sys::DAQmxErrorReadWaitNextSampClkWaitMismatchTwo,
//           NidaqmxError::ErrorReadWaitNextSampClkWaitMismatchOne => nidaqmx_sys::DAQmxErrorReadWaitNextSampClkWaitMismatchOne,
//           NidaqmxError::ErrorDAQmxSignalEventTypeNotSupportedByChanTypesOrDevicesInTask => nidaqmx_sys::DAQmxErrorDAQmxSignalEventTypeNotSupportedByChanTypesOrDevicesInTask,
//           NidaqmxError::ErrorCannotUnregisterDAQmxSoftwareEventWhileTaskIsRunning => nidaqmx_sys::DAQmxErrorCannotUnregisterDAQmxSoftwareEventWhileTaskIsRunning,
//           NidaqmxError::ErrorAutoStartWriteNotAllowedEventRegistered => nidaqmx_sys::DAQmxErrorAutoStartWriteNotAllowedEventRegistered,
//           NidaqmxError::ErrorAutoStartReadNotAllowedEventRegistered => nidaqmx_sys::DAQmxErrorAutoStartReadNotAllowedEventRegistered,
//           NidaqmxError::ErrorCannotGetPropertyWhenTaskNotReservedCommittedOrRunning => nidaqmx_sys::DAQmxErrorCannotGetPropertyWhenTaskNotReservedCommittedOrRunning,
//           NidaqmxError::ErrorSignalEventsNotSupportedByDevice => nidaqmx_sys::DAQmxErrorSignalEventsNotSupportedByDevice,
//           NidaqmxError::ErrorEveryNSamplesAcqIntoBufferEventNotSupportedByDevice => nidaqmx_sys::DAQmxErrorEveryNSamplesAcqIntoBufferEventNotSupportedByDevice,
//           NidaqmxError::ErrorEveryNSampsTransferredFromBufferEventNotSupportedByDevice => nidaqmx_sys::DAQmxErrorEveryNSampsTransferredFromBufferEventNotSupportedByDevice,
//           NidaqmxError::ErrorCAPISyncEventsTaskStateChangeNotAllowedFromDifferentThread => nidaqmx_sys::DAQmxErrorCAPISyncEventsTaskStateChangeNotAllowedFromDifferentThread,
//           NidaqmxError::ErrorDAQmxSWEventsWithDifferentCallMechanisms => nidaqmx_sys::DAQmxErrorDAQmxSWEventsWithDifferentCallMechanisms,
//           NidaqmxError::ErrorCantSaveChanWithPolyCalScaleAndAllowInteractiveEdit => nidaqmx_sys::DAQmxErrorCantSaveChanWithPolyCalScaleAndAllowInteractiveEdit,
//           NidaqmxError::ErrorChanDoesNotSupportCJC => nidaqmx_sys::DAQmxErrorChanDoesNotSupportCJC,
//           NidaqmxError::ErrorCOReadyForNewValNotSupportedWithHWTimedSinglePoint => nidaqmx_sys::DAQmxErrorCOReadyForNewValNotSupportedWithHWTimedSinglePoint,
//           NidaqmxError::ErrorDACAllowConnToGndNotSupportedByDevWhenRefSrcExt => nidaqmx_sys::DAQmxErrorDACAllowConnToGndNotSupportedByDevWhenRefSrcExt,
//           NidaqmxError::ErrorCantGetPropertyTaskNotRunning => nidaqmx_sys::DAQmxErrorCantGetPropertyTaskNotRunning,
//           NidaqmxError::ErrorCantSetPropertyTaskNotRunning => nidaqmx_sys::DAQmxErrorCantSetPropertyTaskNotRunning,
//           NidaqmxError::ErrorCantSetPropertyTaskNotRunningCommitted => nidaqmx_sys::DAQmxErrorCantSetPropertyTaskNotRunningCommitted,
//           NidaqmxError::ErrorAIEveryNSampsEventIntervalNotMultipleOf2 => nidaqmx_sys::DAQmxErrorAIEveryNSampsEventIntervalNotMultipleOf2,
//           NidaqmxError::ErrorInvalidTEDSPhysChanNotAI => nidaqmx_sys::DAQmxErrorInvalidTEDSPhysChanNotAI,
//           NidaqmxError::ErrorCAPICannotPerformTaskOperationInAsyncCallback => nidaqmx_sys::DAQmxErrorCAPICannotPerformTaskOperationInAsyncCallback,
//           NidaqmxError::ErrorEveryNSampsTransferredFromBufferEventAlreadyRegistered => nidaqmx_sys::DAQmxErrorEveryNSampsTransferredFromBufferEventAlreadyRegistered,
//           NidaqmxError::ErrorEveryNSampsAcqIntoBufferEventAlreadyRegistered => nidaqmx_sys::DAQmxErrorEveryNSampsAcqIntoBufferEventAlreadyRegistered,
//           NidaqmxError::ErrorEveryNSampsTransferredFromBufferNotForInput => nidaqmx_sys::DAQmxErrorEveryNSampsTransferredFromBufferNotForInput,
//           NidaqmxError::ErrorEveryNSampsAcqIntoBufferNotForOutput => nidaqmx_sys::DAQmxErrorEveryNSampsAcqIntoBufferNotForOutput,
//           NidaqmxError::ErrorAOSampTimingTypeDifferentIn2Tasks => nidaqmx_sys::DAQmxErrorAOSampTimingTypeDifferentIn2Tasks,
//           NidaqmxError::ErrorCouldNotDownloadFirmwareHWDamaged => nidaqmx_sys::DAQmxErrorCouldNotDownloadFirmwareHWDamaged,
//           NidaqmxError::ErrorCouldNotDownloadFirmwareFileMissingOrDamaged => nidaqmx_sys::DAQmxErrorCouldNotDownloadFirmwareFileMissingOrDamaged,
//           NidaqmxError::ErrorCannotRegisterDAQmxSoftwareEventWhileTaskIsRunning => nidaqmx_sys::DAQmxErrorCannotRegisterDAQmxSoftwareEventWhileTaskIsRunning,
//           NidaqmxError::ErrorDifferentRawDataCompression => nidaqmx_sys::DAQmxErrorDifferentRawDataCompression,
//           NidaqmxError::ErrorConfiguredTEDSInterfaceDevNotDetected => nidaqmx_sys::DAQmxErrorConfiguredTEDSInterfaceDevNotDetected,
//           NidaqmxError::ErrorCompressedSampSizeExceedsResolution => nidaqmx_sys::DAQmxErrorCompressedSampSizeExceedsResolution,
//           NidaqmxError::ErrorChanDoesNotSupportCompression => nidaqmx_sys::DAQmxErrorChanDoesNotSupportCompression,
//           NidaqmxError::ErrorDifferentRawDataFormats => nidaqmx_sys::DAQmxErrorDifferentRawDataFormats,
//           NidaqmxError::ErrorSampClkOutputTermIncludesStartTrigSrc => nidaqmx_sys::DAQmxErrorSampClkOutputTermIncludesStartTrigSrc,
//           NidaqmxError::ErrorStartTrigSrcEqualToSampClkSrc => nidaqmx_sys::DAQmxErrorStartTrigSrcEqualToSampClkSrc,
//           NidaqmxError::ErrorEventOutputTermIncludesTrigSrc => nidaqmx_sys::DAQmxErrorEventOutputTermIncludesTrigSrc,
//           NidaqmxError::ErrorCOMultipleWritesBetweenSampClks => nidaqmx_sys::DAQmxErrorCOMultipleWritesBetweenSampClks,
//           NidaqmxError::ErrorDoneEventAlreadyRegistered => nidaqmx_sys::DAQmxErrorDoneEventAlreadyRegistered,
//           NidaqmxError::ErrorSignalEventAlreadyRegistered => nidaqmx_sys::DAQmxErrorSignalEventAlreadyRegistered,
//           NidaqmxError::ErrorCannotHaveTimedLoopAndDAQmxSignalEventsInSameTask => nidaqmx_sys::DAQmxErrorCannotHaveTimedLoopAndDAQmxSignalEventsInSameTask,
//           NidaqmxError::ErrorNeedLabVIEW711PatchToUseDAQmxEvents => nidaqmx_sys::DAQmxErrorNeedLabVIEW711PatchToUseDAQmxEvents,
//           NidaqmxError::ErrorStartFailedDueToWriteFailure => nidaqmx_sys::DAQmxErrorStartFailedDueToWriteFailure,
//           NidaqmxError::ErrorDataXferCustomThresholdNotDMAXferMethodSpecifiedForDev => nidaqmx_sys::DAQmxErrorDataXferCustomThresholdNotDMAXferMethodSpecifiedForDev,
//           NidaqmxError::ErrorDataXferRequestConditionNotSpecifiedForCustomThreshold => nidaqmx_sys::DAQmxErrorDataXferRequestConditionNotSpecifiedForCustomThreshold,
//           NidaqmxError::ErrorDataXferCustomThresholdNotSpecified => nidaqmx_sys::DAQmxErrorDataXferCustomThresholdNotSpecified,
//           NidaqmxError::ErrorCAPISyncCallbackNotSupportedOnThisPlatform => nidaqmx_sys::DAQmxErrorCAPISyncCallbackNotSupportedOnThisPlatform,
//           NidaqmxError::ErrorCalChanReversePolyCoefNotSpecd => nidaqmx_sys::DAQmxErrorCalChanReversePolyCoefNotSpecd,
//           NidaqmxError::ErrorCalChanForwardPolyCoefNotSpecd => nidaqmx_sys::DAQmxErrorCalChanForwardPolyCoefNotSpecd,
//           NidaqmxError::ErrorChanCalRepeatedNumberInPreScaledVals => nidaqmx_sys::DAQmxErrorChanCalRepeatedNumberInPreScaledVals,
//           NidaqmxError::ErrorChanCalTableNumScaledNotEqualNumPrescaledVals => nidaqmx_sys::DAQmxErrorChanCalTableNumScaledNotEqualNumPrescaledVals,
//           NidaqmxError::ErrorChanCalTableScaledValsNotSpecd => nidaqmx_sys::DAQmxErrorChanCalTableScaledValsNotSpecd,
//           NidaqmxError::ErrorChanCalTablePreScaledValsNotSpecd => nidaqmx_sys::DAQmxErrorChanCalTablePreScaledValsNotSpecd,
//           NidaqmxError::ErrorChanCalScaleTypeNotSet => nidaqmx_sys::DAQmxErrorChanCalScaleTypeNotSet,
//           NidaqmxError::ErrorChanCalExpired => nidaqmx_sys::DAQmxErrorChanCalExpired,
//           NidaqmxError::ErrorChanCalExpirationDateNotSet => nidaqmx_sys::DAQmxErrorChanCalExpirationDateNotSet,
//           NidaqmxError::ErrorThreeOutputPortCombinationGivenSampTimingType653x => nidaqmx_sys::DAQmxError3OutputPortCombinationGivenSampTimingType653x,
//           NidaqmxError::ErrorThreeInputPortCombinationGivenSampTimingType653x => nidaqmx_sys::DAQmxError3InputPortCombinationGivenSampTimingType653x,
//           NidaqmxError::ErrorTwoOutputPortCombinationGivenSampTimingType653x => nidaqmx_sys::DAQmxError2OutputPortCombinationGivenSampTimingType653x,
//           NidaqmxError::ErrorTwoInputPortCombinationGivenSampTimingType653x => nidaqmx_sys::DAQmxError2InputPortCombinationGivenSampTimingType653x,
//           NidaqmxError::ErrorPatternMatcherMayBeUsedByOneTrigOnly => nidaqmx_sys::DAQmxErrorPatternMatcherMayBeUsedByOneTrigOnly,
//           NidaqmxError::ErrorNoChansSpecdForPatternSource => nidaqmx_sys::DAQmxErrorNoChansSpecdForPatternSource,
//           NidaqmxError::ErrorChangeDetectionChanNotInTask => nidaqmx_sys::DAQmxErrorChangeDetectionChanNotInTask,
//           NidaqmxError::ErrorChangeDetectionChanNotTristated => nidaqmx_sys::DAQmxErrorChangeDetectionChanNotTristated,
//           NidaqmxError::ErrorWaitModeValueNotSupportedNonBuffered => nidaqmx_sys::DAQmxErrorWaitModeValueNotSupportedNonBuffered,
//           NidaqmxError::ErrorWaitModePropertyNotSupportedNonBuffered => nidaqmx_sys::DAQmxErrorWaitModePropertyNotSupportedNonBuffered,
//           NidaqmxError::ErrorCantSavePerLineConfigDigChanSoInteractiveEditsAllowed => nidaqmx_sys::DAQmxErrorCantSavePerLineConfigDigChanSoInteractiveEditsAllowed,
//           NidaqmxError::ErrorCantSaveNonPortMultiLineDigChanSoInteractiveEditsAllowed => nidaqmx_sys::DAQmxErrorCantSaveNonPortMultiLineDigChanSoInteractiveEditsAllowed,
//           NidaqmxError::ErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalNoIrqOnDev => nidaqmx_sys::DAQmxErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalNoIrqOnDev,
//           NidaqmxError::ErrorGlobalTaskNameAlreadyChanName => nidaqmx_sys::DAQmxErrorGlobalTaskNameAlreadyChanName,
//           NidaqmxError::ErrorGlobalChanNameAlreadyTaskName => nidaqmx_sys::DAQmxErrorGlobalChanNameAlreadyTaskName,
//           NidaqmxError::ErrorAOEveryNSampsEventIntervalNotMultipleOf2 => nidaqmx_sys::DAQmxErrorAOEveryNSampsEventIntervalNotMultipleOf2,
//           NidaqmxError::ErrorSampleTimebaseDivisorNotSupportedGivenTimingType => nidaqmx_sys::DAQmxErrorSampleTimebaseDivisorNotSupportedGivenTimingType,
//           NidaqmxError::ErrorHandshakeEventOutputTermNotSupportedGivenTimingType => nidaqmx_sys::DAQmxErrorHandshakeEventOutputTermNotSupportedGivenTimingType,
//           NidaqmxError::ErrorChangeDetectionOutputTermNotSupportedGivenTimingType => nidaqmx_sys::DAQmxErrorChangeDetectionOutputTermNotSupportedGivenTimingType,
//           NidaqmxError::ErrorReadyForTransferOutputTermNotSupportedGivenTimingType => nidaqmx_sys::DAQmxErrorReadyForTransferOutputTermNotSupportedGivenTimingType,
//           NidaqmxError::ErrorRefTrigOutputTermNotSupportedGivenTimingType => nidaqmx_sys::DAQmxErrorRefTrigOutputTermNotSupportedGivenTimingType,
//           NidaqmxError::ErrorStartTrigOutputTermNotSupportedGivenTimingType => nidaqmx_sys::DAQmxErrorStartTrigOutputTermNotSupportedGivenTimingType,
//           NidaqmxError::ErrorSampClockOutputTermNotSupportedGivenTimingType => nidaqmx_sys::DAQmxErrorSampClockOutputTermNotSupportedGivenTimingType,
//           NidaqmxError::ErrorMhz20TimebaseNotSupportedGivenTimingType => nidaqmx_sys::DAQmxError20MhzTimebaseNotSupportedGivenTimingType,
//           NidaqmxError::ErrorSampClockSourceNotSupportedGivenTimingType => nidaqmx_sys::DAQmxErrorSampClockSourceNotSupportedGivenTimingType,
//           NidaqmxError::ErrorRefTrigTypeNotSupportedGivenTimingType => nidaqmx_sys::DAQmxErrorRefTrigTypeNotSupportedGivenTimingType,
//           NidaqmxError::ErrorPauseTrigTypeNotSupportedGivenTimingType => nidaqmx_sys::DAQmxErrorPauseTrigTypeNotSupportedGivenTimingType,
//           NidaqmxError::ErrorHandshakeTrigTypeNotSupportedGivenTimingType => nidaqmx_sys::DAQmxErrorHandshakeTrigTypeNotSupportedGivenTimingType,
//           NidaqmxError::ErrorStartTrigTypeNotSupportedGivenTimingType => nidaqmx_sys::DAQmxErrorStartTrigTypeNotSupportedGivenTimingType,
//           NidaqmxError::ErrorRefClkSrcNotSupported => nidaqmx_sys::DAQmxErrorRefClkSrcNotSupported,
//           NidaqmxError::ErrorDataVoltageLowAndHighIncompatible => nidaqmx_sys::DAQmxErrorDataVoltageLowAndHighIncompatible,
//           NidaqmxError::ErrorInvalidCharInDigPatternString => nidaqmx_sys::DAQmxErrorInvalidCharInDigPatternString,
//           NidaqmxError::ErrorCantUsePort3AloneGivenSampTimingTypeOn653x => nidaqmx_sys::DAQmxErrorCantUsePort3AloneGivenSampTimingTypeOn653x,
//           NidaqmxError::ErrorCantUsePort1AloneGivenSampTimingTypeOn653x => nidaqmx_sys::DAQmxErrorCantUsePort1AloneGivenSampTimingTypeOn653x,
//           NidaqmxError::ErrorPartialUseOfPhysicalLinesWithinPortNotSupported653x => nidaqmx_sys::DAQmxErrorPartialUseOfPhysicalLinesWithinPortNotSupported653x,
//           NidaqmxError::ErrorPhysicalChanNotSupportedGivenSampTimingType653x => nidaqmx_sys::DAQmxErrorPhysicalChanNotSupportedGivenSampTimingType653x,
//           NidaqmxError::ErrorCanExportOnlyDigEdgeTrigs => nidaqmx_sys::DAQmxErrorCanExportOnlyDigEdgeTrigs,
//           NidaqmxError::ErrorRefTrigDigPatternSizeDoesNotMatchSourceSize => nidaqmx_sys::DAQmxErrorRefTrigDigPatternSizeDoesNotMatchSourceSize,
//           NidaqmxError::ErrorStartTrigDigPatternSizeDoesNotMatchSourceSize => nidaqmx_sys::DAQmxErrorStartTrigDigPatternSizeDoesNotMatchSourceSize,
//           NidaqmxError::ErrorChangeDetectionRisingAndFallingEdgeChanDontMatch => nidaqmx_sys::DAQmxErrorChangeDetectionRisingAndFallingEdgeChanDontMatch,
//           NidaqmxError::ErrorPhysicalChansForChangeDetectionAndPatternMatch653x => nidaqmx_sys::DAQmxErrorPhysicalChansForChangeDetectionAndPatternMatch653x,
//           NidaqmxError::ErrorCanExportOnlyOnboardSampClk => nidaqmx_sys::DAQmxErrorCanExportOnlyOnboardSampClk,
//           NidaqmxError::ErrorInternalSampClkNotRisingEdge => nidaqmx_sys::DAQmxErrorInternalSampClkNotRisingEdge,
//           NidaqmxError::ErrorRefTrigDigPatternChanNotInTask => nidaqmx_sys::DAQmxErrorRefTrigDigPatternChanNotInTask,
//           NidaqmxError::ErrorRefTrigDigPatternChanNotTristated => nidaqmx_sys::DAQmxErrorRefTrigDigPatternChanNotTristated,
//           NidaqmxError::ErrorStartTrigDigPatternChanNotInTask => nidaqmx_sys::DAQmxErrorStartTrigDigPatternChanNotInTask,
//           NidaqmxError::ErrorStartTrigDigPatternChanNotTristated => nidaqmx_sys::DAQmxErrorStartTrigDigPatternChanNotTristated,
//           NidaqmxError::ErrorPXIStarAndClock10Sync => nidaqmx_sys::DAQmxErrorPXIStarAndClock10Sync,
//           NidaqmxError::ErrorGlobalChanCannotBeSavedSoInteractiveEditsAllowed => nidaqmx_sys::DAQmxErrorGlobalChanCannotBeSavedSoInteractiveEditsAllowed,
//           NidaqmxError::ErrorTaskCannotBeSavedSoInteractiveEditsAllowed => nidaqmx_sys::DAQmxErrorTaskCannotBeSavedSoInteractiveEditsAllowed,
//           NidaqmxError::ErrorInvalidGlobalChan => nidaqmx_sys::DAQmxErrorInvalidGlobalChan,
//           NidaqmxError::ErrorEveryNSampsEventAlreadyRegistered => nidaqmx_sys::DAQmxErrorEveryNSampsEventAlreadyRegistered,
//           NidaqmxError::ErrorEveryNSampsEventIntervalZeroNotSupported => nidaqmx_sys::DAQmxErrorEveryNSampsEventIntervalZeroNotSupported,
//           NidaqmxError::ErrorChanSizeTooBigForU16PortWrite => nidaqmx_sys::DAQmxErrorChanSizeTooBigForU16PortWrite,
//           NidaqmxError::ErrorChanSizeTooBigForU16PortRead => nidaqmx_sys::DAQmxErrorChanSizeTooBigForU16PortRead,
//           NidaqmxError::ErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalWhenDMA => nidaqmx_sys::DAQmxErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalWhenDMA,
//           NidaqmxError::ErrorWriteWhenTaskNotRunningCOTicks => nidaqmx_sys::DAQmxErrorWriteWhenTaskNotRunningCOTicks,
//           NidaqmxError::ErrorWriteWhenTaskNotRunningCOFreq => nidaqmx_sys::DAQmxErrorWriteWhenTaskNotRunningCOFreq,
//           NidaqmxError::ErrorWriteWhenTaskNotRunningCOTime => nidaqmx_sys::DAQmxErrorWriteWhenTaskNotRunningCOTime,
//           NidaqmxError::ErrorAOMinMaxNotSupportedDACRangeTooSmall => nidaqmx_sys::DAQmxErrorAOMinMaxNotSupportedDACRangeTooSmall,
//           NidaqmxError::ErrorAOMinMaxNotSupportedGivenDACRange => nidaqmx_sys::DAQmxErrorAOMinMaxNotSupportedGivenDACRange,
//           NidaqmxError::ErrorAOMinMaxNotSupportedGivenDACRangeAndOffsetVal => nidaqmx_sys::DAQmxErrorAOMinMaxNotSupportedGivenDACRangeAndOffsetVal,
//           NidaqmxError::ErrorAOMinMaxNotSupportedDACOffsetValInappropriate => nidaqmx_sys::DAQmxErrorAOMinMaxNotSupportedDACOffsetValInappropriate,
//           NidaqmxError::ErrorAOMinMaxNotSupportedGivenDACOffsetVal => nidaqmx_sys::DAQmxErrorAOMinMaxNotSupportedGivenDACOffsetVal,
//           NidaqmxError::ErrorAOMinMaxNotSupportedDACRefValTooSmall => nidaqmx_sys::DAQmxErrorAOMinMaxNotSupportedDACRefValTooSmall,
//           NidaqmxError::ErrorAOMinMaxNotSupportedGivenDACRefVal => nidaqmx_sys::DAQmxErrorAOMinMaxNotSupportedGivenDACRefVal,
//           NidaqmxError::ErrorAOMinMaxNotSupportedGivenDACRefAndOffsetVal => nidaqmx_sys::DAQmxErrorAOMinMaxNotSupportedGivenDACRefAndOffsetVal,
//           NidaqmxError::ErrorWhenAcqCompAndNumSampsPerChanExceedsOnBrdBufSize => nidaqmx_sys::DAQmxErrorWhenAcqCompAndNumSampsPerChanExceedsOnBrdBufSize,
//           NidaqmxError::ErrorWhenAcqCompAndNoRefTrig => nidaqmx_sys::DAQmxErrorWhenAcqCompAndNoRefTrig,
//           NidaqmxError::ErrorWaitForNextSampClkNotSupported => nidaqmx_sys::DAQmxErrorWaitForNextSampClkNotSupported,
//           NidaqmxError::ErrorDevInUnidentifiedPXIChassis => nidaqmx_sys::DAQmxErrorDevInUnidentifiedPXIChassis,
//           NidaqmxError::ErrorMaxSoundPressureMicSensitivitRelatedAIPropertiesNotSupportedByDev => nidaqmx_sys::DAQmxErrorMaxSoundPressureMicSensitivitRelatedAIPropertiesNotSupportedByDev,
//           NidaqmxError::ErrorMaxSoundPressureAndMicSensitivityNotSupportedByDev => nidaqmx_sys::DAQmxErrorMaxSoundPressureAndMicSensitivityNotSupportedByDev,
//           NidaqmxError::ErrorAOBufferSizeZeroForSampClkTimingType => nidaqmx_sys::DAQmxErrorAOBufferSizeZeroForSampClkTimingType,
//           NidaqmxError::ErrorAOCallWriteBeforeStartForSampClkTimingType => nidaqmx_sys::DAQmxErrorAOCallWriteBeforeStartForSampClkTimingType,
//           NidaqmxError::ErrorInvalidCalLowPassCutoffFreq => nidaqmx_sys::DAQmxErrorInvalidCalLowPassCutoffFreq,
//           NidaqmxError::ErrorSimulationCannotBeDisabledForDevCreatedAsSimulatedDev => nidaqmx_sys::DAQmxErrorSimulationCannotBeDisabledForDevCreatedAsSimulatedDev,
//           NidaqmxError::ErrorCannotAddNewDevsAfterTaskConfiguration => nidaqmx_sys::DAQmxErrorCannotAddNewDevsAfterTaskConfiguration,
//           NidaqmxError::ErrorDifftSyncPulseSrcAndSampClkTimebaseSrcDevMultiDevTask => nidaqmx_sys::DAQmxErrorDifftSyncPulseSrcAndSampClkTimebaseSrcDevMultiDevTask,
//           NidaqmxError::ErrorTermWithoutDevInMultiDevTask => nidaqmx_sys::DAQmxErrorTermWithoutDevInMultiDevTask,
//           NidaqmxError::ErrorSyncNoDevSampClkTimebaseOrSyncPulseInPXISlot2 => nidaqmx_sys::DAQmxErrorSyncNoDevSampClkTimebaseOrSyncPulseInPXISlot2,
//           NidaqmxError::ErrorPhysicalChanNotOnThisConnector => nidaqmx_sys::DAQmxErrorPhysicalChanNotOnThisConnector,
//           NidaqmxError::ErrorNumSampsToWaitNotGreaterThanZeroInScript => nidaqmx_sys::DAQmxErrorNumSampsToWaitNotGreaterThanZeroInScript,
//           NidaqmxError::ErrorNumSampsToWaitNotMultipleOfAlignmentQuantumInScript => nidaqmx_sys::DAQmxErrorNumSampsToWaitNotMultipleOfAlignmentQuantumInScript,
//           NidaqmxError::ErrorEveryNSamplesEventNotSupportedForNonBufferedTasks => nidaqmx_sys::DAQmxErrorEveryNSamplesEventNotSupportedForNonBufferedTasks,
//           NidaqmxError::ErrorBufferedAndDataXferPIO => nidaqmx_sys::DAQmxErrorBufferedAndDataXferPIO,
//           NidaqmxError::ErrorCannotWriteWhenAutoStartFalseAndTaskNotRunning => nidaqmx_sys::DAQmxErrorCannotWriteWhenAutoStartFalseAndTaskNotRunning,
//           NidaqmxError::ErrorNonBufferedAndDataXferInterrupts => nidaqmx_sys::DAQmxErrorNonBufferedAndDataXferInterrupts,
//           NidaqmxError::ErrorWriteFailedMultipleCtrsWithFREQOUT => nidaqmx_sys::DAQmxErrorWriteFailedMultipleCtrsWithFREQOUT,
//           NidaqmxError::ErrorReadNotCompleteBefore3SampClkEdges => nidaqmx_sys::DAQmxErrorReadNotCompleteBefore3SampClkEdges,
//           NidaqmxError::ErrorCtrHWTimedSinglePointAndDataXferNotProgIO => nidaqmx_sys::DAQmxErrorCtrHWTimedSinglePointAndDataXferNotProgIO,
//           NidaqmxError::ErrorPrescalerNot1ForInputTerminal => nidaqmx_sys::DAQmxErrorPrescalerNot1ForInputTerminal,
//           NidaqmxError::ErrorPrescalerNot1ForTimebaseSrc => nidaqmx_sys::DAQmxErrorPrescalerNot1ForTimebaseSrc,
//           NidaqmxError::ErrorSampClkTimingTypeWhenTristateIsFalse => nidaqmx_sys::DAQmxErrorSampClkTimingTypeWhenTristateIsFalse,
//           NidaqmxError::ErrorOutputBufferSizeNotMultOfXferSize => nidaqmx_sys::DAQmxErrorOutputBufferSizeNotMultOfXferSize,
//           NidaqmxError::ErrorSampPerChanNotMultOfXferSize => nidaqmx_sys::DAQmxErrorSampPerChanNotMultOfXferSize,
//           NidaqmxError::ErrorWriteToTEDSFailed => nidaqmx_sys::DAQmxErrorWriteToTEDSFailed,
//           NidaqmxError::ErrorSCXIDevNotUsablePowerTurnedOff => nidaqmx_sys::DAQmxErrorSCXIDevNotUsablePowerTurnedOff,
//           NidaqmxError::ErrorCannotReadWhenAutoStartFalseBufSizeZeroAndTaskNotRunning => nidaqmx_sys::DAQmxErrorCannotReadWhenAutoStartFalseBufSizeZeroAndTaskNotRunning,
//           NidaqmxError::ErrorCannotReadWhenAutoStartFalseHWTimedSinglePtAndTaskNotRunning => nidaqmx_sys::DAQmxErrorCannotReadWhenAutoStartFalseHWTimedSinglePtAndTaskNotRunning,
//           NidaqmxError::ErrorCannotReadWhenAutoStartFalseOnDemandAndTaskNotRunning => nidaqmx_sys::DAQmxErrorCannotReadWhenAutoStartFalseOnDemandAndTaskNotRunning,
//           NidaqmxError::ErrorSimultaneousAOWhenNotOnDemandTiming => nidaqmx_sys::DAQmxErrorSimultaneousAOWhenNotOnDemandTiming,
//           NidaqmxError::ErrorMemMapAndSimultaneousAO => nidaqmx_sys::DAQmxErrorMemMapAndSimultaneousAO,
//           NidaqmxError::ErrorWriteFailedMultipleCOOutputTypes => nidaqmx_sys::DAQmxErrorWriteFailedMultipleCOOutputTypes,
//           NidaqmxError::ErrorWriteToTEDSNotSupportedOnRT => nidaqmx_sys::DAQmxErrorWriteToTEDSNotSupportedOnRT,
//           NidaqmxError::ErrorVirtualTEDSDataFileError => nidaqmx_sys::DAQmxErrorVirtualTEDSDataFileError,
//           NidaqmxError::ErrorTEDSSensorDataError => nidaqmx_sys::DAQmxErrorTEDSSensorDataError,
//           NidaqmxError::ErrorDataSizeMoreThanSizeOfEEPROMOnTEDS => nidaqmx_sys::DAQmxErrorDataSizeMoreThanSizeOfEEPROMOnTEDS,
//           NidaqmxError::ErrorPROMOnTEDSContainsBasicTEDSData => nidaqmx_sys::DAQmxErrorPROMOnTEDSContainsBasicTEDSData,
//           NidaqmxError::ErrorPROMOnTEDSAlreadyWritten => nidaqmx_sys::DAQmxErrorPROMOnTEDSAlreadyWritten,
//           NidaqmxError::ErrorTEDSDoesNotContainPROM => nidaqmx_sys::DAQmxErrorTEDSDoesNotContainPROM,
//           NidaqmxError::ErrorHWTimedSinglePointNotSupportedAI => nidaqmx_sys::DAQmxErrorHWTimedSinglePointNotSupportedAI,
//           NidaqmxError::ErrorHWTimedSinglePointOddNumChansInAITask => nidaqmx_sys::DAQmxErrorHWTimedSinglePointOddNumChansInAITask,
//           NidaqmxError::ErrorCantUseOnlyOnBoardMemWithProgrammedIO => nidaqmx_sys::DAQmxErrorCantUseOnlyOnBoardMemWithProgrammedIO,
//           NidaqmxError::ErrorSwitchDevShutDownDueToHighTemp => nidaqmx_sys::DAQmxErrorSwitchDevShutDownDueToHighTemp,
//           NidaqmxError::ErrorExcitationNotSupportedWhenTermCfgDiff => nidaqmx_sys::DAQmxErrorExcitationNotSupportedWhenTermCfgDiff,
//           NidaqmxError::ErrorTEDSMinElecValGEMaxElecVal => nidaqmx_sys::DAQmxErrorTEDSMinElecValGEMaxElecVal,
//           NidaqmxError::ErrorTEDSMinPhysValGEMaxPhysVal => nidaqmx_sys::DAQmxErrorTEDSMinPhysValGEMaxPhysVal,
//           NidaqmxError::ErrorCIOnboardClockNotSupportedAsInputTerm => nidaqmx_sys::DAQmxErrorCIOnboardClockNotSupportedAsInputTerm,
//           NidaqmxError::ErrorInvalidSampModeForPositionMeas => nidaqmx_sys::DAQmxErrorInvalidSampModeForPositionMeas,
//           NidaqmxError::ErrorTrigWhenAOHWTimedSinglePtSampMode => nidaqmx_sys::DAQmxErrorTrigWhenAOHWTimedSinglePtSampMode,
//           NidaqmxError::ErrorDAQmxCantUseStringDueToUnknownChar => nidaqmx_sys::DAQmxErrorDAQmxCantUseStringDueToUnknownChar,
//           NidaqmxError::ErrorDAQmxCantRetrieveStringDueToUnknownChar => nidaqmx_sys::DAQmxErrorDAQmxCantRetrieveStringDueToUnknownChar,
//           NidaqmxError::ErrorClearTEDSNotSupportedOnRT => nidaqmx_sys::DAQmxErrorClearTEDSNotSupportedOnRT,
//           NidaqmxError::ErrorCfgTEDSNotSupportedOnRT => nidaqmx_sys::DAQmxErrorCfgTEDSNotSupportedOnRT,
//           NidaqmxError::ErrorProgFilterClkCfgdToDifferentMinPulseWidthBySameTask1PerDev => nidaqmx_sys::DAQmxErrorProgFilterClkCfgdToDifferentMinPulseWidthBySameTask1PerDev,
//           NidaqmxError::ErrorProgFilterClkCfgdToDifferentMinPulseWidthByAnotherTask1PerDev => nidaqmx_sys::DAQmxErrorProgFilterClkCfgdToDifferentMinPulseWidthByAnotherTask1PerDev,
//           NidaqmxError::ErrorNoLastExtCalDateTimeLastExtCalNotDAQmx => nidaqmx_sys::DAQmxErrorNoLastExtCalDateTimeLastExtCalNotDAQmx,
//           NidaqmxError::ErrorCannotWriteNotStartedAutoStartFalseNotOnDemandHWTimedSglPt => nidaqmx_sys::DAQmxErrorCannotWriteNotStartedAutoStartFalseNotOnDemandHWTimedSglPt,
//           NidaqmxError::ErrorCannotWriteNotStartedAutoStartFalseNotOnDemandBufSizeZero => nidaqmx_sys::DAQmxErrorCannotWriteNotStartedAutoStartFalseNotOnDemandBufSizeZero,
//           NidaqmxError::ErrorCOInvalidTimingSrcDueToSignal => nidaqmx_sys::DAQmxErrorCOInvalidTimingSrcDueToSignal,
//           NidaqmxError::ErrorCIInvalidTimingSrcForSampClkDueToSampTimingType => nidaqmx_sys::DAQmxErrorCIInvalidTimingSrcForSampClkDueToSampTimingType,
//           NidaqmxError::ErrorCIInvalidTimingSrcForEventCntDueToSampMode => nidaqmx_sys::DAQmxErrorCIInvalidTimingSrcForEventCntDueToSampMode,
//           NidaqmxError::ErrorNoChangeDetectOnNonInputDigLineForDev => nidaqmx_sys::DAQmxErrorNoChangeDetectOnNonInputDigLineForDev,
//           NidaqmxError::ErrorEmptyStringTermNameNotSupported => nidaqmx_sys::DAQmxErrorEmptyStringTermNameNotSupported,
//           NidaqmxError::ErrorMemMapEnabledForHWTimedNonBufferedAO => nidaqmx_sys::DAQmxErrorMemMapEnabledForHWTimedNonBufferedAO,
//           NidaqmxError::ErrorDevOnboardMemOverflowDuringHWTimedNonBufferedGen => nidaqmx_sys::DAQmxErrorDevOnboardMemOverflowDuringHWTimedNonBufferedGen,
//           NidaqmxError::ErrorCODAQmxWriteMultipleChans => nidaqmx_sys::DAQmxErrorCODAQmxWriteMultipleChans,
//           NidaqmxError::ErrorCantMaintainExistingValueAOSync => nidaqmx_sys::DAQmxErrorCantMaintainExistingValueAOSync,
//           NidaqmxError::ErrorMStudioMultiplePhysChansNotSupported => nidaqmx_sys::DAQmxErrorMStudioMultiplePhysChansNotSupported,
//           NidaqmxError::ErrorCantConfigureTEDSForChan => nidaqmx_sys::DAQmxErrorCantConfigureTEDSForChan,
//           NidaqmxError::ErrorWriteDataTypeTooSmall => nidaqmx_sys::DAQmxErrorWriteDataTypeTooSmall,
//           NidaqmxError::ErrorReadDataTypeTooSmall => nidaqmx_sys::DAQmxErrorReadDataTypeTooSmall,
//           NidaqmxError::ErrorMeasuredBridgeOffsetTooHigh => nidaqmx_sys::DAQmxErrorMeasuredBridgeOffsetTooHigh,
//           NidaqmxError::ErrorStartTrigConflictWithCOHWTimedSinglePt => nidaqmx_sys::DAQmxErrorStartTrigConflictWithCOHWTimedSinglePt,
//           NidaqmxError::ErrorSampClkRateExtSampClkTimebaseRateMismatch => nidaqmx_sys::DAQmxErrorSampClkRateExtSampClkTimebaseRateMismatch,
//           NidaqmxError::ErrorInvalidTimingSrcDueToSampTimingType => nidaqmx_sys::DAQmxErrorInvalidTimingSrcDueToSampTimingType,
//           NidaqmxError::ErrorVirtualTEDSFileNotFound => nidaqmx_sys::DAQmxErrorVirtualTEDSFileNotFound,
//           NidaqmxError::ErrorMStudioNoForwardPolyScaleCoeffs => nidaqmx_sys::DAQmxErrorMStudioNoForwardPolyScaleCoeffs,
//           NidaqmxError::ErrorMStudioNoReversePolyScaleCoeffs => nidaqmx_sys::DAQmxErrorMStudioNoReversePolyScaleCoeffs,
//           NidaqmxError::ErrorMStudioNoPolyScaleCoeffsUseCalc => nidaqmx_sys::DAQmxErrorMStudioNoPolyScaleCoeffsUseCalc,
//           NidaqmxError::ErrorMStudioNoForwardPolyScaleCoeffsUseCalc => nidaqmx_sys::DAQmxErrorMStudioNoForwardPolyScaleCoeffsUseCalc,
//           NidaqmxError::ErrorMStudioNoReversePolyScaleCoeffsUseCalc => nidaqmx_sys::DAQmxErrorMStudioNoReversePolyScaleCoeffsUseCalc,
//           NidaqmxError::ErrorCOSampModeSampTimingTypeSampClkConflict => nidaqmx_sys::DAQmxErrorCOSampModeSampTimingTypeSampClkConflict,
//           NidaqmxError::ErrorDevCannotProduceMinPulseWidth => nidaqmx_sys::DAQmxErrorDevCannotProduceMinPulseWidth,
//           NidaqmxError::ErrorCannotProduceMinPulseWidthGivenPropertyValues => nidaqmx_sys::DAQmxErrorCannotProduceMinPulseWidthGivenPropertyValues,
//           NidaqmxError::ErrorTermCfgdToDifferentMinPulseWidthByAnotherTask => nidaqmx_sys::DAQmxErrorTermCfgdToDifferentMinPulseWidthByAnotherTask,
//           NidaqmxError::ErrorTermCfgdToDifferentMinPulseWidthByAnotherProperty => nidaqmx_sys::DAQmxErrorTermCfgdToDifferentMinPulseWidthByAnotherProperty,
//           NidaqmxError::ErrorDigSyncNotAvailableOnTerm => nidaqmx_sys::DAQmxErrorDigSyncNotAvailableOnTerm,
//           NidaqmxError::ErrorDigFilterNotAvailableOnTerm => nidaqmx_sys::DAQmxErrorDigFilterNotAvailableOnTerm,
//           NidaqmxError::ErrorDigFilterEnabledMinPulseWidthNotCfg => nidaqmx_sys::DAQmxErrorDigFilterEnabledMinPulseWidthNotCfg,
//           NidaqmxError::ErrorDigFilterAndSyncBothEnabled => nidaqmx_sys::DAQmxErrorDigFilterAndSyncBothEnabled,
//           NidaqmxError::ErrorHWTimedSinglePointAOAndDataXferNotProgIO => nidaqmx_sys::DAQmxErrorHWTimedSinglePointAOAndDataXferNotProgIO,
//           NidaqmxError::ErrorNonBufferedAOAndDataXferNotProgIO => nidaqmx_sys::DAQmxErrorNonBufferedAOAndDataXferNotProgIO,
//           NidaqmxError::ErrorProgIODataXferForBufferedAO => nidaqmx_sys::DAQmxErrorProgIODataXferForBufferedAO,
//           NidaqmxError::ErrorTEDSLegacyTemplateIDInvalidOrUnsupported => nidaqmx_sys::DAQmxErrorTEDSLegacyTemplateIDInvalidOrUnsupported,
//           NidaqmxError::ErrorTEDSMappingMethodInvalidOrUnsupported => nidaqmx_sys::DAQmxErrorTEDSMappingMethodInvalidOrUnsupported,
//           NidaqmxError::ErrorTEDSLinearMappingSlopeZero => nidaqmx_sys::DAQmxErrorTEDSLinearMappingSlopeZero,
//           NidaqmxError::ErrorAIInputBufferSizeNotMultOfXferSize => nidaqmx_sys::DAQmxErrorAIInputBufferSizeNotMultOfXferSize,
//           NidaqmxError::ErrorNoSyncPulseExtSampClkTimebase => nidaqmx_sys::DAQmxErrorNoSyncPulseExtSampClkTimebase,
//           NidaqmxError::ErrorNoSyncPulseAnotherTaskRunning => nidaqmx_sys::DAQmxErrorNoSyncPulseAnotherTaskRunning,
//           NidaqmxError::ErrorAOMinMaxNotInGainRange => nidaqmx_sys::DAQmxErrorAOMinMaxNotInGainRange,
//           NidaqmxError::ErrorAOMinMaxNotInDACRange => nidaqmx_sys::DAQmxErrorAOMinMaxNotInDACRange,
//           NidaqmxError::ErrorDevOnlySupportsSampClkTimingAO => nidaqmx_sys::DAQmxErrorDevOnlySupportsSampClkTimingAO,
//           NidaqmxError::ErrorDevOnlySupportsSampClkTimingAI => nidaqmx_sys::DAQmxErrorDevOnlySupportsSampClkTimingAI,
//           NidaqmxError::ErrorTEDSIncompatibleSensorAndMeasType => nidaqmx_sys::DAQmxErrorTEDSIncompatibleSensorAndMeasType,
//           NidaqmxError::ErrorTEDSMultipleCalTemplatesNotSupported => nidaqmx_sys::DAQmxErrorTEDSMultipleCalTemplatesNotSupported,
//           NidaqmxError::ErrorTEDSTemplateParametersNotSupported => nidaqmx_sys::DAQmxErrorTEDSTemplateParametersNotSupported,
//           NidaqmxError::ErrorParsingTEDSData => nidaqmx_sys::DAQmxErrorParsingTEDSData,
//           NidaqmxError::ErrorMultipleActivePhysChansNotSupported => nidaqmx_sys::DAQmxErrorMultipleActivePhysChansNotSupported,
//           NidaqmxError::ErrorNoChansSpecdForChangeDetect => nidaqmx_sys::DAQmxErrorNoChansSpecdForChangeDetect,
//           NidaqmxError::ErrorInvalidCalVoltageForGivenGain => nidaqmx_sys::DAQmxErrorInvalidCalVoltageForGivenGain,
//           NidaqmxError::ErrorInvalidCalGain => nidaqmx_sys::DAQmxErrorInvalidCalGain,
//           NidaqmxError::ErrorMultipleWritesBetweenSampClks => nidaqmx_sys::DAQmxErrorMultipleWritesBetweenSampClks,
//           NidaqmxError::ErrorInvalidAcqTypeForFREQOUT => nidaqmx_sys::DAQmxErrorInvalidAcqTypeForFREQOUT,
//           NidaqmxError::ErrorSuitableTimebaseNotFoundTimeCombo2 => nidaqmx_sys::DAQmxErrorSuitableTimebaseNotFoundTimeCombo2,
//           NidaqmxError::ErrorSuitableTimebaseNotFoundFrequencyCombo2 => nidaqmx_sys::DAQmxErrorSuitableTimebaseNotFoundFrequencyCombo2,
//           NidaqmxError::ErrorRefClkRateRefClkSrcMismatch => nidaqmx_sys::DAQmxErrorRefClkRateRefClkSrcMismatch,
//           NidaqmxError::ErrorNoTEDSTerminalBlock => nidaqmx_sys::DAQmxErrorNoTEDSTerminalBlock,
//           NidaqmxError::ErrorCorruptedTEDSMemory => nidaqmx_sys::DAQmxErrorCorruptedTEDSMemory,
//           NidaqmxError::ErrorTEDSNotSupported => nidaqmx_sys::DAQmxErrorTEDSNotSupported,
//           NidaqmxError::ErrorTimingSrcTaskStartedBeforeTimedLoop => nidaqmx_sys::DAQmxErrorTimingSrcTaskStartedBeforeTimedLoop,
//           NidaqmxError::ErrorPropertyNotSupportedForTimingSrc => nidaqmx_sys::DAQmxErrorPropertyNotSupportedForTimingSrc,
//           NidaqmxError::ErrorTimingSrcDoesNotExist => nidaqmx_sys::DAQmxErrorTimingSrcDoesNotExist,
//           NidaqmxError::ErrorInputBufferSizeNotEqualSampsPerChanForFiniteSampMode => nidaqmx_sys::DAQmxErrorInputBufferSizeNotEqualSampsPerChanForFiniteSampMode,
//           NidaqmxError::ErrorFREQOUTCannotProduceDesiredFrequency2 => nidaqmx_sys::DAQmxErrorFREQOUTCannotProduceDesiredFrequency2,
//           NidaqmxError::ErrorExtRefClkRateNotSpecified => nidaqmx_sys::DAQmxErrorExtRefClkRateNotSpecified,
//           NidaqmxError::ErrorDeviceDoesNotSupportDMADataXferForNonBufferedAcq => nidaqmx_sys::DAQmxErrorDeviceDoesNotSupportDMADataXferForNonBufferedAcq,
//           NidaqmxError::ErrorDigFilterMinPulseWidthSetWhenTristateIsFalse => nidaqmx_sys::DAQmxErrorDigFilterMinPulseWidthSetWhenTristateIsFalse,
//           NidaqmxError::ErrorDigFilterEnableSetWhenTristateIsFalse => nidaqmx_sys::DAQmxErrorDigFilterEnableSetWhenTristateIsFalse,
//           NidaqmxError::ErrorNoHWTimingWithOnDemand => nidaqmx_sys::DAQmxErrorNoHWTimingWithOnDemand,
//           NidaqmxError::ErrorCannotDetectChangesWhenTristateIsFalse => nidaqmx_sys::DAQmxErrorCannotDetectChangesWhenTristateIsFalse,
//           NidaqmxError::ErrorCannotHandshakeWhenTristateIsFalse => nidaqmx_sys::DAQmxErrorCannotHandshakeWhenTristateIsFalse,
//           NidaqmxError::ErrorLinesUsedForStaticInputNotForHandshakingControl => nidaqmx_sys::DAQmxErrorLinesUsedForStaticInputNotForHandshakingControl,
//           NidaqmxError::ErrorLinesUsedForHandshakingControlNotForStaticInput => nidaqmx_sys::DAQmxErrorLinesUsedForHandshakingControlNotForStaticInput,
//           NidaqmxError::ErrorLinesUsedForStaticInputNotForHandshakingInput => nidaqmx_sys::DAQmxErrorLinesUsedForStaticInputNotForHandshakingInput,
//           NidaqmxError::ErrorLinesUsedForHandshakingInputNotForStaticInput => nidaqmx_sys::DAQmxErrorLinesUsedForHandshakingInputNotForStaticInput,
//           NidaqmxError::ErrorDifferentDITristateValsForChansInTask => nidaqmx_sys::DAQmxErrorDifferentDITristateValsForChansInTask,
//           NidaqmxError::ErrorTimebaseCalFreqVarianceTooLarge => nidaqmx_sys::DAQmxErrorTimebaseCalFreqVarianceTooLarge,
//           NidaqmxError::ErrorTimebaseCalFailedToConverge => nidaqmx_sys::DAQmxErrorTimebaseCalFailedToConverge,
//           NidaqmxError::ErrorInadequateResolutionForTimebaseCal => nidaqmx_sys::DAQmxErrorInadequateResolutionForTimebaseCal,
//           NidaqmxError::ErrorInvalidAOGainCalConst => nidaqmx_sys::DAQmxErrorInvalidAOGainCalConst,
//           NidaqmxError::ErrorInvalidAOOffsetCalConst => nidaqmx_sys::DAQmxErrorInvalidAOOffsetCalConst,
//           NidaqmxError::ErrorInvalidAIGainCalConst => nidaqmx_sys::DAQmxErrorInvalidAIGainCalConst,
//           NidaqmxError::ErrorInvalidAIOffsetCalConst => nidaqmx_sys::DAQmxErrorInvalidAIOffsetCalConst,
//           NidaqmxError::ErrorDigOutputOverrun => nidaqmx_sys::DAQmxErrorDigOutputOverrun,
//           NidaqmxError::ErrorDigInputOverrun => nidaqmx_sys::DAQmxErrorDigInputOverrun,
//           NidaqmxError::ErrorAcqStoppedDriverCantXferDataFastEnough => nidaqmx_sys::DAQmxErrorAcqStoppedDriverCantXferDataFastEnough,
//           NidaqmxError::ErrorChansCantAppearInSameTask => nidaqmx_sys::DAQmxErrorChansCantAppearInSameTask,
//           NidaqmxError::ErrorInputCfgFailedBecauseWatchdogExpired => nidaqmx_sys::DAQmxErrorInputCfgFailedBecauseWatchdogExpired,
//           NidaqmxError::ErrorAnalogTrigChanNotExternal => nidaqmx_sys::DAQmxErrorAnalogTrigChanNotExternal,
//           NidaqmxError::ErrorTooManyChansForInternalAIInputSrc => nidaqmx_sys::DAQmxErrorTooManyChansForInternalAIInputSrc,
//           NidaqmxError::ErrorTEDSSensorNotDetected => nidaqmx_sys::DAQmxErrorTEDSSensorNotDetected,
//           NidaqmxError::ErrorPrptyGetSpecdActiveItemFailedDueToDifftValues => nidaqmx_sys::DAQmxErrorPrptyGetSpecdActiveItemFailedDueToDifftValues,
//           NidaqmxError::ErrorRoutingDestTermPXIClk10InNotInSlot2 => nidaqmx_sys::DAQmxErrorRoutingDestTermPXIClk10InNotInSlot2,
//           NidaqmxError::ErrorRoutingDestTermPXIStarXNotInSlot2 => nidaqmx_sys::DAQmxErrorRoutingDestTermPXIStarXNotInSlot2,
//           NidaqmxError::ErrorRoutingSrcTermPXIStarXNotInSlot2 => nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIStarXNotInSlot2,
//           NidaqmxError::ErrorRoutingSrcTermPXIStarInSlot16AndAbove => nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIStarInSlot16AndAbove,
//           NidaqmxError::ErrorRoutingDestTermPXIStarInSlot16AndAbove => nidaqmx_sys::DAQmxErrorRoutingDestTermPXIStarInSlot16AndAbove,
//           NidaqmxError::ErrorRoutingDestTermPXIStarInSlot2 => nidaqmx_sys::DAQmxErrorRoutingDestTermPXIStarInSlot2,
//           NidaqmxError::ErrorRoutingSrcTermPXIStarInSlot2 => nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIStarInSlot2,
//           NidaqmxError::ErrorRoutingDestTermPXIChassisNotIdentified => nidaqmx_sys::DAQmxErrorRoutingDestTermPXIChassisNotIdentified,
//           NidaqmxError::ErrorRoutingSrcTermPXIChassisNotIdentified => nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIChassisNotIdentified,
//           NidaqmxError::ErrorFailedToAcquireCalData => nidaqmx_sys::DAQmxErrorFailedToAcquireCalData,
//           NidaqmxError::ErrorBridgeOffsetNullingCalNotSupported => nidaqmx_sys::DAQmxErrorBridgeOffsetNullingCalNotSupported,
//           NidaqmxError::ErrorAIMaxNotSpecified => nidaqmx_sys::DAQmxErrorAIMaxNotSpecified,
//           NidaqmxError::ErrorAIMinNotSpecified => nidaqmx_sys::DAQmxErrorAIMinNotSpecified,
//           NidaqmxError::ErrorOddTotalBufferSizeToWrite => nidaqmx_sys::DAQmxErrorOddTotalBufferSizeToWrite,
//           NidaqmxError::ErrorOddTotalNumSampsToWrite => nidaqmx_sys::DAQmxErrorOddTotalNumSampsToWrite,
//           NidaqmxError::ErrorBufferWithWaitMode => nidaqmx_sys::DAQmxErrorBufferWithWaitMode,
//           NidaqmxError::ErrorBufferWithHWTimedSinglePointSampMode => nidaqmx_sys::DAQmxErrorBufferWithHWTimedSinglePointSampMode,
//           NidaqmxError::ErrorCOWritePulseLowTicksNotSupported => nidaqmx_sys::DAQmxErrorCOWritePulseLowTicksNotSupported,
//           NidaqmxError::ErrorCOWritePulseHighTicksNotSupported => nidaqmx_sys::DAQmxErrorCOWritePulseHighTicksNotSupported,
//           NidaqmxError::ErrorCOWritePulseLowTimeOutOfRange => nidaqmx_sys::DAQmxErrorCOWritePulseLowTimeOutOfRange,
//           NidaqmxError::ErrorCOWritePulseHighTimeOutOfRange => nidaqmx_sys::DAQmxErrorCOWritePulseHighTimeOutOfRange,
//           NidaqmxError::ErrorCOWriteFreqOutOfRange => nidaqmx_sys::DAQmxErrorCOWriteFreqOutOfRange,
//           NidaqmxError::ErrorCOWriteDutyCycleOutOfRange => nidaqmx_sys::DAQmxErrorCOWriteDutyCycleOutOfRange,
//           NidaqmxError::ErrorInvalidInstallation => nidaqmx_sys::DAQmxErrorInvalidInstallation,
//           NidaqmxError::ErrorRefTrigMasterSessionUnavailable => nidaqmx_sys::DAQmxErrorRefTrigMasterSessionUnavailable,
//           NidaqmxError::ErrorRouteFailedBecauseWatchdogExpired => nidaqmx_sys::DAQmxErrorRouteFailedBecauseWatchdogExpired,
//           NidaqmxError::ErrorDeviceShutDownDueToHighTemp => nidaqmx_sys::DAQmxErrorDeviceShutDownDueToHighTemp,
//           NidaqmxError::ErrorNoMemMapWhenHWTimedSinglePoint => nidaqmx_sys::DAQmxErrorNoMemMapWhenHWTimedSinglePoint,
//           NidaqmxError::ErrorWriteFailedBecauseWatchdogExpired => nidaqmx_sys::DAQmxErrorWriteFailedBecauseWatchdogExpired,
//           NidaqmxError::ErrorDifftInternalAIInputSrcs => nidaqmx_sys::DAQmxErrorDifftInternalAIInputSrcs,
//           NidaqmxError::ErrorDifftAIInputSrcInOneChanGroup => nidaqmx_sys::DAQmxErrorDifftAIInputSrcInOneChanGroup,
//           NidaqmxError::ErrorInternalAIInputSrcInMultChanGroups => nidaqmx_sys::DAQmxErrorInternalAIInputSrcInMultChanGroups,
//           NidaqmxError::ErrorSwitchOpFailedDueToPrevError => nidaqmx_sys::DAQmxErrorSwitchOpFailedDueToPrevError,
//           NidaqmxError::ErrorWroteMultiSampsUsingSingleSampWrite => nidaqmx_sys::DAQmxErrorWroteMultiSampsUsingSingleSampWrite,
//           NidaqmxError::ErrorMismatchedInputArraySizes => nidaqmx_sys::DAQmxErrorMismatchedInputArraySizes,
//           NidaqmxError::ErrorCantExceedRelayDriveLimit => nidaqmx_sys::DAQmxErrorCantExceedRelayDriveLimit,
//           NidaqmxError::ErrorDACRngLowNotEqualToMinusRefVal => nidaqmx_sys::DAQmxErrorDACRngLowNotEqualToMinusRefVal,
//           NidaqmxError::ErrorCantAllowConnectDACToGnd => nidaqmx_sys::DAQmxErrorCantAllowConnectDACToGnd,
//           NidaqmxError::ErrorWatchdogTimeoutOutOfRangeAndNotSpecialVal => nidaqmx_sys::DAQmxErrorWatchdogTimeoutOutOfRangeAndNotSpecialVal,
//           NidaqmxError::ErrorNoWatchdogOutputOnPortReservedForInput => nidaqmx_sys::DAQmxErrorNoWatchdogOutputOnPortReservedForInput,
//           NidaqmxError::ErrorNoInputOnPortCfgdForWatchdogOutput => nidaqmx_sys::DAQmxErrorNoInputOnPortCfgdForWatchdogOutput,
//           NidaqmxError::ErrorWatchdogExpirationStateNotEqualForLinesInPort => nidaqmx_sys::DAQmxErrorWatchdogExpirationStateNotEqualForLinesInPort,
//           NidaqmxError::ErrorCannotPerformOpWhenTaskNotReserved => nidaqmx_sys::DAQmxErrorCannotPerformOpWhenTaskNotReserved,
//           NidaqmxError::ErrorPowerupStateNotSupported => nidaqmx_sys::DAQmxErrorPowerupStateNotSupported,
//           NidaqmxError::ErrorWatchdogTimerNotSupported => nidaqmx_sys::DAQmxErrorWatchdogTimerNotSupported,
//           NidaqmxError::ErrorOpNotSupportedWhenRefClkSrcNone => nidaqmx_sys::DAQmxErrorOpNotSupportedWhenRefClkSrcNone,
//           NidaqmxError::ErrorSampClkRateUnavailable => nidaqmx_sys::DAQmxErrorSampClkRateUnavailable,
//           NidaqmxError::ErrorPrptyGetSpecdSingleActiveChanFailedDueToDifftVals => nidaqmx_sys::DAQmxErrorPrptyGetSpecdSingleActiveChanFailedDueToDifftVals,
//           NidaqmxError::ErrorPrptyGetImpliedActiveChanFailedDueToDifftVals => nidaqmx_sys::DAQmxErrorPrptyGetImpliedActiveChanFailedDueToDifftVals,
//           NidaqmxError::ErrorPrptyGetSpecdActiveChanFailedDueToDifftVals => nidaqmx_sys::DAQmxErrorPrptyGetSpecdActiveChanFailedDueToDifftVals,
//           NidaqmxError::ErrorNoRegenWhenUsingBrdMem => nidaqmx_sys::DAQmxErrorNoRegenWhenUsingBrdMem,
//           NidaqmxError::ErrorNonbufferedReadMoreThanSampsPerChan => nidaqmx_sys::DAQmxErrorNonbufferedReadMoreThanSampsPerChan,
//           NidaqmxError::ErrorWatchdogExpirationTristateNotSpecdForEntirePort => nidaqmx_sys::DAQmxErrorWatchdogExpirationTristateNotSpecdForEntirePort,
//           NidaqmxError::ErrorPowerupTristateNotSpecdForEntirePort => nidaqmx_sys::DAQmxErrorPowerupTristateNotSpecdForEntirePort,
//           NidaqmxError::ErrorPowerupStateNotSpecdForEntirePort => nidaqmx_sys::DAQmxErrorPowerupStateNotSpecdForEntirePort,
//           NidaqmxError::ErrorCantSetWatchdogExpirationOnDigInChan => nidaqmx_sys::DAQmxErrorCantSetWatchdogExpirationOnDigInChan,
//           NidaqmxError::ErrorCantSetPowerupStateOnDigInChan => nidaqmx_sys::DAQmxErrorCantSetPowerupStateOnDigInChan,
//           NidaqmxError::ErrorPhysChanNotInTask => nidaqmx_sys::DAQmxErrorPhysChanNotInTask,
//           NidaqmxError::ErrorPhysChanDevNotInTask => nidaqmx_sys::DAQmxErrorPhysChanDevNotInTask,
//           NidaqmxError::ErrorDigInputNotSupported => nidaqmx_sys::DAQmxErrorDigInputNotSupported,
//           NidaqmxError::ErrorDigFilterIntervalNotEqualForLines => nidaqmx_sys::DAQmxErrorDigFilterIntervalNotEqualForLines,
//           NidaqmxError::ErrorDigFilterIntervalAlreadyCfgd => nidaqmx_sys::DAQmxErrorDigFilterIntervalAlreadyCfgd,
//           NidaqmxError::ErrorCantResetExpiredWatchdog => nidaqmx_sys::DAQmxErrorCantResetExpiredWatchdog,
//           NidaqmxError::ErrorActiveChanTooManyLinesSpecdWhenGettingPrpty => nidaqmx_sys::DAQmxErrorActiveChanTooManyLinesSpecdWhenGettingPrpty,
//           NidaqmxError::ErrorActiveChanNotSpecdWhenGetting1LinePrpty => nidaqmx_sys::DAQmxErrorActiveChanNotSpecdWhenGetting1LinePrpty,
//           NidaqmxError::ErrorDigPrptyCannotBeSetPerLine => nidaqmx_sys::DAQmxErrorDigPrptyCannotBeSetPerLine,
//           NidaqmxError::ErrorSendAdvCmpltAfterWaitForTrigInScanlist => nidaqmx_sys::DAQmxErrorSendAdvCmpltAfterWaitForTrigInScanlist,
//           NidaqmxError::ErrorDisconnectionRequiredInScanlist => nidaqmx_sys::DAQmxErrorDisconnectionRequiredInScanlist,
//           NidaqmxError::ErrorTwoWaitForTrigsAfterConnectionInScanlist => nidaqmx_sys::DAQmxErrorTwoWaitForTrigsAfterConnectionInScanlist,
//           NidaqmxError::ErrorActionSeparatorRequiredAfterBreakingConnectionInScanlist => nidaqmx_sys::DAQmxErrorActionSeparatorRequiredAfterBreakingConnectionInScanlist,
//           NidaqmxError::ErrorConnectionInScanlistMustWaitForTrig => nidaqmx_sys::DAQmxErrorConnectionInScanlistMustWaitForTrig,
//           NidaqmxError::ErrorActionNotSupportedTaskNotWatchdog => nidaqmx_sys::DAQmxErrorActionNotSupportedTaskNotWatchdog,
//           NidaqmxError::ErrorWfmNameSameAsScriptName => nidaqmx_sys::DAQmxErrorWfmNameSameAsScriptName,
//           NidaqmxError::ErrorScriptNameSameAsWfmName => nidaqmx_sys::DAQmxErrorScriptNameSameAsWfmName,
//           NidaqmxError::ErrorDSFStopClock => nidaqmx_sys::DAQmxErrorDSFStopClock,
//           NidaqmxError::ErrorDSFReadyForStartClock => nidaqmx_sys::DAQmxErrorDSFReadyForStartClock,
//           NidaqmxError::ErrorWriteOffsetNotMultOfIncr => nidaqmx_sys::DAQmxErrorWriteOffsetNotMultOfIncr,
//           NidaqmxError::ErrorDifferentPrptyValsNotSupportedOnDev => nidaqmx_sys::DAQmxErrorDifferentPrptyValsNotSupportedOnDev,
//           NidaqmxError::ErrorRefAndPauseTrigConfigured => nidaqmx_sys::DAQmxErrorRefAndPauseTrigConfigured,
//           NidaqmxError::ErrorFailedToEnableHighSpeedInputClock => nidaqmx_sys::DAQmxErrorFailedToEnableHighSpeedInputClock,
//           NidaqmxError::ErrorEmptyPhysChanInPowerUpStatesArray => nidaqmx_sys::DAQmxErrorEmptyPhysChanInPowerUpStatesArray,
//           NidaqmxError::ErrorActivePhysChanTooManyLinesSpecdWhenGettingPrpty => nidaqmx_sys::DAQmxErrorActivePhysChanTooManyLinesSpecdWhenGettingPrpty,
//           NidaqmxError::ErrorActivePhysChanNotSpecdWhenGetting1LinePrpty => nidaqmx_sys::DAQmxErrorActivePhysChanNotSpecdWhenGetting1LinePrpty,
//           NidaqmxError::ErrorPXIDevTempCausedShutDown => nidaqmx_sys::DAQmxErrorPXIDevTempCausedShutDown,
//           NidaqmxError::ErrorInvalidNumSampsToWrite => nidaqmx_sys::DAQmxErrorInvalidNumSampsToWrite,
//           NidaqmxError::ErrorOutputFIFOUnderflow2 => nidaqmx_sys::DAQmxErrorOutputFIFOUnderflow2,
//           NidaqmxError::ErrorRepeatedAIPhysicalChan => nidaqmx_sys::DAQmxErrorRepeatedAIPhysicalChan,
//           NidaqmxError::ErrorMultScanOpsInOneChassis => nidaqmx_sys::DAQmxErrorMultScanOpsInOneChassis,
//           NidaqmxError::ErrorInvalidAIChanOrder => nidaqmx_sys::DAQmxErrorInvalidAIChanOrder,
//           NidaqmxError::ErrorReversePowerProtectionActivated => nidaqmx_sys::DAQmxErrorReversePowerProtectionActivated,
//           NidaqmxError::ErrorInvalidAsynOpHandle => nidaqmx_sys::DAQmxErrorInvalidAsynOpHandle,
//           NidaqmxError::ErrorFailedToEnableHighSpeedOutput => nidaqmx_sys::DAQmxErrorFailedToEnableHighSpeedOutput,
//           NidaqmxError::ErrorCannotReadPastEndOfRecord => nidaqmx_sys::DAQmxErrorCannotReadPastEndOfRecord,
//           NidaqmxError::ErrorAcqStoppedToPreventInputBufferOverwriteOneDataXferMech => nidaqmx_sys::DAQmxErrorAcqStoppedToPreventInputBufferOverwriteOneDataXferMech,
//           NidaqmxError::ErrorZeroBasedChanIndexInvalid => nidaqmx_sys::DAQmxErrorZeroBasedChanIndexInvalid,
//           NidaqmxError::ErrorNoChansOfGivenTypeInTask => nidaqmx_sys::DAQmxErrorNoChansOfGivenTypeInTask,
//           NidaqmxError::ErrorSampClkSrcInvalidForOutputValidForInput => nidaqmx_sys::DAQmxErrorSampClkSrcInvalidForOutputValidForInput,
//           NidaqmxError::ErrorOutputBufSizeTooSmallToStartGen => nidaqmx_sys::DAQmxErrorOutputBufSizeTooSmallToStartGen,
//           NidaqmxError::ErrorInputBufSizeTooSmallToStartAcq => nidaqmx_sys::DAQmxErrorInputBufSizeTooSmallToStartAcq,
//           NidaqmxError::ErrorExportTwoSignalsOnSameTerminal => nidaqmx_sys::DAQmxErrorExportTwoSignalsOnSameTerminal,
//           NidaqmxError::ErrorChanIndexInvalid => nidaqmx_sys::DAQmxErrorChanIndexInvalid,
//           NidaqmxError::ErrorRangeSyntaxNumberTooBig => nidaqmx_sys::DAQmxErrorRangeSyntaxNumberTooBig,
//           NidaqmxError::ErrorNULLPtr => nidaqmx_sys::DAQmxErrorNULLPtr,
//           NidaqmxError::ErrorScaledMinEqualMax => nidaqmx_sys::DAQmxErrorScaledMinEqualMax,
//           NidaqmxError::ErrorPreScaledMinEqualMax => nidaqmx_sys::DAQmxErrorPreScaledMinEqualMax,
//           NidaqmxError::ErrorPropertyNotSupportedForScaleType => nidaqmx_sys::DAQmxErrorPropertyNotSupportedForScaleType,
//           NidaqmxError::ErrorChannelNameGenerationNumberTooBig => nidaqmx_sys::DAQmxErrorChannelNameGenerationNumberTooBig,
//           NidaqmxError::ErrorRepeatedNumberInScaledValues => nidaqmx_sys::DAQmxErrorRepeatedNumberInScaledValues,
//           NidaqmxError::ErrorRepeatedNumberInPreScaledValues => nidaqmx_sys::DAQmxErrorRepeatedNumberInPreScaledValues,
//           NidaqmxError::ErrorLinesAlreadyReservedForOutput => nidaqmx_sys::DAQmxErrorLinesAlreadyReservedForOutput,
//           NidaqmxError::ErrorSwitchOperationChansSpanMultipleDevsInList => nidaqmx_sys::DAQmxErrorSwitchOperationChansSpanMultipleDevsInList,
//           NidaqmxError::ErrorInvalidIDInListAtBeginningOfSwitchOperation => nidaqmx_sys::DAQmxErrorInvalidIDInListAtBeginningOfSwitchOperation,
//           NidaqmxError::ErrorMStudioInvalidPolyDirection => nidaqmx_sys::DAQmxErrorMStudioInvalidPolyDirection,
//           NidaqmxError::ErrorMStudioPropertyGetWhileTaskNotVerified => nidaqmx_sys::DAQmxErrorMStudioPropertyGetWhileTaskNotVerified,
//           NidaqmxError::ErrorRangeWithTooManyObjects => nidaqmx_sys::DAQmxErrorRangeWithTooManyObjects,
//           NidaqmxError::ErrorCppDotNetAPINegativeBufferSize => nidaqmx_sys::DAQmxErrorCppDotNetAPINegativeBufferSize,
//           NidaqmxError::ErrorCppCantRemoveInvalidEventHandler => nidaqmx_sys::DAQmxErrorCppCantRemoveInvalidEventHandler,
//           NidaqmxError::ErrorCppCantRemoveEventHandlerTwice => nidaqmx_sys::DAQmxErrorCppCantRemoveEventHandlerTwice,
//           NidaqmxError::ErrorCppCantRemoveOtherObjectsEventHandler => nidaqmx_sys::DAQmxErrorCppCantRemoveOtherObjectsEventHandler,
//           NidaqmxError::ErrorDigLinesReservedOrUnavailable => nidaqmx_sys::DAQmxErrorDigLinesReservedOrUnavailable,
//           NidaqmxError::ErrorDSFFailedToResetStream => nidaqmx_sys::DAQmxErrorDSFFailedToResetStream,
//           NidaqmxError::ErrorDSFReadyForOutputNotAsserted => nidaqmx_sys::DAQmxErrorDSFReadyForOutputNotAsserted,
//           NidaqmxError::ErrorSampToWritePerChanNotMultipleOfIncr => nidaqmx_sys::DAQmxErrorSampToWritePerChanNotMultipleOfIncr,
//           NidaqmxError::ErrorAOPropertiesCauseVoltageBelowMin => nidaqmx_sys::DAQmxErrorAOPropertiesCauseVoltageBelowMin,
//           NidaqmxError::ErrorAOPropertiesCauseVoltageOverMax => nidaqmx_sys::DAQmxErrorAOPropertiesCauseVoltageOverMax,
//           NidaqmxError::ErrorPropertyNotSupportedWhenRefClkSrcNone => nidaqmx_sys::DAQmxErrorPropertyNotSupportedWhenRefClkSrcNone,
//           NidaqmxError::ErrorAIMaxTooSmall => nidaqmx_sys::DAQmxErrorAIMaxTooSmall,
//           NidaqmxError::ErrorAIMaxTooLarge => nidaqmx_sys::DAQmxErrorAIMaxTooLarge,
//           NidaqmxError::ErrorAIMinTooSmall => nidaqmx_sys::DAQmxErrorAIMinTooSmall,
//           NidaqmxError::ErrorAIMinTooLarge => nidaqmx_sys::DAQmxErrorAIMinTooLarge,
//           NidaqmxError::ErrorBuiltInCJCSrcNotSupported => nidaqmx_sys::DAQmxErrorBuiltInCJCSrcNotSupported,
//           NidaqmxError::ErrorTooManyPostTrigSampsPerChan => nidaqmx_sys::DAQmxErrorTooManyPostTrigSampsPerChan,
//           NidaqmxError::ErrorTrigLineNotFoundSingleDevRoute => nidaqmx_sys::DAQmxErrorTrigLineNotFoundSingleDevRoute,
//           NidaqmxError::ErrorDifferentInternalAIInputSources => nidaqmx_sys::DAQmxErrorDifferentInternalAIInputSources,
//           NidaqmxError::ErrorDifferentAIInputSrcInOneChanGroup => nidaqmx_sys::DAQmxErrorDifferentAIInputSrcInOneChanGroup,
//           NidaqmxError::ErrorInternalAIInputSrcInMultipleChanGroups => nidaqmx_sys::DAQmxErrorInternalAIInputSrcInMultipleChanGroups,
//           NidaqmxError::ErrorCAPIChanIndexInvalid => nidaqmx_sys::DAQmxErrorCAPIChanIndexInvalid,
//           NidaqmxError::ErrorCollectionDoesNotMatchChanType => nidaqmx_sys::DAQmxErrorCollectionDoesNotMatchChanType,
//           NidaqmxError::ErrorOutputCantStartChangedRegenerationMode => nidaqmx_sys::DAQmxErrorOutputCantStartChangedRegenerationMode,
//           NidaqmxError::ErrorOutputCantStartChangedBufferSize => nidaqmx_sys::DAQmxErrorOutputCantStartChangedBufferSize,
//           NidaqmxError::ErrorChanSizeTooBigForU32PortWrite => nidaqmx_sys::DAQmxErrorChanSizeTooBigForU32PortWrite,
//           NidaqmxError::ErrorChanSizeTooBigForU8PortWrite => nidaqmx_sys::DAQmxErrorChanSizeTooBigForU8PortWrite,
//           NidaqmxError::ErrorChanSizeTooBigForU32PortRead => nidaqmx_sys::DAQmxErrorChanSizeTooBigForU32PortRead,
//           NidaqmxError::ErrorChanSizeTooBigForU8PortRead => nidaqmx_sys::DAQmxErrorChanSizeTooBigForU8PortRead,
//           NidaqmxError::ErrorInvalidDigDataWrite => nidaqmx_sys::DAQmxErrorInvalidDigDataWrite,
//           NidaqmxError::ErrorInvalidAODataWrite => nidaqmx_sys::DAQmxErrorInvalidAODataWrite,
//           NidaqmxError::ErrorWaitUntilDoneDoesNotIndicateDone => nidaqmx_sys::DAQmxErrorWaitUntilDoneDoesNotIndicateDone,
//           NidaqmxError::ErrorMultiChanTypesInTask => nidaqmx_sys::DAQmxErrorMultiChanTypesInTask,
//           NidaqmxError::ErrorMultiDevsInTask => nidaqmx_sys::DAQmxErrorMultiDevsInTask,
//           NidaqmxError::ErrorCannotSetPropertyWhenTaskRunning => nidaqmx_sys::DAQmxErrorCannotSetPropertyWhenTaskRunning,
//           NidaqmxError::ErrorCannotGetPropertyWhenTaskNotCommittedOrRunning => nidaqmx_sys::DAQmxErrorCannotGetPropertyWhenTaskNotCommittedOrRunning,
//           NidaqmxError::ErrorLeadingUnderscoreInString => nidaqmx_sys::DAQmxErrorLeadingUnderscoreInString,
//           NidaqmxError::ErrorTrailingSpaceInString => nidaqmx_sys::DAQmxErrorTrailingSpaceInString,
//           NidaqmxError::ErrorLeadingSpaceInString => nidaqmx_sys::DAQmxErrorLeadingSpaceInString,
//           NidaqmxError::ErrorInvalidCharInString => nidaqmx_sys::DAQmxErrorInvalidCharInString,
//           NidaqmxError::ErrorDLLBecameUnlocked => nidaqmx_sys::DAQmxErrorDLLBecameUnlocked,
//           NidaqmxError::ErrorDLLLock => nidaqmx_sys::DAQmxErrorDLLLock,
//           NidaqmxError::ErrorSelfCalConstsInvalid => nidaqmx_sys::DAQmxErrorSelfCalConstsInvalid,
//           NidaqmxError::ErrorInvalidTrigCouplingExceptForExtTrigChan => nidaqmx_sys::DAQmxErrorInvalidTrigCouplingExceptForExtTrigChan,
//           NidaqmxError::ErrorWriteFailsBufferSizeAutoConfigured => nidaqmx_sys::DAQmxErrorWriteFailsBufferSizeAutoConfigured,
//           NidaqmxError::ErrorExtCalAdjustExtRefVoltageFailed => nidaqmx_sys::DAQmxErrorExtCalAdjustExtRefVoltageFailed,
//           NidaqmxError::ErrorSelfCalFailedExtNoiseOrRefVoltageOutOfCal => nidaqmx_sys::DAQmxErrorSelfCalFailedExtNoiseOrRefVoltageOutOfCal,
//           NidaqmxError::ErrorExtCalTemperatureNotDAQmx => nidaqmx_sys::DAQmxErrorExtCalTemperatureNotDAQmx,
//           NidaqmxError::ErrorExtCalDateTimeNotDAQmx => nidaqmx_sys::DAQmxErrorExtCalDateTimeNotDAQmx,
//           NidaqmxError::ErrorSelfCalTemperatureNotDAQmx => nidaqmx_sys::DAQmxErrorSelfCalTemperatureNotDAQmx,
//           NidaqmxError::ErrorSelfCalDateTimeNotDAQmx => nidaqmx_sys::DAQmxErrorSelfCalDateTimeNotDAQmx,
//           NidaqmxError::ErrorDACRefValNotSet => nidaqmx_sys::DAQmxErrorDACRefValNotSet,
//           NidaqmxError::ErrorAnalogMultiSampWriteNotSupported => nidaqmx_sys::DAQmxErrorAnalogMultiSampWriteNotSupported,
//           NidaqmxError::ErrorInvalidActionInControlTask => nidaqmx_sys::DAQmxErrorInvalidActionInControlTask,
//           NidaqmxError::ErrorPolyCoeffsInconsistent => nidaqmx_sys::DAQmxErrorPolyCoeffsInconsistent,
//           NidaqmxError::ErrorSensorValTooLow => nidaqmx_sys::DAQmxErrorSensorValTooLow,
//           NidaqmxError::ErrorSensorValTooHigh => nidaqmx_sys::DAQmxErrorSensorValTooHigh,
//           NidaqmxError::ErrorWaveformNameTooLong => nidaqmx_sys::DAQmxErrorWaveformNameTooLong,
//           NidaqmxError::ErrorIdentifierTooLongInScript => nidaqmx_sys::DAQmxErrorIdentifierTooLongInScript,
//           NidaqmxError::ErrorUnexpectedIDFollowingSwitchChanName => nidaqmx_sys::DAQmxErrorUnexpectedIDFollowingSwitchChanName,
//           NidaqmxError::ErrorRelayNameNotSpecifiedInList => nidaqmx_sys::DAQmxErrorRelayNameNotSpecifiedInList,
//           NidaqmxError::ErrorUnexpectedIDFollowingRelayNameInList => nidaqmx_sys::DAQmxErrorUnexpectedIDFollowingRelayNameInList,
//           NidaqmxError::ErrorUnexpectedIDFollowingSwitchOpInList => nidaqmx_sys::DAQmxErrorUnexpectedIDFollowingSwitchOpInList,
//           NidaqmxError::ErrorInvalidLineGrouping => nidaqmx_sys::DAQmxErrorInvalidLineGrouping,
//           NidaqmxError::ErrorCtrMinMax => nidaqmx_sys::DAQmxErrorCtrMinMax,
//           NidaqmxError::ErrorWriteChanTypeMismatch => nidaqmx_sys::DAQmxErrorWriteChanTypeMismatch,
//           NidaqmxError::ErrorReadChanTypeMismatch => nidaqmx_sys::DAQmxErrorReadChanTypeMismatch,
//           NidaqmxError::ErrorWriteNumChansMismatch => nidaqmx_sys::DAQmxErrorWriteNumChansMismatch,
//           NidaqmxError::ErrorOneChanReadForMultiChanTask => nidaqmx_sys::DAQmxErrorOneChanReadForMultiChanTask,
//           NidaqmxError::ErrorCannotSelfCalDuringExtCal => nidaqmx_sys::DAQmxErrorCannotSelfCalDuringExtCal,
//           NidaqmxError::ErrorMeasCalAdjustOscillatorPhaseDAC => nidaqmx_sys::DAQmxErrorMeasCalAdjustOscillatorPhaseDAC,
//           NidaqmxError::ErrorInvalidCalConstCalADCAdjustment => nidaqmx_sys::DAQmxErrorInvalidCalConstCalADCAdjustment,
//           NidaqmxError::ErrorInvalidCalConstOscillatorFreqDACValue => nidaqmx_sys::DAQmxErrorInvalidCalConstOscillatorFreqDACValue,
//           NidaqmxError::ErrorInvalidCalConstOscillatorPhaseDACValue => nidaqmx_sys::DAQmxErrorInvalidCalConstOscillatorPhaseDACValue,
//           NidaqmxError::ErrorInvalidCalConstOffsetDACValue => nidaqmx_sys::DAQmxErrorInvalidCalConstOffsetDACValue,
//           NidaqmxError::ErrorInvalidCalConstGainDACValue => nidaqmx_sys::DAQmxErrorInvalidCalConstGainDACValue,
//           NidaqmxError::ErrorInvalidNumCalADCReadsToAverage => nidaqmx_sys::DAQmxErrorInvalidNumCalADCReadsToAverage,
//           NidaqmxError::ErrorInvalidCfgCalAdjustDirectPathOutputImpedance => nidaqmx_sys::DAQmxErrorInvalidCfgCalAdjustDirectPathOutputImpedance,
//           NidaqmxError::ErrorInvalidCfgCalAdjustMainPathOutputImpedance => nidaqmx_sys::DAQmxErrorInvalidCfgCalAdjustMainPathOutputImpedance,
//           NidaqmxError::ErrorInvalidCfgCalAdjustMainPathPostAmpGainAndOffset => nidaqmx_sys::DAQmxErrorInvalidCfgCalAdjustMainPathPostAmpGainAndOffset,
//           NidaqmxError::ErrorInvalidCfgCalAdjustMainPathPreAmpGain => nidaqmx_sys::DAQmxErrorInvalidCfgCalAdjustMainPathPreAmpGain,
//           NidaqmxError::ErrorInvalidCfgCalAdjustMainPreAmpOffset => nidaqmx_sys::DAQmxErrorInvalidCfgCalAdjustMainPreAmpOffset,
//           NidaqmxError::ErrorMeasCalAdjustCalADC => nidaqmx_sys::DAQmxErrorMeasCalAdjustCalADC,
//           NidaqmxError::ErrorMeasCalAdjustOscillatorFrequency => nidaqmx_sys::DAQmxErrorMeasCalAdjustOscillatorFrequency,
//           NidaqmxError::ErrorMeasCalAdjustDirectPathOutputImpedance => nidaqmx_sys::DAQmxErrorMeasCalAdjustDirectPathOutputImpedance,
//           NidaqmxError::ErrorMeasCalAdjustMainPathOutputImpedance => nidaqmx_sys::DAQmxErrorMeasCalAdjustMainPathOutputImpedance,
//           NidaqmxError::ErrorMeasCalAdjustDirectPathGain => nidaqmx_sys::DAQmxErrorMeasCalAdjustDirectPathGain,
//           NidaqmxError::ErrorMeasCalAdjustMainPathPostAmpGainAndOffset => nidaqmx_sys::DAQmxErrorMeasCalAdjustMainPathPostAmpGainAndOffset,
//           NidaqmxError::ErrorMeasCalAdjustMainPathPreAmpGain => nidaqmx_sys::DAQmxErrorMeasCalAdjustMainPathPreAmpGain,
//           NidaqmxError::ErrorMeasCalAdjustMainPathPreAmpOffset => nidaqmx_sys::DAQmxErrorMeasCalAdjustMainPathPreAmpOffset,
//           NidaqmxError::ErrorInvalidDateTimeInEEPROM => nidaqmx_sys::DAQmxErrorInvalidDateTimeInEEPROM,
//           NidaqmxError::ErrorUnableToLocateErrorResources => nidaqmx_sys::DAQmxErrorUnableToLocateErrorResources,
//           NidaqmxError::ErrorDotNetAPINotUnsigned32BitNumber => nidaqmx_sys::DAQmxErrorDotNetAPINotUnsigned32BitNumber,
//           NidaqmxError::ErrorInvalidRangeOfObjectsSyntaxInString => nidaqmx_sys::DAQmxErrorInvalidRangeOfObjectsSyntaxInString,
//           NidaqmxError::ErrorAttemptToEnableLineNotPreviouslyDisabled => nidaqmx_sys::DAQmxErrorAttemptToEnableLineNotPreviouslyDisabled,
//           NidaqmxError::ErrorInvalidCharInPattern => nidaqmx_sys::DAQmxErrorInvalidCharInPattern,
//           NidaqmxError::ErrorIntermediateBufferFull => nidaqmx_sys::DAQmxErrorIntermediateBufferFull,
//           NidaqmxError::ErrorLoadTaskFailsBecauseNoTimingOnDev => nidaqmx_sys::DAQmxErrorLoadTaskFailsBecauseNoTimingOnDev,
//           NidaqmxError::ErrorCAPIReservedParamNotNULLNorEmpty => nidaqmx_sys::DAQmxErrorCAPIReservedParamNotNULLNorEmpty,
//           NidaqmxError::ErrorCAPIReservedParamNotNULL => nidaqmx_sys::DAQmxErrorCAPIReservedParamNotNULL,
//           NidaqmxError::ErrorCAPIReservedParamNotZero => nidaqmx_sys::DAQmxErrorCAPIReservedParamNotZero,
//           NidaqmxError::ErrorSampleValueOutOfRange => nidaqmx_sys::DAQmxErrorSampleValueOutOfRange,
//           NidaqmxError::ErrorChanAlreadyInTask => nidaqmx_sys::DAQmxErrorChanAlreadyInTask,
//           NidaqmxError::ErrorVirtualChanDoesNotExist => nidaqmx_sys::DAQmxErrorVirtualChanDoesNotExist,
//           NidaqmxError::ErrorChanNotInTask => nidaqmx_sys::DAQmxErrorChanNotInTask,
//           NidaqmxError::ErrorTaskNotInDataNeighborhood => nidaqmx_sys::DAQmxErrorTaskNotInDataNeighborhood,
//           NidaqmxError::ErrorCantSaveTaskWithoutReplace => nidaqmx_sys::DAQmxErrorCantSaveTaskWithoutReplace,
//           NidaqmxError::ErrorCantSaveChanWithoutReplace => nidaqmx_sys::DAQmxErrorCantSaveChanWithoutReplace,
//           NidaqmxError::ErrorDevNotInTask => nidaqmx_sys::DAQmxErrorDevNotInTask,
//           NidaqmxError::ErrorDevAlreadyInTask => nidaqmx_sys::DAQmxErrorDevAlreadyInTask,
//           NidaqmxError::ErrorCanNotPerformOpWhileTaskRunning => nidaqmx_sys::DAQmxErrorCanNotPerformOpWhileTaskRunning,
//           NidaqmxError::ErrorCanNotPerformOpWhenNoChansInTask => nidaqmx_sys::DAQmxErrorCanNotPerformOpWhenNoChansInTask,
//           NidaqmxError::ErrorCanNotPerformOpWhenNoDevInTask => nidaqmx_sys::DAQmxErrorCanNotPerformOpWhenNoDevInTask,
//           NidaqmxError::ErrorCannotPerformOpWhenTaskNotRunning => nidaqmx_sys::DAQmxErrorCannotPerformOpWhenTaskNotRunning,
//           NidaqmxError::ErrorOperationTimedOut => nidaqmx_sys::DAQmxErrorOperationTimedOut,
//           NidaqmxError::ErrorCannotReadWhenAutoStartFalseAndTaskNotRunningOrCommitted => nidaqmx_sys::DAQmxErrorCannotReadWhenAutoStartFalseAndTaskNotRunningOrCommitted,
//           NidaqmxError::ErrorCannotWriteWhenAutoStartFalseAndTaskNotRunningOrCommitted => nidaqmx_sys::DAQmxErrorCannotWriteWhenAutoStartFalseAndTaskNotRunningOrCommitted,
//           NidaqmxError::ErrorTaskVersionNew => nidaqmx_sys::DAQmxErrorTaskVersionNew,
//           NidaqmxError::ErrorChanVersionNew => nidaqmx_sys::DAQmxErrorChanVersionNew,
//           NidaqmxError::ErrorEmptyString => nidaqmx_sys::DAQmxErrorEmptyString,
//           NidaqmxError::ErrorChannelSizeTooBigForPortReadType => nidaqmx_sys::DAQmxErrorChannelSizeTooBigForPortReadType,
//           NidaqmxError::ErrorChannelSizeTooBigForPortWriteType => nidaqmx_sys::DAQmxErrorChannelSizeTooBigForPortWriteType,
//           NidaqmxError::ErrorExpectedNumberOfChannelsVerificationFailed => nidaqmx_sys::DAQmxErrorExpectedNumberOfChannelsVerificationFailed,
//           NidaqmxError::ErrorNumLinesMismatchInReadOrWrite => nidaqmx_sys::DAQmxErrorNumLinesMismatchInReadOrWrite,
//           NidaqmxError::ErrorOutputBufferEmpty => nidaqmx_sys::DAQmxErrorOutputBufferEmpty,
//           NidaqmxError::ErrorInvalidChanName => nidaqmx_sys::DAQmxErrorInvalidChanName,
//           NidaqmxError::ErrorReadNoInputChansInTask => nidaqmx_sys::DAQmxErrorReadNoInputChansInTask,
//           NidaqmxError::ErrorWriteNoOutputChansInTask => nidaqmx_sys::DAQmxErrorWriteNoOutputChansInTask,
//           NidaqmxError::ErrorPropertyNotSupportedNotInputTask => nidaqmx_sys::DAQmxErrorPropertyNotSupportedNotInputTask,
//           NidaqmxError::ErrorPropertyNotSupportedNotOutputTask => nidaqmx_sys::DAQmxErrorPropertyNotSupportedNotOutputTask,
//           NidaqmxError::ErrorGetPropertyNotInputBufferedTask => nidaqmx_sys::DAQmxErrorGetPropertyNotInputBufferedTask,
//           NidaqmxError::ErrorGetPropertyNotOutputBufferedTask => nidaqmx_sys::DAQmxErrorGetPropertyNotOutputBufferedTask,
//           NidaqmxError::ErrorInvalidTimeoutVal => nidaqmx_sys::DAQmxErrorInvalidTimeoutVal,
//           NidaqmxError::ErrorAttributeNotSupportedInTaskContext => nidaqmx_sys::DAQmxErrorAttributeNotSupportedInTaskContext,
//           NidaqmxError::ErrorAttributeNotQueryableUnlessTaskIsCommitted => nidaqmx_sys::DAQmxErrorAttributeNotQueryableUnlessTaskIsCommitted,
//           NidaqmxError::ErrorAttributeNotSettableWhenTaskIsRunning => nidaqmx_sys::DAQmxErrorAttributeNotSettableWhenTaskIsRunning,
//           NidaqmxError::ErrorDACRngLowNotMinusRefValNorZero => nidaqmx_sys::DAQmxErrorDACRngLowNotMinusRefValNorZero,
//           NidaqmxError::ErrorDACRngHighNotEqualRefVal => nidaqmx_sys::DAQmxErrorDACRngHighNotEqualRefVal,
//           NidaqmxError::ErrorUnitsNotFromCustomScale => nidaqmx_sys::DAQmxErrorUnitsNotFromCustomScale,
//           NidaqmxError::ErrorInvalidVoltageReadingDuringExtCal => nidaqmx_sys::DAQmxErrorInvalidVoltageReadingDuringExtCal,
//           NidaqmxError::ErrorCalFunctionNotSupported => nidaqmx_sys::DAQmxErrorCalFunctionNotSupported,
//           NidaqmxError::ErrorInvalidPhysicalChanForCal => nidaqmx_sys::DAQmxErrorInvalidPhysicalChanForCal,
//           NidaqmxError::ErrorExtCalNotComplete => nidaqmx_sys::DAQmxErrorExtCalNotComplete,
//           NidaqmxError::ErrorCantSyncToExtStimulusFreqDuringCal => nidaqmx_sys::DAQmxErrorCantSyncToExtStimulusFreqDuringCal,
//           NidaqmxError::ErrorUnableToDetectExtStimulusFreqDuringCal => nidaqmx_sys::DAQmxErrorUnableToDetectExtStimulusFreqDuringCal,
//           NidaqmxError::ErrorInvalidCloseAction => nidaqmx_sys::DAQmxErrorInvalidCloseAction,
//           NidaqmxError::ErrorExtCalFunctionOutsideExtCalSession => nidaqmx_sys::DAQmxErrorExtCalFunctionOutsideExtCalSession,
//           NidaqmxError::ErrorInvalidCalArea => nidaqmx_sys::DAQmxErrorInvalidCalArea,
//           NidaqmxError::ErrorExtCalConstsInvalid => nidaqmx_sys::DAQmxErrorExtCalConstsInvalid,
//           NidaqmxError::ErrorStartTrigDelayWithExtSampClk => nidaqmx_sys::DAQmxErrorStartTrigDelayWithExtSampClk,
//           NidaqmxError::ErrorDelayFromSampClkWithExtConv => nidaqmx_sys::DAQmxErrorDelayFromSampClkWithExtConv,
//           NidaqmxError::ErrorFewerThan2PreScaledVals => nidaqmx_sys::DAQmxErrorFewerThan2PreScaledVals,
//           NidaqmxError::ErrorFewerThan2ScaledValues => nidaqmx_sys::DAQmxErrorFewerThan2ScaledValues,
//           NidaqmxError::ErrorPhysChanOutputType => nidaqmx_sys::DAQmxErrorPhysChanOutputType,
//           NidaqmxError::ErrorPhysChanMeasType => nidaqmx_sys::DAQmxErrorPhysChanMeasType,
//           NidaqmxError::ErrorInvalidPhysChanType => nidaqmx_sys::DAQmxErrorInvalidPhysChanType,
//           NidaqmxError::ErrorLabVIEWEmptyTaskOrChans => nidaqmx_sys::DAQmxErrorLabVIEWEmptyTaskOrChans,
//           NidaqmxError::ErrorLabVIEWInvalidTaskOrChans => nidaqmx_sys::DAQmxErrorLabVIEWInvalidTaskOrChans,
//           NidaqmxError::ErrorInvalidRefClkRate => nidaqmx_sys::DAQmxErrorInvalidRefClkRate,
//           NidaqmxError::ErrorInvalidExtTrigImpedance => nidaqmx_sys::DAQmxErrorInvalidExtTrigImpedance,
//           NidaqmxError::ErrorHystTrigLevelAIMax => nidaqmx_sys::DAQmxErrorHystTrigLevelAIMax,
//           NidaqmxError::ErrorLineNumIncompatibleWithVideoSignalFormat => nidaqmx_sys::DAQmxErrorLineNumIncompatibleWithVideoSignalFormat,
//           NidaqmxError::ErrorTrigWindowAIMinAIMaxCombo => nidaqmx_sys::DAQmxErrorTrigWindowAIMinAIMaxCombo,
//           NidaqmxError::ErrorTrigAIMinAIMax => nidaqmx_sys::DAQmxErrorTrigAIMinAIMax,
//           NidaqmxError::ErrorHystTrigLevelAIMin => nidaqmx_sys::DAQmxErrorHystTrigLevelAIMin,
//           NidaqmxError::ErrorInvalidSampRateConsiderRIS => nidaqmx_sys::DAQmxErrorInvalidSampRateConsiderRIS,
//           NidaqmxError::ErrorInvalidReadPosDuringRIS => nidaqmx_sys::DAQmxErrorInvalidReadPosDuringRIS,
//           NidaqmxError::ErrorImmedTrigDuringRISMode => nidaqmx_sys::DAQmxErrorImmedTrigDuringRISMode,
//           NidaqmxError::ErrorTDCNotEnabledDuringRISMode => nidaqmx_sys::DAQmxErrorTDCNotEnabledDuringRISMode,
//           NidaqmxError::ErrorMultiRecWithRIS => nidaqmx_sys::DAQmxErrorMultiRecWithRIS,
//           NidaqmxError::ErrorInvalidRefClkSrc => nidaqmx_sys::DAQmxErrorInvalidRefClkSrc,
//           NidaqmxError::ErrorInvalidSampClkSrc => nidaqmx_sys::DAQmxErrorInvalidSampClkSrc,
//           NidaqmxError::ErrorInsufficientOnBoardMemForNumRecsAndSamps => nidaqmx_sys::DAQmxErrorInsufficientOnBoardMemForNumRecsAndSamps,
//           NidaqmxError::ErrorInvalidAIAttenuation => nidaqmx_sys::DAQmxErrorInvalidAIAttenuation,
//           NidaqmxError::ErrorACCouplingNotAllowedWith50OhmImpedance => nidaqmx_sys::DAQmxErrorACCouplingNotAllowedWith50OhmImpedance,
//           NidaqmxError::ErrorInvalidRecordNum => nidaqmx_sys::DAQmxErrorInvalidRecordNum,
//           NidaqmxError::ErrorZeroSlopeLinearScale => nidaqmx_sys::DAQmxErrorZeroSlopeLinearScale,
//           NidaqmxError::ErrorZeroReversePolyScaleCoeffs => nidaqmx_sys::DAQmxErrorZeroReversePolyScaleCoeffs,
//           NidaqmxError::ErrorZeroForwardPolyScaleCoeffs => nidaqmx_sys::DAQmxErrorZeroForwardPolyScaleCoeffs,
//           NidaqmxError::ErrorNoReversePolyScaleCoeffs => nidaqmx_sys::DAQmxErrorNoReversePolyScaleCoeffs,
//           NidaqmxError::ErrorNoForwardPolyScaleCoeffs => nidaqmx_sys::DAQmxErrorNoForwardPolyScaleCoeffs,
//           NidaqmxError::ErrorNoPolyScaleCoeffs => nidaqmx_sys::DAQmxErrorNoPolyScaleCoeffs,
//           NidaqmxError::ErrorReversePolyOrderLessThanNumPtsToCompute => nidaqmx_sys::DAQmxErrorReversePolyOrderLessThanNumPtsToCompute,
//           NidaqmxError::ErrorReversePolyOrderNotPositive => nidaqmx_sys::DAQmxErrorReversePolyOrderNotPositive,
//           NidaqmxError::ErrorNumPtsToComputeNotPositive => nidaqmx_sys::DAQmxErrorNumPtsToComputeNotPositive,
//           NidaqmxError::ErrorWaveformLengthNotMultipleOfIncr => nidaqmx_sys::DAQmxErrorWaveformLengthNotMultipleOfIncr,
//           NidaqmxError::ErrorCAPINoExtendedErrorInfoAvailable => nidaqmx_sys::DAQmxErrorCAPINoExtendedErrorInfoAvailable,
//           NidaqmxError::ErrorCVIFunctionNotFoundInDAQmxDLL => nidaqmx_sys::DAQmxErrorCVIFunctionNotFoundInDAQmxDLL,
//           NidaqmxError::ErrorCVIFailedToLoadDAQmxDLL => nidaqmx_sys::DAQmxErrorCVIFailedToLoadDAQmxDLL,
//           NidaqmxError::ErrorNoCommonTrigLineForImmedRoute => nidaqmx_sys::DAQmxErrorNoCommonTrigLineForImmedRoute,
//           NidaqmxError::ErrorNoCommonTrigLineForTaskRoute => nidaqmx_sys::DAQmxErrorNoCommonTrigLineForTaskRoute,
//           NidaqmxError::ErrorF64PrptyValNotUnsignedInt => nidaqmx_sys::DAQmxErrorF64PrptyValNotUnsignedInt,
//           NidaqmxError::ErrorRegisterNotWritable => nidaqmx_sys::DAQmxErrorRegisterNotWritable,
//           NidaqmxError::ErrorInvalidOutputVoltageAtSampClkRate => nidaqmx_sys::DAQmxErrorInvalidOutputVoltageAtSampClkRate,
//           NidaqmxError::ErrorStrobePhaseShiftDCMBecameUnlocked => nidaqmx_sys::DAQmxErrorStrobePhaseShiftDCMBecameUnlocked,
//           NidaqmxError::ErrorDrivePhaseShiftDCMBecameUnlocked => nidaqmx_sys::DAQmxErrorDrivePhaseShiftDCMBecameUnlocked,
//           NidaqmxError::ErrorClkOutPhaseShiftDCMBecameUnlocked => nidaqmx_sys::DAQmxErrorClkOutPhaseShiftDCMBecameUnlocked,
//           NidaqmxError::ErrorOutputBoardClkDCMBecameUnlocked => nidaqmx_sys::DAQmxErrorOutputBoardClkDCMBecameUnlocked,
//           NidaqmxError::ErrorInputBoardClkDCMBecameUnlocked => nidaqmx_sys::DAQmxErrorInputBoardClkDCMBecameUnlocked,
//           NidaqmxError::ErrorInternalClkDCMBecameUnlocked => nidaqmx_sys::DAQmxErrorInternalClkDCMBecameUnlocked,
//           NidaqmxError::ErrorDCMLock => nidaqmx_sys::DAQmxErrorDCMLock,
//           NidaqmxError::ErrorDataLineReservedForDynamicOutput => nidaqmx_sys::DAQmxErrorDataLineReservedForDynamicOutput,
//           NidaqmxError::ErrorInvalidRefClkSrcGivenSampClkSrc => nidaqmx_sys::DAQmxErrorInvalidRefClkSrcGivenSampClkSrc,
//           NidaqmxError::ErrorNoPatternMatcherAvailable => nidaqmx_sys::DAQmxErrorNoPatternMatcherAvailable,
//           NidaqmxError::ErrorInvalidDelaySampRateBelowPhaseShiftDCMThresh => nidaqmx_sys::DAQmxErrorInvalidDelaySampRateBelowPhaseShiftDCMThresh,
//           NidaqmxError::ErrorStrainGageCalibration => nidaqmx_sys::DAQmxErrorStrainGageCalibration,
//           NidaqmxError::ErrorInvalidExtClockFreqAndDivCombo => nidaqmx_sys::DAQmxErrorInvalidExtClockFreqAndDivCombo,
//           NidaqmxError::ErrorCustomScaleDoesNotExist => nidaqmx_sys::DAQmxErrorCustomScaleDoesNotExist,
//           NidaqmxError::ErrorOnlyFrontEndChanOpsDuringScan => nidaqmx_sys::DAQmxErrorOnlyFrontEndChanOpsDuringScan,
//           NidaqmxError::ErrorInvalidOptionForDigitalPortChannel => nidaqmx_sys::DAQmxErrorInvalidOptionForDigitalPortChannel,
//           NidaqmxError::ErrorUnsupportedSignalTypeExportSignal => nidaqmx_sys::DAQmxErrorUnsupportedSignalTypeExportSignal,
//           NidaqmxError::ErrorInvalidSignalTypeExportSignal => nidaqmx_sys::DAQmxErrorInvalidSignalTypeExportSignal,
//           NidaqmxError::ErrorUnsupportedTrigTypeSendsSWTrig => nidaqmx_sys::DAQmxErrorUnsupportedTrigTypeSendsSWTrig,
//           NidaqmxError::ErrorInvalidTrigTypeSendsSWTrig => nidaqmx_sys::DAQmxErrorInvalidTrigTypeSendsSWTrig,
//           NidaqmxError::ErrorRepeatedPhysicalChan => nidaqmx_sys::DAQmxErrorRepeatedPhysicalChan,
//           NidaqmxError::ErrorResourcesInUseForRouteInTask => nidaqmx_sys::DAQmxErrorResourcesInUseForRouteInTask,
//           NidaqmxError::ErrorResourcesInUseForRoute => nidaqmx_sys::DAQmxErrorResourcesInUseForRoute,
//           NidaqmxError::ErrorRouteNotSupportedByHW => nidaqmx_sys::DAQmxErrorRouteNotSupportedByHW,
//           NidaqmxError::ErrorResourcesInUseForExportSignalPolarity => nidaqmx_sys::DAQmxErrorResourcesInUseForExportSignalPolarity,
//           NidaqmxError::ErrorResourcesInUseForInversionInTask => nidaqmx_sys::DAQmxErrorResourcesInUseForInversionInTask,
//           NidaqmxError::ErrorResourcesInUseForInversion => nidaqmx_sys::DAQmxErrorResourcesInUseForInversion,
//           NidaqmxError::ErrorExportSignalPolarityNotSupportedByHW => nidaqmx_sys::DAQmxErrorExportSignalPolarityNotSupportedByHW,
//           NidaqmxError::ErrorInversionNotSupportedByHW => nidaqmx_sys::DAQmxErrorInversionNotSupportedByHW,
//           NidaqmxError::ErrorOverloadedChansExistNotRead => nidaqmx_sys::DAQmxErrorOverloadedChansExistNotRead,
//           NidaqmxError::ErrorInputFIFOOverflow2 => nidaqmx_sys::DAQmxErrorInputFIFOOverflow2,
//           NidaqmxError::ErrorCJCChanNotSpecd => nidaqmx_sys::DAQmxErrorCJCChanNotSpecd,
//           NidaqmxError::ErrorCtrExportSignalNotPossible => nidaqmx_sys::DAQmxErrorCtrExportSignalNotPossible,
//           NidaqmxError::ErrorRefTrigWhenContinuous => nidaqmx_sys::DAQmxErrorRefTrigWhenContinuous,
//           NidaqmxError::ErrorIncompatibleSensorOutputAndDeviceInputRanges => nidaqmx_sys::DAQmxErrorIncompatibleSensorOutputAndDeviceInputRanges,
//           NidaqmxError::ErrorCustomScaleNameUsed => nidaqmx_sys::DAQmxErrorCustomScaleNameUsed,
//           NidaqmxError::ErrorPropertyValNotSupportedByHW => nidaqmx_sys::DAQmxErrorPropertyValNotSupportedByHW,
//           NidaqmxError::ErrorPropertyValNotValidTermName => nidaqmx_sys::DAQmxErrorPropertyValNotValidTermName,
//           NidaqmxError::ErrorResourcesInUseForProperty => nidaqmx_sys::DAQmxErrorResourcesInUseForProperty,
//           NidaqmxError::ErrorCJCChanAlreadyUsed => nidaqmx_sys::DAQmxErrorCJCChanAlreadyUsed,
//           NidaqmxError::ErrorForwardPolynomialCoefNotSpecd => nidaqmx_sys::DAQmxErrorForwardPolynomialCoefNotSpecd,
//           NidaqmxError::ErrorTableScaleNumPreScaledAndScaledValsNotEqual => nidaqmx_sys::DAQmxErrorTableScaleNumPreScaledAndScaledValsNotEqual,
//           NidaqmxError::ErrorTableScalePreScaledValsNotSpecd => nidaqmx_sys::DAQmxErrorTableScalePreScaledValsNotSpecd,
//           NidaqmxError::ErrorTableScaleScaledValsNotSpecd => nidaqmx_sys::DAQmxErrorTableScaleScaledValsNotSpecd,
//           NidaqmxError::ErrorIntermediateBufferSizeNotMultipleOfIncr => nidaqmx_sys::DAQmxErrorIntermediateBufferSizeNotMultipleOfIncr,
//           NidaqmxError::ErrorEventPulseWidthOutOfRange => nidaqmx_sys::DAQmxErrorEventPulseWidthOutOfRange,
//           NidaqmxError::ErrorEventDelayOutOfRange => nidaqmx_sys::DAQmxErrorEventDelayOutOfRange,
//           NidaqmxError::ErrorSampPerChanNotMultipleOfIncr => nidaqmx_sys::DAQmxErrorSampPerChanNotMultipleOfIncr,
//           NidaqmxError::ErrorCannotCalculateNumSampsTaskNotStarted => nidaqmx_sys::DAQmxErrorCannotCalculateNumSampsTaskNotStarted,
//           NidaqmxError::ErrorScriptNotInMem => nidaqmx_sys::DAQmxErrorScriptNotInMem,
//           NidaqmxError::ErrorOnboardMemTooSmall => nidaqmx_sys::DAQmxErrorOnboardMemTooSmall,
//           NidaqmxError::ErrorReadAllAvailableDataWithoutBuffer => nidaqmx_sys::DAQmxErrorReadAllAvailableDataWithoutBuffer,
//           NidaqmxError::ErrorPulseActiveAtStart => nidaqmx_sys::DAQmxErrorPulseActiveAtStart,
//           NidaqmxError::ErrorCalTempNotSupported => nidaqmx_sys::DAQmxErrorCalTempNotSupported,
//           NidaqmxError::ErrorDelayFromSampClkTooLong => nidaqmx_sys::DAQmxErrorDelayFromSampClkTooLong,
//           NidaqmxError::ErrorDelayFromSampClkTooShort => nidaqmx_sys::DAQmxErrorDelayFromSampClkTooShort,
//           NidaqmxError::ErrorAIConvRateTooHigh => nidaqmx_sys::DAQmxErrorAIConvRateTooHigh,
//           NidaqmxError::ErrorDelayFromStartTrigTooLong => nidaqmx_sys::DAQmxErrorDelayFromStartTrigTooLong,
//           NidaqmxError::ErrorDelayFromStartTrigTooShort => nidaqmx_sys::DAQmxErrorDelayFromStartTrigTooShort,
//           NidaqmxError::ErrorSampRateTooHigh => nidaqmx_sys::DAQmxErrorSampRateTooHigh,
//           NidaqmxError::ErrorSampRateTooLow => nidaqmx_sys::DAQmxErrorSampRateTooLow,
//           NidaqmxError::ErrorPFI0UsedForAnalogAndDigitalSrc => nidaqmx_sys::DAQmxErrorPFI0UsedForAnalogAndDigitalSrc,
//           NidaqmxError::ErrorPrimingCfgFIFO => nidaqmx_sys::DAQmxErrorPrimingCfgFIFO,
//           NidaqmxError::ErrorCannotOpenTopologyCfgFile => nidaqmx_sys::DAQmxErrorCannotOpenTopologyCfgFile,
//           NidaqmxError::ErrorInvalidDTInsideWfmDataType => nidaqmx_sys::DAQmxErrorInvalidDTInsideWfmDataType,
//           NidaqmxError::ErrorRouteSrcAndDestSame => nidaqmx_sys::DAQmxErrorRouteSrcAndDestSame,
//           NidaqmxError::ErrorReversePolynomialCoefNotSpecd => nidaqmx_sys::DAQmxErrorReversePolynomialCoefNotSpecd,
//           NidaqmxError::ErrorDevAbsentOrUnavailable => nidaqmx_sys::DAQmxErrorDevAbsentOrUnavailable,
//           NidaqmxError::ErrorNoAdvTrigForMultiDevScan => nidaqmx_sys::DAQmxErrorNoAdvTrigForMultiDevScan,
//           NidaqmxError::ErrorInterruptsInsufficientDataXferMech => nidaqmx_sys::DAQmxErrorInterruptsInsufficientDataXferMech,
//           NidaqmxError::ErrorInvalidAttentuationBasedOnMinMax => nidaqmx_sys::DAQmxErrorInvalidAttentuationBasedOnMinMax,
//           NidaqmxError::ErrorCabledModuleCannotRouteSSH => nidaqmx_sys::DAQmxErrorCabledModuleCannotRouteSSH,
//           NidaqmxError::ErrorCabledModuleCannotRouteConvClk => nidaqmx_sys::DAQmxErrorCabledModuleCannotRouteConvClk,
//           NidaqmxError::ErrorInvalidExcitValForScaling => nidaqmx_sys::DAQmxErrorInvalidExcitValForScaling,
//           NidaqmxError::ErrorNoDevMemForScript => nidaqmx_sys::DAQmxErrorNoDevMemForScript,
//           NidaqmxError::ErrorScriptDataUnderflow => nidaqmx_sys::DAQmxErrorScriptDataUnderflow,
//           NidaqmxError::ErrorNoDevMemForWaveform => nidaqmx_sys::DAQmxErrorNoDevMemForWaveform,
//           NidaqmxError::ErrorStreamDCMBecameUnlocked => nidaqmx_sys::DAQmxErrorStreamDCMBecameUnlocked,
//           NidaqmxError::ErrorStreamDCMLock => nidaqmx_sys::DAQmxErrorStreamDCMLock,
//           NidaqmxError::ErrorWaveformNotInMem => nidaqmx_sys::DAQmxErrorWaveformNotInMem,
//           NidaqmxError::ErrorWaveformWriteOutOfBounds => nidaqmx_sys::DAQmxErrorWaveformWriteOutOfBounds,
//           NidaqmxError::ErrorWaveformPreviouslyAllocated => nidaqmx_sys::DAQmxErrorWaveformPreviouslyAllocated,
//           NidaqmxError::ErrorSampClkTbMasterTbDivNotAppropriateForSampTbSrc => nidaqmx_sys::DAQmxErrorSampClkTbMasterTbDivNotAppropriateForSampTbSrc,
//           NidaqmxError::ErrorSampTbRateSampTbSrcMismatch => nidaqmx_sys::DAQmxErrorSampTbRateSampTbSrcMismatch,
//           NidaqmxError::ErrorMasterTbRateMasterTbSrcMismatch => nidaqmx_sys::DAQmxErrorMasterTbRateMasterTbSrcMismatch,
//           NidaqmxError::ErrorSampsPerChanTooBig => nidaqmx_sys::DAQmxErrorSampsPerChanTooBig,
//           NidaqmxError::ErrorFinitePulseTrainNotPossible => nidaqmx_sys::DAQmxErrorFinitePulseTrainNotPossible,
//           NidaqmxError::ErrorExtMasterTimebaseRateNotSpecified => nidaqmx_sys::DAQmxErrorExtMasterTimebaseRateNotSpecified,
//           NidaqmxError::ErrorExtSampClkSrcNotSpecified => nidaqmx_sys::DAQmxErrorExtSampClkSrcNotSpecified,
//           NidaqmxError::ErrorInputSignalSlowerThanMeasTime => nidaqmx_sys::DAQmxErrorInputSignalSlowerThanMeasTime,
//           NidaqmxError::ErrorCannotUpdatePulseGenProperty => nidaqmx_sys::DAQmxErrorCannotUpdatePulseGenProperty,
//           NidaqmxError::ErrorInvalidTimingType => nidaqmx_sys::DAQmxErrorInvalidTimingType,
//           NidaqmxError::ErrorPropertyUnavailWhenUsingOnboardMemory => nidaqmx_sys::DAQmxErrorPropertyUnavailWhenUsingOnboardMemory,
//           NidaqmxError::ErrorCannotWriteAfterStartWithOnboardMemory => nidaqmx_sys::DAQmxErrorCannotWriteAfterStartWithOnboardMemory,
//           NidaqmxError::ErrorNotEnoughSampsWrittenForInitialXferRqstCondition => nidaqmx_sys::DAQmxErrorNotEnoughSampsWrittenForInitialXferRqstCondition,
//           NidaqmxError::ErrorNoMoreSpace => nidaqmx_sys::DAQmxErrorNoMoreSpace,
//           NidaqmxError::ErrorSamplesCanNotYetBeWritten => nidaqmx_sys::DAQmxErrorSamplesCanNotYetBeWritten,
//           NidaqmxError::ErrorGenStoppedToPreventIntermediateBufferRegenOfOldSamples => nidaqmx_sys::DAQmxErrorGenStoppedToPreventIntermediateBufferRegenOfOldSamples,
//           NidaqmxError::ErrorGenStoppedToPreventRegenOfOldSamples => nidaqmx_sys::DAQmxErrorGenStoppedToPreventRegenOfOldSamples,
//           NidaqmxError::ErrorSamplesNoLongerWriteable => nidaqmx_sys::DAQmxErrorSamplesNoLongerWriteable,
//           NidaqmxError::ErrorSamplesWillNeverBeGenerated => nidaqmx_sys::DAQmxErrorSamplesWillNeverBeGenerated,
//           NidaqmxError::ErrorNegativeWriteSampleNumber => nidaqmx_sys::DAQmxErrorNegativeWriteSampleNumber,
//           NidaqmxError::ErrorNoAcqStarted => nidaqmx_sys::DAQmxErrorNoAcqStarted,
//           NidaqmxError::ErrorSamplesNotYetAvailable => nidaqmx_sys::DAQmxErrorSamplesNotYetAvailable,
//           NidaqmxError::ErrorAcqStoppedToPreventIntermediateBufferOverflow => nidaqmx_sys::DAQmxErrorAcqStoppedToPreventIntermediateBufferOverflow,
//           NidaqmxError::ErrorNoRefTrigConfigured => nidaqmx_sys::DAQmxErrorNoRefTrigConfigured,
//           NidaqmxError::ErrorCannotReadRelativeToRefTrigUntilDone => nidaqmx_sys::DAQmxErrorCannotReadRelativeToRefTrigUntilDone,
//           NidaqmxError::ErrorSamplesNoLongerAvailable => nidaqmx_sys::DAQmxErrorSamplesNoLongerAvailable,
//           NidaqmxError::ErrorSamplesWillNeverBeAvailable => nidaqmx_sys::DAQmxErrorSamplesWillNeverBeAvailable,
//           NidaqmxError::ErrorNegativeReadSampleNumber => nidaqmx_sys::DAQmxErrorNegativeReadSampleNumber,
//           NidaqmxError::ErrorExternalSampClkAndRefClkThruSameTerm => nidaqmx_sys::DAQmxErrorExternalSampClkAndRefClkThruSameTerm,
//           NidaqmxError::ErrorExtSampClkRateTooLowForClkIn => nidaqmx_sys::DAQmxErrorExtSampClkRateTooLowForClkIn,
//           NidaqmxError::ErrorExtSampClkRateTooHighForBackplane => nidaqmx_sys::DAQmxErrorExtSampClkRateTooHighForBackplane,
//           NidaqmxError::ErrorSampClkRateAndDivCombo => nidaqmx_sys::DAQmxErrorSampClkRateAndDivCombo,
//           NidaqmxError::ErrorSampClkRateTooLowForDivDown => nidaqmx_sys::DAQmxErrorSampClkRateTooLowForDivDown,
//           NidaqmxError::ErrorProductOfAOMinAndGainTooSmall => nidaqmx_sys::DAQmxErrorProductOfAOMinAndGainTooSmall,
//           NidaqmxError::ErrorInterpolationRateNotPossible => nidaqmx_sys::DAQmxErrorInterpolationRateNotPossible,
//           NidaqmxError::ErrorOffsetTooLarge => nidaqmx_sys::DAQmxErrorOffsetTooLarge,
//           NidaqmxError::ErrorOffsetTooSmall => nidaqmx_sys::DAQmxErrorOffsetTooSmall,
//           NidaqmxError::ErrorProductOfAOMaxAndGainTooLarge => nidaqmx_sys::DAQmxErrorProductOfAOMaxAndGainTooLarge,
//           NidaqmxError::ErrorMinAndMaxNotSymmetric => nidaqmx_sys::DAQmxErrorMinAndMaxNotSymmetric,
//           NidaqmxError::ErrorInvalidAnalogTrigSrc => nidaqmx_sys::DAQmxErrorInvalidAnalogTrigSrc,
//           NidaqmxError::ErrorTooManyChansForAnalogRefTrig => nidaqmx_sys::DAQmxErrorTooManyChansForAnalogRefTrig,
//           NidaqmxError::ErrorTooManyChansForAnalogPauseTrig => nidaqmx_sys::DAQmxErrorTooManyChansForAnalogPauseTrig,
//           NidaqmxError::ErrorTrigWhenOnDemandSampTiming => nidaqmx_sys::DAQmxErrorTrigWhenOnDemandSampTiming,
//           NidaqmxError::ErrorInconsistentAnalogTrigSettings => nidaqmx_sys::DAQmxErrorInconsistentAnalogTrigSettings,
//           NidaqmxError::ErrorMemMapDataXferModeSampTimingCombo => nidaqmx_sys::DAQmxErrorMemMapDataXferModeSampTimingCombo,
//           NidaqmxError::ErrorInvalidJumperedAttr => nidaqmx_sys::DAQmxErrorInvalidJumperedAttr,
//           NidaqmxError::ErrorInvalidGainBasedOnMinMax => nidaqmx_sys::DAQmxErrorInvalidGainBasedOnMinMax,
//           NidaqmxError::ErrorInconsistentExcit => nidaqmx_sys::DAQmxErrorInconsistentExcit,
//           NidaqmxError::ErrorTopologyNotSupportedByCfgTermBlock => nidaqmx_sys::DAQmxErrorTopologyNotSupportedByCfgTermBlock,
//           NidaqmxError::ErrorBuiltInTempSensorNotSupported => nidaqmx_sys::DAQmxErrorBuiltInTempSensorNotSupported,
//           NidaqmxError::ErrorInvalidTerm => nidaqmx_sys::DAQmxErrorInvalidTerm,
//           NidaqmxError::ErrorCannotTristateTerm => nidaqmx_sys::DAQmxErrorCannotTristateTerm,
//           NidaqmxError::ErrorCannotTristateBusyTerm => nidaqmx_sys::DAQmxErrorCannotTristateBusyTerm,
//           NidaqmxError::ErrorNoDMAChansAvailable => nidaqmx_sys::DAQmxErrorNoDMAChansAvailable,
//           NidaqmxError::ErrorInvalidWaveformLengthWithinLoopInScript => nidaqmx_sys::DAQmxErrorInvalidWaveformLengthWithinLoopInScript,
//           NidaqmxError::ErrorInvalidSubsetLengthWithinLoopInScript => nidaqmx_sys::DAQmxErrorInvalidSubsetLengthWithinLoopInScript,
//           NidaqmxError::ErrorMarkerPosInvalidForLoopInScript => nidaqmx_sys::DAQmxErrorMarkerPosInvalidForLoopInScript,
//           NidaqmxError::ErrorIntegerExpectedInScript => nidaqmx_sys::DAQmxErrorIntegerExpectedInScript,
//           NidaqmxError::ErrorPLLBecameUnlocked => nidaqmx_sys::DAQmxErrorPLLBecameUnlocked,
//           NidaqmxError::ErrorPLLLock => nidaqmx_sys::DAQmxErrorPLLLock,
//           NidaqmxError::ErrorDDCClkOutDCMBecameUnlocked => nidaqmx_sys::DAQmxErrorDDCClkOutDCMBecameUnlocked,
//           NidaqmxError::ErrorDDCClkOutDCMLock => nidaqmx_sys::DAQmxErrorDDCClkOutDCMLock,
//           NidaqmxError::ErrorClkDoublerDCMBecameUnlocked => nidaqmx_sys::DAQmxErrorClkDoublerDCMBecameUnlocked,
//           NidaqmxError::ErrorClkDoublerDCMLock => nidaqmx_sys::DAQmxErrorClkDoublerDCMLock,
//           NidaqmxError::ErrorSampClkDCMBecameUnlocked => nidaqmx_sys::DAQmxErrorSampClkDCMBecameUnlocked,
//           NidaqmxError::ErrorSampClkDCMLock => nidaqmx_sys::DAQmxErrorSampClkDCMLock,
//           NidaqmxError::ErrorSampClkTimebaseDCMBecameUnlocked => nidaqmx_sys::DAQmxErrorSampClkTimebaseDCMBecameUnlocked,
//           NidaqmxError::ErrorSampClkTimebaseDCMLock => nidaqmx_sys::DAQmxErrorSampClkTimebaseDCMLock,
//           NidaqmxError::ErrorAttrCannotBeReset => nidaqmx_sys::DAQmxErrorAttrCannotBeReset,
//           NidaqmxError::ErrorExplanationNotFound => nidaqmx_sys::DAQmxErrorExplanationNotFound,
//           NidaqmxError::ErrorWriteBufferTooSmall => nidaqmx_sys::DAQmxErrorWriteBufferTooSmall,
//           NidaqmxError::ErrorSpecifiedAttrNotValid => nidaqmx_sys::DAQmxErrorSpecifiedAttrNotValid,
//           NidaqmxError::ErrorAttrCannotBeRead => nidaqmx_sys::DAQmxErrorAttrCannotBeRead,
//           NidaqmxError::ErrorAttrCannotBeSet => nidaqmx_sys::DAQmxErrorAttrCannotBeSet,
//           NidaqmxError::ErrorNULLPtrForC_Api => nidaqmx_sys::DAQmxErrorNULLPtrForC_Api,
//           NidaqmxError::ErrorReadBufferTooSmall => nidaqmx_sys::DAQmxErrorReadBufferTooSmall,
//           NidaqmxError::ErrorBufferTooSmallForString => nidaqmx_sys::DAQmxErrorBufferTooSmallForString,
//           NidaqmxError::ErrorNoAvailTrigLinesOnDevice => nidaqmx_sys::DAQmxErrorNoAvailTrigLinesOnDevice,
//           NidaqmxError::ErrorTrigBusLineNotAvail => nidaqmx_sys::DAQmxErrorTrigBusLineNotAvail,
//           NidaqmxError::ErrorCouldNotReserveRequestedTrigLine => nidaqmx_sys::DAQmxErrorCouldNotReserveRequestedTrigLine,
//           NidaqmxError::ErrorTrigLineNotFound => nidaqmx_sys::DAQmxErrorTrigLineNotFound,
//           NidaqmxError::ErrorSCXI1126ThreshHystCombination => nidaqmx_sys::DAQmxErrorSCXI1126ThreshHystCombination,
//           NidaqmxError::ErrorAcqStoppedToPreventInputBufferOverwrite => nidaqmx_sys::DAQmxErrorAcqStoppedToPreventInputBufferOverwrite,
//           NidaqmxError::ErrorTimeoutExceeded => nidaqmx_sys::DAQmxErrorTimeoutExceeded,
//           NidaqmxError::ErrorInvalidDeviceID => nidaqmx_sys::DAQmxErrorInvalidDeviceID,
//           NidaqmxError::ErrorInvalidAOChanOrder => nidaqmx_sys::DAQmxErrorInvalidAOChanOrder,
//           NidaqmxError::ErrorSampleTimingTypeAndDataXferMode => nidaqmx_sys::DAQmxErrorSampleTimingTypeAndDataXferMode,
//           NidaqmxError::ErrorBufferWithOnDemandSampTiming => nidaqmx_sys::DAQmxErrorBufferWithOnDemandSampTiming,
//           NidaqmxError::ErrorBufferAndDataXferMode => nidaqmx_sys::DAQmxErrorBufferAndDataXferMode,
//           NidaqmxError::ErrorMemMapAndBuffer => nidaqmx_sys::DAQmxErrorMemMapAndBuffer,
//           NidaqmxError::ErrorNoAnalogTrigHW => nidaqmx_sys::DAQmxErrorNoAnalogTrigHW,
//           NidaqmxError::ErrorTooManyPretrigPlusMinPostTrigSamps => nidaqmx_sys::DAQmxErrorTooManyPretrigPlusMinPostTrigSamps,
//           NidaqmxError::ErrorInconsistentUnitsSpecified => nidaqmx_sys::DAQmxErrorInconsistentUnitsSpecified,
//           NidaqmxError::ErrorMultipleRelaysForSingleRelayOp => nidaqmx_sys::DAQmxErrorMultipleRelaysForSingleRelayOp,
//           NidaqmxError::ErrorMultipleDevIDsPerChassisSpecifiedInList => nidaqmx_sys::DAQmxErrorMultipleDevIDsPerChassisSpecifiedInList,
//           NidaqmxError::ErrorDuplicateDevIDInList => nidaqmx_sys::DAQmxErrorDuplicateDevIDInList,
//           NidaqmxError::ErrorInvalidRangeStatementCharInList => nidaqmx_sys::DAQmxErrorInvalidRangeStatementCharInList,
//           NidaqmxError::ErrorInvalidDeviceIDInList => nidaqmx_sys::DAQmxErrorInvalidDeviceIDInList,
//           NidaqmxError::ErrorTriggerPolarityConflict => nidaqmx_sys::DAQmxErrorTriggerPolarityConflict,
//           NidaqmxError::ErrorCannotScanWithCurrentTopology => nidaqmx_sys::DAQmxErrorCannotScanWithCurrentTopology,
//           NidaqmxError::ErrorUnexpectedIdentifierInFullySpecifiedPathInList => nidaqmx_sys::DAQmxErrorUnexpectedIdentifierInFullySpecifiedPathInList,
//           NidaqmxError::ErrorSwitchCannotDriveMultipleTrigLines => nidaqmx_sys::DAQmxErrorSwitchCannotDriveMultipleTrigLines,
//           NidaqmxError::ErrorInvalidRelayName => nidaqmx_sys::DAQmxErrorInvalidRelayName,
//           NidaqmxError::ErrorSwitchScanlistTooBig => nidaqmx_sys::DAQmxErrorSwitchScanlistTooBig,
//           NidaqmxError::ErrorSwitchChanInUse => nidaqmx_sys::DAQmxErrorSwitchChanInUse,
//           NidaqmxError::ErrorSwitchNotResetBeforeScan => nidaqmx_sys::DAQmxErrorSwitchNotResetBeforeScan,
//           NidaqmxError::ErrorInvalidTopology => nidaqmx_sys::DAQmxErrorInvalidTopology,
//           NidaqmxError::ErrorAttrNotSupported => nidaqmx_sys::DAQmxErrorAttrNotSupported,
//           NidaqmxError::ErrorUnexpectedEndOfActionsInList => nidaqmx_sys::DAQmxErrorUnexpectedEndOfActionsInList,
//           NidaqmxError::ErrorPowerLimitExceeded => nidaqmx_sys::DAQmxErrorPowerLimitExceeded,
//           NidaqmxError::ErrorHWUnexpectedlyPoweredOffAndOn => nidaqmx_sys::DAQmxErrorHWUnexpectedlyPoweredOffAndOn,
//           NidaqmxError::ErrorSwitchOperationNotSupported => nidaqmx_sys::DAQmxErrorSwitchOperationNotSupported,
//           NidaqmxError::ErrorOnlyContinuousScanSupported => nidaqmx_sys::DAQmxErrorOnlyContinuousScanSupported,
//           NidaqmxError::ErrorSwitchDifferentTopologyWhenScanning => nidaqmx_sys::DAQmxErrorSwitchDifferentTopologyWhenScanning,
//           NidaqmxError::ErrorDisconnectPathNotSameAsExistingPath => nidaqmx_sys::DAQmxErrorDisconnectPathNotSameAsExistingPath,
//           NidaqmxError::ErrorConnectionNotPermittedOnChanReservedForRouting => nidaqmx_sys::DAQmxErrorConnectionNotPermittedOnChanReservedForRouting,
//           NidaqmxError::ErrorCannotConnectSrcChans => nidaqmx_sys::DAQmxErrorCannotConnectSrcChans,
//           NidaqmxError::ErrorCannotConnectChannelToItself => nidaqmx_sys::DAQmxErrorCannotConnectChannelToItself,
//           NidaqmxError::ErrorChannelNotReservedForRouting => nidaqmx_sys::DAQmxErrorChannelNotReservedForRouting,
//           NidaqmxError::ErrorCannotConnectChansDirectly => nidaqmx_sys::DAQmxErrorCannotConnectChansDirectly,
//           NidaqmxError::ErrorChansAlreadyConnected => nidaqmx_sys::DAQmxErrorChansAlreadyConnected,
//           NidaqmxError::ErrorChanDuplicatedInPath => nidaqmx_sys::DAQmxErrorChanDuplicatedInPath,
//           NidaqmxError::ErrorNoPathToDisconnect => nidaqmx_sys::DAQmxErrorNoPathToDisconnect,
//           NidaqmxError::ErrorInvalidSwitchChan => nidaqmx_sys::DAQmxErrorInvalidSwitchChan,
//           NidaqmxError::ErrorNoPathAvailableBetween2SwitchChans => nidaqmx_sys::DAQmxErrorNoPathAvailableBetween2SwitchChans,
//           NidaqmxError::ErrorExplicitConnectionExists => nidaqmx_sys::DAQmxErrorExplicitConnectionExists,
//           NidaqmxError::ErrorSwitchDifferentSettlingTimeWhenScanning => nidaqmx_sys::DAQmxErrorSwitchDifferentSettlingTimeWhenScanning,
//           NidaqmxError::ErrorOperationOnlyPermittedWhileScanning => nidaqmx_sys::DAQmxErrorOperationOnlyPermittedWhileScanning,
//           NidaqmxError::ErrorOperationNotPermittedWhileScanning => nidaqmx_sys::DAQmxErrorOperationNotPermittedWhileScanning,
//           NidaqmxError::ErrorHardwareNotResponding => nidaqmx_sys::DAQmxErrorHardwareNotResponding,
//           NidaqmxError::ErrorInvalidSampAndMasterTimebaseRateCombo => nidaqmx_sys::DAQmxErrorInvalidSampAndMasterTimebaseRateCombo,
//           NidaqmxError::ErrorNonZeroBufferSizeInProgIOXfer => nidaqmx_sys::DAQmxErrorNonZeroBufferSizeInProgIOXfer,
//           NidaqmxError::ErrorVirtualChanNameUsed => nidaqmx_sys::DAQmxErrorVirtualChanNameUsed,
//           NidaqmxError::ErrorPhysicalChanDoesNotExist => nidaqmx_sys::DAQmxErrorPhysicalChanDoesNotExist,
//           NidaqmxError::ErrorMemMapOnlyForProgIOXfer => nidaqmx_sys::DAQmxErrorMemMapOnlyForProgIOXfer,
//           NidaqmxError::ErrorTooManyChans => nidaqmx_sys::DAQmxErrorTooManyChans,
//           NidaqmxError::ErrorCannotHaveCJTempWithOtherChans => nidaqmx_sys::DAQmxErrorCannotHaveCJTempWithOtherChans,
//           NidaqmxError::ErrorOutputBufferUnderwrite => nidaqmx_sys::DAQmxErrorOutputBufferUnderwrite,
//           NidaqmxError::ErrorSensorInvalidCompletionResistance => nidaqmx_sys::DAQmxErrorSensorInvalidCompletionResistance,
//           NidaqmxError::ErrorVoltageExcitIncompatibleWith2WireCfg => nidaqmx_sys::DAQmxErrorVoltageExcitIncompatibleWith2WireCfg,
//           NidaqmxError::ErrorIntExcitSrcNotAvailable => nidaqmx_sys::DAQmxErrorIntExcitSrcNotAvailable,
//           NidaqmxError::ErrorCannotCreateChannelAfterTaskVerified => nidaqmx_sys::DAQmxErrorCannotCreateChannelAfterTaskVerified,
//           NidaqmxError::ErrorLinesReservedForSCXIControl => nidaqmx_sys::DAQmxErrorLinesReservedForSCXIControl,
//           NidaqmxError::ErrorCouldNotReserveLinesForSCXIControl => nidaqmx_sys::DAQmxErrorCouldNotReserveLinesForSCXIControl,
//           NidaqmxError::ErrorCalibrationFailed => nidaqmx_sys::DAQmxErrorCalibrationFailed,
//           NidaqmxError::ErrorReferenceFrequencyInvalid => nidaqmx_sys::DAQmxErrorReferenceFrequencyInvalid,
//           NidaqmxError::ErrorReferenceResistanceInvalid => nidaqmx_sys::DAQmxErrorReferenceResistanceInvalid,
//           NidaqmxError::ErrorReferenceCurrentInvalid => nidaqmx_sys::DAQmxErrorReferenceCurrentInvalid,
//           NidaqmxError::ErrorReferenceVoltageInvalid => nidaqmx_sys::DAQmxErrorReferenceVoltageInvalid,
//           NidaqmxError::ErrorEEPROMDataInvalid => nidaqmx_sys::DAQmxErrorEEPROMDataInvalid,
//           NidaqmxError::ErrorCabledModuleNotCapableOfRoutingAI => nidaqmx_sys::DAQmxErrorCabledModuleNotCapableOfRoutingAI,
//           NidaqmxError::ErrorChannelNotAvailableInParallelMode => nidaqmx_sys::DAQmxErrorChannelNotAvailableInParallelMode,
//           NidaqmxError::ErrorExternalTimebaseRateNotKnownForDelay => nidaqmx_sys::DAQmxErrorExternalTimebaseRateNotKnownForDelay,
//           NidaqmxError::ErrorFREQOUTCannotProduceDesiredFrequency => nidaqmx_sys::DAQmxErrorFREQOUTCannotProduceDesiredFrequency,
//           NidaqmxError::ErrorMultipleCounterInputTask => nidaqmx_sys::DAQmxErrorMultipleCounterInputTask,
//           NidaqmxError::ErrorCounterStartPauseTriggerConflict => nidaqmx_sys::DAQmxErrorCounterStartPauseTriggerConflict,
//           NidaqmxError::ErrorCounterInputPauseTriggerAndSampleClockInvalid => nidaqmx_sys::DAQmxErrorCounterInputPauseTriggerAndSampleClockInvalid,
//           NidaqmxError::ErrorCounterOutputPauseTriggerInvalid => nidaqmx_sys::DAQmxErrorCounterOutputPauseTriggerInvalid,
//           NidaqmxError::ErrorCounterTimebaseRateNotSpecified => nidaqmx_sys::DAQmxErrorCounterTimebaseRateNotSpecified,
//           NidaqmxError::ErrorCounterTimebaseRateNotFound => nidaqmx_sys::DAQmxErrorCounterTimebaseRateNotFound,
//           NidaqmxError::ErrorCounterOverflow => nidaqmx_sys::DAQmxErrorCounterOverflow,
//           NidaqmxError::ErrorCounterNoTimebaseEdgesBetweenGates => nidaqmx_sys::DAQmxErrorCounterNoTimebaseEdgesBetweenGates,
//           NidaqmxError::ErrorCounterMaxMinRangeFreq => nidaqmx_sys::DAQmxErrorCounterMaxMinRangeFreq,
//           NidaqmxError::ErrorCounterMaxMinRangeTime => nidaqmx_sys::DAQmxErrorCounterMaxMinRangeTime,
//           NidaqmxError::ErrorSuitableTimebaseNotFoundTimeCombo => nidaqmx_sys::DAQmxErrorSuitableTimebaseNotFoundTimeCombo,
//           NidaqmxError::ErrorSuitableTimebaseNotFoundFrequencyCombo => nidaqmx_sys::DAQmxErrorSuitableTimebaseNotFoundFrequencyCombo,
//           NidaqmxError::ErrorInternalTimebaseSourceDivisorCombo => nidaqmx_sys::DAQmxErrorInternalTimebaseSourceDivisorCombo,
//           NidaqmxError::ErrorInternalTimebaseSourceRateCombo => nidaqmx_sys::DAQmxErrorInternalTimebaseSourceRateCombo,
//           NidaqmxError::ErrorInternalTimebaseRateDivisorSourceCombo => nidaqmx_sys::DAQmxErrorInternalTimebaseRateDivisorSourceCombo,
//           NidaqmxError::ErrorExternalTimebaseRateNotknownForRate => nidaqmx_sys::DAQmxErrorExternalTimebaseRateNotknownForRate,
//           NidaqmxError::ErrorAnalogTrigChanNotFirstInScanList => nidaqmx_sys::DAQmxErrorAnalogTrigChanNotFirstInScanList,
//           NidaqmxError::ErrorNoDivisorForExternalSignal => nidaqmx_sys::DAQmxErrorNoDivisorForExternalSignal,
//           NidaqmxError::ErrorAttributeInconsistentAcrossRepeatedPhysicalChannels => nidaqmx_sys::DAQmxErrorAttributeInconsistentAcrossRepeatedPhysicalChannels,
//           NidaqmxError::ErrorCannotHandshakeWithPort0 => nidaqmx_sys::DAQmxErrorCannotHandshakeWithPort0,
//           NidaqmxError::ErrorControlLineConflictOnPortC => nidaqmx_sys::DAQmxErrorControlLineConflictOnPortC,
//           NidaqmxError::ErrorLines4To7ConfiguredForOutput => nidaqmx_sys::DAQmxErrorLines4To7ConfiguredForOutput,
//           NidaqmxError::ErrorLines4To7ConfiguredForInput => nidaqmx_sys::DAQmxErrorLines4To7ConfiguredForInput,
//           NidaqmxError::ErrorLines0To3ConfiguredForOutput => nidaqmx_sys::DAQmxErrorLines0To3ConfiguredForOutput,
//           NidaqmxError::ErrorLines0To3ConfiguredForInput => nidaqmx_sys::DAQmxErrorLines0To3ConfiguredForInput,
//           NidaqmxError::ErrorPortConfiguredForOutput => nidaqmx_sys::DAQmxErrorPortConfiguredForOutput,
//           NidaqmxError::ErrorPortConfiguredForInput => nidaqmx_sys::DAQmxErrorPortConfiguredForInput,
//           NidaqmxError::ErrorPortConfiguredForStaticDigitalOps => nidaqmx_sys::DAQmxErrorPortConfiguredForStaticDigitalOps,
//           NidaqmxError::ErrorPortReservedForHandshaking => nidaqmx_sys::DAQmxErrorPortReservedForHandshaking,
//           NidaqmxError::ErrorPortDoesNotSupportHandshakingDataIO => nidaqmx_sys::DAQmxErrorPortDoesNotSupportHandshakingDataIO,
//           NidaqmxError::ErrorCannotTristate8255OutputLines => nidaqmx_sys::DAQmxErrorCannotTristate8255OutputLines,
//           NidaqmxError::ErrorTemperatureOutOfRangeForCalibration => nidaqmx_sys::DAQmxErrorTemperatureOutOfRangeForCalibration,
//           NidaqmxError::ErrorCalibrationHandleInvalid => nidaqmx_sys::DAQmxErrorCalibrationHandleInvalid,
//           NidaqmxError::ErrorPasswordRequired => nidaqmx_sys::DAQmxErrorPasswordRequired,
//           NidaqmxError::ErrorIncorrectPassword => nidaqmx_sys::DAQmxErrorIncorrectPassword,
//           NidaqmxError::ErrorPasswordTooLong => nidaqmx_sys::DAQmxErrorPasswordTooLong,
//           NidaqmxError::ErrorCalibrationSessionAlreadyOpen => nidaqmx_sys::DAQmxErrorCalibrationSessionAlreadyOpen,
//           NidaqmxError::ErrorSCXIModuleIncorrect => nidaqmx_sys::DAQmxErrorSCXIModuleIncorrect,
//           NidaqmxError::ErrorAttributeInconsistentAcrossChannelsOnDevice => nidaqmx_sys::DAQmxErrorAttributeInconsistentAcrossChannelsOnDevice,
//           NidaqmxError::ErrorSCXI1122ResistanceChanNotSupportedForCfg => nidaqmx_sys::DAQmxErrorSCXI1122ResistanceChanNotSupportedForCfg,
//           NidaqmxError::ErrorBracketPairingMismatchInList => nidaqmx_sys::DAQmxErrorBracketPairingMismatchInList,
//           NidaqmxError::ErrorInconsistentNumSamplesToWrite => nidaqmx_sys::DAQmxErrorInconsistentNumSamplesToWrite,
//           NidaqmxError::ErrorIncorrectDigitalPattern => nidaqmx_sys::DAQmxErrorIncorrectDigitalPattern,
//           NidaqmxError::ErrorIncorrectNumChannelsToWrite => nidaqmx_sys::DAQmxErrorIncorrectNumChannelsToWrite,
//           NidaqmxError::ErrorIncorrectReadFunction => nidaqmx_sys::DAQmxErrorIncorrectReadFunction,
//           NidaqmxError::ErrorPhysicalChannelNotSpecified => nidaqmx_sys::DAQmxErrorPhysicalChannelNotSpecified,
//           NidaqmxError::ErrorMoreThanOneTerminal => nidaqmx_sys::DAQmxErrorMoreThanOneTerminal,
//           NidaqmxError::ErrorMoreThanOneActiveChannelSpecified => nidaqmx_sys::DAQmxErrorMoreThanOneActiveChannelSpecified,
//           NidaqmxError::ErrorInvalidNumberSamplesToRead => nidaqmx_sys::DAQmxErrorInvalidNumberSamplesToRead,
//           NidaqmxError::ErrorAnalogWaveformExpected => nidaqmx_sys::DAQmxErrorAnalogWaveformExpected,
//           NidaqmxError::ErrorDigitalWaveformExpected => nidaqmx_sys::DAQmxErrorDigitalWaveformExpected,
//           NidaqmxError::ErrorActiveChannelNotSpecified => nidaqmx_sys::DAQmxErrorActiveChannelNotSpecified,
//           NidaqmxError::ErrorFunctionNotSupportedForDeviceTasks => nidaqmx_sys::DAQmxErrorFunctionNotSupportedForDeviceTasks,
//           NidaqmxError::ErrorFunctionNotInLibrary => nidaqmx_sys::DAQmxErrorFunctionNotInLibrary,
//           NidaqmxError::ErrorLibraryNotPresent => nidaqmx_sys::DAQmxErrorLibraryNotPresent,
//           NidaqmxError::ErrorDuplicateTask => nidaqmx_sys::DAQmxErrorDuplicateTask,
//           NidaqmxError::ErrorInvalidTask => nidaqmx_sys::DAQmxErrorInvalidTask,
//           NidaqmxError::ErrorInvalidChannel => nidaqmx_sys::DAQmxErrorInvalidChannel,
//           NidaqmxError::ErrorInvalidSyntaxForPhysicalChannelRange => nidaqmx_sys::DAQmxErrorInvalidSyntaxForPhysicalChannelRange,
//           NidaqmxError::ErrorMinNotLessThanMax => nidaqmx_sys::DAQmxErrorMinNotLessThanMax,
//           NidaqmxError::ErrorSampleRateNumChansConvertPeriodCombo => nidaqmx_sys::DAQmxErrorSampleRateNumChansConvertPeriodCombo,
//           NidaqmxError::ErrorAODuringCounter1DMAConflict => nidaqmx_sys::DAQmxErrorAODuringCounter1DMAConflict,
//           NidaqmxError::ErrorAIDuringCounter0DMAConflict => nidaqmx_sys::DAQmxErrorAIDuringCounter0DMAConflict,
//           NidaqmxError::ErrorInvalidAttributeValue => nidaqmx_sys::DAQmxErrorInvalidAttributeValue,
//           NidaqmxError::ErrorSuppliedCurrentDataOutsideSpecifiedRange => nidaqmx_sys::DAQmxErrorSuppliedCurrentDataOutsideSpecifiedRange,
//           NidaqmxError::ErrorSuppliedVoltageDataOutsideSpecifiedRange => nidaqmx_sys::DAQmxErrorSuppliedVoltageDataOutsideSpecifiedRange,
//           NidaqmxError::ErrorCannotStoreCalConst => nidaqmx_sys::DAQmxErrorCannotStoreCalConst,
//           NidaqmxError::ErrorSCXIModuleNotFound => nidaqmx_sys::DAQmxErrorSCXIModuleNotFound,
//           NidaqmxError::ErrorDuplicatePhysicalChansNotSupported => nidaqmx_sys::DAQmxErrorDuplicatePhysicalChansNotSupported,
//           NidaqmxError::ErrorTooManyPhysicalChansInList => nidaqmx_sys::DAQmxErrorTooManyPhysicalChansInList,
//           NidaqmxError::ErrorInvalidAdvanceEventTriggerType => nidaqmx_sys::DAQmxErrorInvalidAdvanceEventTriggerType,
//           NidaqmxError::ErrorDeviceIsNotAValidSwitch => nidaqmx_sys::DAQmxErrorDeviceIsNotAValidSwitch,
//           NidaqmxError::ErrorDeviceDoesNotSupportScanning => nidaqmx_sys::DAQmxErrorDeviceDoesNotSupportScanning,
//           NidaqmxError::ErrorScanListCannotBeTimed => nidaqmx_sys::DAQmxErrorScanListCannotBeTimed,
//           NidaqmxError::ErrorConnectOperatorInvalidAtPointInList => nidaqmx_sys::DAQmxErrorConnectOperatorInvalidAtPointInList,
//           NidaqmxError::ErrorUnexpectedSwitchActionInList => nidaqmx_sys::DAQmxErrorUnexpectedSwitchActionInList,
//           NidaqmxError::ErrorUnexpectedSeparatorInList => nidaqmx_sys::DAQmxErrorUnexpectedSeparatorInList,
//           NidaqmxError::ErrorExpectedTerminatorInList => nidaqmx_sys::DAQmxErrorExpectedTerminatorInList,
//           NidaqmxError::ErrorExpectedConnectOperatorInList => nidaqmx_sys::DAQmxErrorExpectedConnectOperatorInList,
//           NidaqmxError::ErrorExpectedSeparatorInList => nidaqmx_sys::DAQmxErrorExpectedSeparatorInList,
//           NidaqmxError::ErrorFullySpecifiedPathInListContainsRange => nidaqmx_sys::DAQmxErrorFullySpecifiedPathInListContainsRange,
//           NidaqmxError::ErrorConnectionSeparatorAtEndOfList => nidaqmx_sys::DAQmxErrorConnectionSeparatorAtEndOfList,
//           NidaqmxError::ErrorIdentifierInListTooLong => nidaqmx_sys::DAQmxErrorIdentifierInListTooLong,
//           NidaqmxError::ErrorDuplicateDeviceIDInListWhenSettling => nidaqmx_sys::DAQmxErrorDuplicateDeviceIDInListWhenSettling,
//           NidaqmxError::ErrorChannelNameNotSpecifiedInList => nidaqmx_sys::DAQmxErrorChannelNameNotSpecifiedInList,
//           NidaqmxError::ErrorDeviceIDNotSpecifiedInList => nidaqmx_sys::DAQmxErrorDeviceIDNotSpecifiedInList,
//           NidaqmxError::ErrorSemicolonDoesNotFollowRangeInList => nidaqmx_sys::DAQmxErrorSemicolonDoesNotFollowRangeInList,
//           NidaqmxError::ErrorSwitchActionInListSpansMultipleDevices => nidaqmx_sys::DAQmxErrorSwitchActionInListSpansMultipleDevices,
//           NidaqmxError::ErrorRangeWithoutAConnectActionInList => nidaqmx_sys::DAQmxErrorRangeWithoutAConnectActionInList,
//           NidaqmxError::ErrorInvalidIdentifierFollowingSeparatorInList => nidaqmx_sys::DAQmxErrorInvalidIdentifierFollowingSeparatorInList,
//           NidaqmxError::ErrorInvalidChannelNameInList => nidaqmx_sys::DAQmxErrorInvalidChannelNameInList,
//           NidaqmxError::ErrorInvalidNumberInRepeatStatementInList => nidaqmx_sys::DAQmxErrorInvalidNumberInRepeatStatementInList,
//           NidaqmxError::ErrorInvalidTriggerLineInList => nidaqmx_sys::DAQmxErrorInvalidTriggerLineInList,
//           NidaqmxError::ErrorInvalidIdentifierInListFollowingDeviceID => nidaqmx_sys::DAQmxErrorInvalidIdentifierInListFollowingDeviceID,
//           NidaqmxError::ErrorInvalidIdentifierInListAtEndOfSwitchAction => nidaqmx_sys::DAQmxErrorInvalidIdentifierInListAtEndOfSwitchAction,
//           NidaqmxError::ErrorDeviceRemoved => nidaqmx_sys::DAQmxErrorDeviceRemoved,
//           NidaqmxError::ErrorRoutingPathNotAvailable => nidaqmx_sys::DAQmxErrorRoutingPathNotAvailable,
//           NidaqmxError::ErrorRoutingHardwareBusy => nidaqmx_sys::DAQmxErrorRoutingHardwareBusy,
//           NidaqmxError::ErrorRequestedSignalInversionForRoutingNotPossible => nidaqmx_sys::DAQmxErrorRequestedSignalInversionForRoutingNotPossible,
//           NidaqmxError::ErrorInvalidRoutingDestinationTerminalName => nidaqmx_sys::DAQmxErrorInvalidRoutingDestinationTerminalName,
//           NidaqmxError::ErrorInvalidRoutingSourceTerminalName => nidaqmx_sys::DAQmxErrorInvalidRoutingSourceTerminalName,
//           NidaqmxError::ErrorRoutingNotSupportedForDevice => nidaqmx_sys::DAQmxErrorRoutingNotSupportedForDevice,
//           NidaqmxError::ErrorWaitIsLastInstructionOfLoopInScript => nidaqmx_sys::DAQmxErrorWaitIsLastInstructionOfLoopInScript,
//           NidaqmxError::ErrorClearIsLastInstructionOfLoopInScript => nidaqmx_sys::DAQmxErrorClearIsLastInstructionOfLoopInScript,
//           NidaqmxError::ErrorInvalidLoopIterationsInScript => nidaqmx_sys::DAQmxErrorInvalidLoopIterationsInScript,
//           NidaqmxError::ErrorRepeatLoopNestingTooDeepInScript => nidaqmx_sys::DAQmxErrorRepeatLoopNestingTooDeepInScript,
//           NidaqmxError::ErrorMarkerPositionOutsideSubsetInScript => nidaqmx_sys::DAQmxErrorMarkerPositionOutsideSubsetInScript,
//           NidaqmxError::ErrorSubsetStartOffsetNotAlignedInScript => nidaqmx_sys::DAQmxErrorSubsetStartOffsetNotAlignedInScript,
//           NidaqmxError::ErrorInvalidSubsetLengthInScript => nidaqmx_sys::DAQmxErrorInvalidSubsetLengthInScript,
//           NidaqmxError::ErrorMarkerPositionNotAlignedInScript => nidaqmx_sys::DAQmxErrorMarkerPositionNotAlignedInScript,
//           NidaqmxError::ErrorSubsetOutsideWaveformInScript => nidaqmx_sys::DAQmxErrorSubsetOutsideWaveformInScript,
//           NidaqmxError::ErrorMarkerOutsideWaveformInScript => nidaqmx_sys::DAQmxErrorMarkerOutsideWaveformInScript,
//           NidaqmxError::ErrorWaveformInScriptNotInMem => nidaqmx_sys::DAQmxErrorWaveformInScriptNotInMem,
//           NidaqmxError::ErrorKeywordExpectedInScript => nidaqmx_sys::DAQmxErrorKeywordExpectedInScript,
//           NidaqmxError::ErrorBufferNameExpectedInScript => nidaqmx_sys::DAQmxErrorBufferNameExpectedInScript,
//           NidaqmxError::ErrorProcedureNameExpectedInScript => nidaqmx_sys::DAQmxErrorProcedureNameExpectedInScript,
//           NidaqmxError::ErrorScriptHasInvalidIdentifier => nidaqmx_sys::DAQmxErrorScriptHasInvalidIdentifier,
//           NidaqmxError::ErrorScriptHasInvalidCharacter => nidaqmx_sys::DAQmxErrorScriptHasInvalidCharacter,
//           NidaqmxError::ErrorResourceAlreadyReserved => nidaqmx_sys::DAQmxErrorResourceAlreadyReserved,
//           NidaqmxError::ErrorSelfTestFailed => nidaqmx_sys::DAQmxErrorSelfTestFailed,
//           NidaqmxError::ErrorADCOverrun => nidaqmx_sys::DAQmxErrorADCOverrun,
//           NidaqmxError::ErrorDACUnderflow => nidaqmx_sys::DAQmxErrorDACUnderflow,
//           NidaqmxError::ErrorInputFIFOUnderflow => nidaqmx_sys::DAQmxErrorInputFIFOUnderflow,
//           NidaqmxError::ErrorOutputFIFOUnderflow => nidaqmx_sys::DAQmxErrorOutputFIFOUnderflow,
//           NidaqmxError::ErrorSCXISerialCommunication => nidaqmx_sys::DAQmxErrorSCXISerialCommunication,
//           NidaqmxError::ErrorDigitalTerminalSpecifiedMoreThanOnce => nidaqmx_sys::DAQmxErrorDigitalTerminalSpecifiedMoreThanOnce,
//           NidaqmxError::ErrorDigitalOutputNotSupported => nidaqmx_sys::DAQmxErrorDigitalOutputNotSupported,
//           NidaqmxError::ErrorInconsistentChannelDirections => nidaqmx_sys::DAQmxErrorInconsistentChannelDirections,
//           NidaqmxError::ErrorInputFIFOOverflow => nidaqmx_sys::DAQmxErrorInputFIFOOverflow,
//           NidaqmxError::ErrorTimeStampOverwritten => nidaqmx_sys::DAQmxErrorTimeStampOverwritten,
//           NidaqmxError::ErrorStopTriggerHasNotOccurred => nidaqmx_sys::DAQmxErrorStopTriggerHasNotOccurred,
//           NidaqmxError::ErrorRecordNotAvailable => nidaqmx_sys::DAQmxErrorRecordNotAvailable,
//           NidaqmxError::ErrorRecordOverwritten => nidaqmx_sys::DAQmxErrorRecordOverwritten,
//           NidaqmxError::ErrorDataNotAvailable => nidaqmx_sys::DAQmxErrorDataNotAvailable,
//           NidaqmxError::ErrorDataOverwrittenInDeviceMemory => nidaqmx_sys::DAQmxErrorDataOverwrittenInDeviceMemory,
//           NidaqmxError::ErrorDuplicatedChannel => nidaqmx_sys::DAQmxErrorDuplicatedChannel,
//           NidaqmxError::ErrorInterfaceObsoleted_Routing => nidaqmx_sys::DAQmxErrorInterfaceObsoleted_Routing,
//           NidaqmxError::ErrorRoCoServiceNotAvailable_Routing => nidaqmx_sys::DAQmxErrorRoCoServiceNotAvailable_Routing,
//           NidaqmxError::ErrorRoutingDestTermPXIDStarXNotInSystemTimingSlot_Routing => nidaqmx_sys::DAQmxErrorRoutingDestTermPXIDStarXNotInSystemTimingSlot_Routing,
//           NidaqmxError::ErrorRoutingSrcTermPXIDStarXNotInSystemTimingSlot_Routing => nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIDStarXNotInSystemTimingSlot_Routing,
//           NidaqmxError::ErrorRoutingSrcTermPXIDStarInNonDStarTriggerSlot_Routing => nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIDStarInNonDStarTriggerSlot_Routing,
//           NidaqmxError::ErrorRoutingDestTermPXIDStarInNonDStarTriggerSlot_Routing => nidaqmx_sys::DAQmxErrorRoutingDestTermPXIDStarInNonDStarTriggerSlot_Routing,
//           NidaqmxError::ErrorRoutingDestTermPXIClk10InNotInStarTriggerSlot_Routing => nidaqmx_sys::DAQmxErrorRoutingDestTermPXIClk10InNotInStarTriggerSlot_Routing,
//           NidaqmxError::ErrorRoutingDestTermPXIClk10InNotInSystemTimingSlot_Routing => nidaqmx_sys::DAQmxErrorRoutingDestTermPXIClk10InNotInSystemTimingSlot_Routing,
//           NidaqmxError::ErrorRoutingDestTermPXIStarXNotInStarTriggerSlot_Routing => nidaqmx_sys::DAQmxErrorRoutingDestTermPXIStarXNotInStarTriggerSlot_Routing,
//           NidaqmxError::ErrorRoutingDestTermPXIStarXNotInSystemTimingSlot_Routing => nidaqmx_sys::DAQmxErrorRoutingDestTermPXIStarXNotInSystemTimingSlot_Routing,
//           NidaqmxError::ErrorRoutingSrcTermPXIStarXNotInStarTriggerSlot_Routing => nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIStarXNotInStarTriggerSlot_Routing,
//           NidaqmxError::ErrorRoutingSrcTermPXIStarXNotInSystemTimingSlot_Routing => nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIStarXNotInSystemTimingSlot_Routing,
//           NidaqmxError::ErrorRoutingSrcTermPXIStarInNonStarTriggerSlot_Routing => nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIStarInNonStarTriggerSlot_Routing,
//           NidaqmxError::ErrorRoutingDestTermPXIStarInNonStarTriggerSlot_Routing => nidaqmx_sys::DAQmxErrorRoutingDestTermPXIStarInNonStarTriggerSlot_Routing,
//           NidaqmxError::ErrorRoutingDestTermPXIStarInStarTriggerSlot_Routing => nidaqmx_sys::DAQmxErrorRoutingDestTermPXIStarInStarTriggerSlot_Routing,
//           NidaqmxError::ErrorRoutingDestTermPXIStarInSystemTimingSlot_Routing => nidaqmx_sys::DAQmxErrorRoutingDestTermPXIStarInSystemTimingSlot_Routing,
//           NidaqmxError::ErrorRoutingSrcTermPXIStarInStarTriggerSlot_Routing => nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIStarInStarTriggerSlot_Routing,
//           NidaqmxError::ErrorRoutingSrcTermPXIStarInSystemTimingSlot_Routing => nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIStarInSystemTimingSlot_Routing,
//           NidaqmxError::ErrorInvalidSignalModifier_Routing => nidaqmx_sys::DAQmxErrorInvalidSignalModifier_Routing,
//           NidaqmxError::ErrorRoutingDestTermPXIClk10InNotInSlot2_Routing => nidaqmx_sys::DAQmxErrorRoutingDestTermPXIClk10InNotInSlot2_Routing,
//           NidaqmxError::ErrorRoutingDestTermPXIStarXNotInSlot2_Routing => nidaqmx_sys::DAQmxErrorRoutingDestTermPXIStarXNotInSlot2_Routing,
//           NidaqmxError::ErrorRoutingSrcTermPXIStarXNotInSlot2_Routing => nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIStarXNotInSlot2_Routing,
//           NidaqmxError::ErrorRoutingSrcTermPXIStarInSlot16AndAbove_Routing => nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIStarInSlot16AndAbove_Routing,
//           NidaqmxError::ErrorRoutingDestTermPXIStarInSlot16AndAbove_Routing => nidaqmx_sys::DAQmxErrorRoutingDestTermPXIStarInSlot16AndAbove_Routing,
//           NidaqmxError::ErrorRoutingDestTermPXIStarInSlot2_Routing => nidaqmx_sys::DAQmxErrorRoutingDestTermPXIStarInSlot2_Routing,
//           NidaqmxError::ErrorRoutingSrcTermPXIStarInSlot2_Routing => nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIStarInSlot2_Routing,
//           NidaqmxError::ErrorRoutingDestTermPXIChassisNotIdentified_Routing => nidaqmx_sys::DAQmxErrorRoutingDestTermPXIChassisNotIdentified_Routing,
//           NidaqmxError::ErrorRoutingSrcTermPXIChassisNotIdentified_Routing => nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIChassisNotIdentified_Routing,
//           NidaqmxError::ErrorTrigLineNotFoundSingleDevRoute_Routing => nidaqmx_sys::DAQmxErrorTrigLineNotFoundSingleDevRoute_Routing,
//           NidaqmxError::ErrorNoCommonTrigLineForRoute_Routing => nidaqmx_sys::DAQmxErrorNoCommonTrigLineForRoute_Routing,
//           NidaqmxError::ErrorResourcesInUseForRouteInTask_Routing => nidaqmx_sys::DAQmxErrorResourcesInUseForRouteInTask_Routing,
//           NidaqmxError::ErrorResourcesInUseForRoute_Routing => nidaqmx_sys::DAQmxErrorResourcesInUseForRoute_Routing,
//           NidaqmxError::ErrorRouteNotSupportedByHW_Routing => nidaqmx_sys::DAQmxErrorRouteNotSupportedByHW_Routing,
//           NidaqmxError::ErrorResourcesInUseForInversionInTask_Routing => nidaqmx_sys::DAQmxErrorResourcesInUseForInversionInTask_Routing,
//           NidaqmxError::ErrorResourcesInUseForInversion_Routing => nidaqmx_sys::DAQmxErrorResourcesInUseForInversion_Routing,
//           NidaqmxError::ErrorInversionNotSupportedByHW_Routing => nidaqmx_sys::DAQmxErrorInversionNotSupportedByHW_Routing,
//           NidaqmxError::ErrorResourcesInUseForProperty_Routing => nidaqmx_sys::DAQmxErrorResourcesInUseForProperty_Routing,
//           NidaqmxError::ErrorRouteSrcAndDestSame_Routing => nidaqmx_sys::DAQmxErrorRouteSrcAndDestSame_Routing,
//           NidaqmxError::ErrorDevAbsentOrUnavailable_Routing => nidaqmx_sys::DAQmxErrorDevAbsentOrUnavailable_Routing,
//           NidaqmxError::ErrorInvalidTerm_Routing => nidaqmx_sys::DAQmxErrorInvalidTerm_Routing,
//           NidaqmxError::ErrorCannotTristateTerm_Routing => nidaqmx_sys::DAQmxErrorCannotTristateTerm_Routing,
//           NidaqmxError::ErrorCannotTristateBusyTerm_Routing => nidaqmx_sys::DAQmxErrorCannotTristateBusyTerm_Routing,
//           NidaqmxError::ErrorCouldNotReserveRequestedTrigLine_Routing => nidaqmx_sys::DAQmxErrorCouldNotReserveRequestedTrigLine_Routing,
//           NidaqmxError::ErrorTrigLineNotFound_Routing => nidaqmx_sys::DAQmxErrorTrigLineNotFound_Routing,
//           NidaqmxError::ErrorRoutingPathNotAvailable_Routing => nidaqmx_sys::DAQmxErrorRoutingPathNotAvailable_Routing,
//           NidaqmxError::ErrorRoutingHardwareBusy_Routing => nidaqmx_sys::DAQmxErrorRoutingHardwareBusy_Routing,
//           NidaqmxError::ErrorRequestedSignalInversionForRoutingNotPossible_Routing => nidaqmx_sys::DAQmxErrorRequestedSignalInversionForRoutingNotPossible_Routing,
//           NidaqmxError::ErrorInvalidRoutingDestinationTerminalName_Routing => nidaqmx_sys::DAQmxErrorInvalidRoutingDestinationTerminalName_Routing,
//           NidaqmxError::ErrorInvalidRoutingSourceTerminalName_Routing => nidaqmx_sys::DAQmxErrorInvalidRoutingSourceTerminalName_Routing,
//           NidaqmxError::ErrorServiceLocatorNotAvailable_Routing => nidaqmx_sys::DAQmxErrorServiceLocatorNotAvailable_Routing,
//           NidaqmxError::ErrorCouldNotConnectToServer_Routing => nidaqmx_sys::DAQmxErrorCouldNotConnectToServer_Routing,
//           NidaqmxError::ErrorDeviceNameContainsSpacesOrPunctuation_Routing => nidaqmx_sys::DAQmxErrorDeviceNameContainsSpacesOrPunctuation_Routing,
//           NidaqmxError::ErrorDeviceNameContainsNonprintableCharacters_Routing => nidaqmx_sys::DAQmxErrorDeviceNameContainsNonprintableCharacters_Routing,
//           NidaqmxError::ErrorDeviceNameIsEmpty_Routing => nidaqmx_sys::DAQmxErrorDeviceNameIsEmpty_Routing,
//           NidaqmxError::ErrorDeviceNameNotFound_Routing => nidaqmx_sys::DAQmxErrorDeviceNameNotFound_Routing,
//           NidaqmxError::ErrorLocalRemoteDriverVersionMismatch_Routing => nidaqmx_sys::DAQmxErrorLocalRemoteDriverVersionMismatch_Routing,
//           NidaqmxError::ErrorDuplicateDeviceName_Routing => nidaqmx_sys::DAQmxErrorDuplicateDeviceName_Routing,
//           NidaqmxError::ErrorRuntimeAborting_Routing => nidaqmx_sys::DAQmxErrorRuntimeAborting_Routing,
//           NidaqmxError::ErrorRuntimeAborted_Routing => nidaqmx_sys::DAQmxErrorRuntimeAborted_Routing,
//           NidaqmxError::ErrorResourceNotInPool_Routing => nidaqmx_sys::DAQmxErrorResourceNotInPool_Routing,
//           NidaqmxError::ErrorDriverDeviceGUIDNotFound_Routing => nidaqmx_sys::DAQmxErrorDriverDeviceGUIDNotFound_Routing,
//           NidaqmxError::ErrorPALUSBTransactionError => nidaqmx_sys::DAQmxErrorPALUSBTransactionError,
//           NidaqmxError::ErrorPALIsocStreamBufferError => nidaqmx_sys::DAQmxErrorPALIsocStreamBufferError,
//           NidaqmxError::ErrorPALInvalidAddressComponent => nidaqmx_sys::DAQmxErrorPALInvalidAddressComponent,
//           NidaqmxError::ErrorPALSharingViolation => nidaqmx_sys::DAQmxErrorPALSharingViolation,
//           NidaqmxError::ErrorPALInvalidDeviceState => nidaqmx_sys::DAQmxErrorPALInvalidDeviceState,
//           NidaqmxError::ErrorPALConnectionReset => nidaqmx_sys::DAQmxErrorPALConnectionReset,
//           NidaqmxError::ErrorPALConnectionAborted => nidaqmx_sys::DAQmxErrorPALConnectionAborted,
//           NidaqmxError::ErrorPALConnectionRefused => nidaqmx_sys::DAQmxErrorPALConnectionRefused,
//           NidaqmxError::ErrorPALBusResetOccurred => nidaqmx_sys::DAQmxErrorPALBusResetOccurred,
//           NidaqmxError::ErrorPALWaitInterrupted => nidaqmx_sys::DAQmxErrorPALWaitInterrupted,
//           NidaqmxError::ErrorPALMessageUnderflow => nidaqmx_sys::DAQmxErrorPALMessageUnderflow,
//           NidaqmxError::ErrorPALMessageOverflow => nidaqmx_sys::DAQmxErrorPALMessageOverflow,
//           NidaqmxError::ErrorPALThreadAlreadyDead => nidaqmx_sys::DAQmxErrorPALThreadAlreadyDead,
//           NidaqmxError::ErrorPALThreadStackSizeNotSupported => nidaqmx_sys::DAQmxErrorPALThreadStackSizeNotSupported,
//           NidaqmxError::ErrorPALThreadControllerIsNotThreadCreator => nidaqmx_sys::DAQmxErrorPALThreadControllerIsNotThreadCreator,
//           NidaqmxError::ErrorPALThreadHasNoThreadObject => nidaqmx_sys::DAQmxErrorPALThreadHasNoThreadObject,
//           NidaqmxError::ErrorPALThreadCouldNotRun => nidaqmx_sys::DAQmxErrorPALThreadCouldNotRun,
//           NidaqmxError::ErrorPALSyncAbandoned => nidaqmx_sys::DAQmxErrorPALSyncAbandoned,
//           NidaqmxError::ErrorPALSyncTimedOut => nidaqmx_sys::DAQmxErrorPALSyncTimedOut,
//           NidaqmxError::ErrorPALReceiverSocketInvalid => nidaqmx_sys::DAQmxErrorPALReceiverSocketInvalid,
//           NidaqmxError::ErrorPALSocketListenerInvalid => nidaqmx_sys::DAQmxErrorPALSocketListenerInvalid,
//           NidaqmxError::ErrorPALSocketListenerAlreadyRegistered => nidaqmx_sys::DAQmxErrorPALSocketListenerAlreadyRegistered,
//           NidaqmxError::ErrorPALDispatcherAlreadyExported => nidaqmx_sys::DAQmxErrorPALDispatcherAlreadyExported,
//           NidaqmxError::ErrorPALDMALinkEventMissed => nidaqmx_sys::DAQmxErrorPALDMALinkEventMissed,
//           NidaqmxError::ErrorPALBusError => nidaqmx_sys::DAQmxErrorPALBusError,
//           NidaqmxError::ErrorPALRetryLimitExceeded => nidaqmx_sys::DAQmxErrorPALRetryLimitExceeded,
//           NidaqmxError::ErrorPALTransferOverread => nidaqmx_sys::DAQmxErrorPALTransferOverread,
//           NidaqmxError::ErrorPALTransferOverwritten => nidaqmx_sys::DAQmxErrorPALTransferOverwritten,
//           NidaqmxError::ErrorPALPhysicalBufferFull => nidaqmx_sys::DAQmxErrorPALPhysicalBufferFull,
//           NidaqmxError::ErrorPALPhysicalBufferEmpty => nidaqmx_sys::DAQmxErrorPALPhysicalBufferEmpty,
//           NidaqmxError::ErrorPALLogicalBufferFull => nidaqmx_sys::DAQmxErrorPALLogicalBufferFull,
//           NidaqmxError::ErrorPALLogicalBufferEmpty => nidaqmx_sys::DAQmxErrorPALLogicalBufferEmpty,
//           NidaqmxError::ErrorPALTransferAborted => nidaqmx_sys::DAQmxErrorPALTransferAborted,
//           NidaqmxError::ErrorPALTransferStopped => nidaqmx_sys::DAQmxErrorPALTransferStopped,
//           NidaqmxError::ErrorPALTransferInProgress => nidaqmx_sys::DAQmxErrorPALTransferInProgress,
//           NidaqmxError::ErrorPALTransferNotInProgress => nidaqmx_sys::DAQmxErrorPALTransferNotInProgress,
//           NidaqmxError::ErrorPALCommunicationsFault => nidaqmx_sys::DAQmxErrorPALCommunicationsFault,
//           NidaqmxError::ErrorPALTransferTimedOut => nidaqmx_sys::DAQmxErrorPALTransferTimedOut,
//           NidaqmxError::ErrorPALMemoryHeapNotEmpty => nidaqmx_sys::DAQmxErrorPALMemoryHeapNotEmpty,
//           NidaqmxError::ErrorPALMemoryBlockCheckFailed => nidaqmx_sys::DAQmxErrorPALMemoryBlockCheckFailed,
//           NidaqmxError::ErrorPALMemoryPageLockFailed => nidaqmx_sys::DAQmxErrorPALMemoryPageLockFailed,
//           NidaqmxError::ErrorPALMemoryFull => nidaqmx_sys::DAQmxErrorPALMemoryFull,
//           NidaqmxError::ErrorPALMemoryAlignmentFault => nidaqmx_sys::DAQmxErrorPALMemoryAlignmentFault,
//           NidaqmxError::ErrorPALMemoryConfigurationFault => nidaqmx_sys::DAQmxErrorPALMemoryConfigurationFault,
//           NidaqmxError::ErrorPALDeviceInitializationFault => nidaqmx_sys::DAQmxErrorPALDeviceInitializationFault,
//           NidaqmxError::ErrorPALDeviceNotSupported => nidaqmx_sys::DAQmxErrorPALDeviceNotSupported,
//           NidaqmxError::ErrorPALDeviceUnknown => nidaqmx_sys::DAQmxErrorPALDeviceUnknown,
//           NidaqmxError::ErrorPALDeviceNotFound => nidaqmx_sys::DAQmxErrorPALDeviceNotFound,
//           NidaqmxError::ErrorPALFeatureDisabled => nidaqmx_sys::DAQmxErrorPALFeatureDisabled,
//           NidaqmxError::ErrorPALComponentBusy => nidaqmx_sys::DAQmxErrorPALComponentBusy,
//           NidaqmxError::ErrorPALComponentAlreadyInstalled => nidaqmx_sys::DAQmxErrorPALComponentAlreadyInstalled,
//           NidaqmxError::ErrorPALComponentNotUnloadable => nidaqmx_sys::DAQmxErrorPALComponentNotUnloadable,
//           NidaqmxError::ErrorPALComponentNeverLoaded => nidaqmx_sys::DAQmxErrorPALComponentNeverLoaded,
//           NidaqmxError::ErrorPALComponentAlreadyLoaded => nidaqmx_sys::DAQmxErrorPALComponentAlreadyLoaded,
//           NidaqmxError::ErrorPALComponentCircularDependency => nidaqmx_sys::DAQmxErrorPALComponentCircularDependency,
//           NidaqmxError::ErrorPALComponentInitializationFault => nidaqmx_sys::DAQmxErrorPALComponentInitializationFault,
//           NidaqmxError::ErrorPALComponentImageCorrupt => nidaqmx_sys::DAQmxErrorPALComponentImageCorrupt,
//           NidaqmxError::ErrorPALFeatureNotSupported => nidaqmx_sys::DAQmxErrorPALFeatureNotSupported,
//           NidaqmxError::ErrorPALFunctionNotFound => nidaqmx_sys::DAQmxErrorPALFunctionNotFound,
//           NidaqmxError::ErrorPALFunctionObsolete => nidaqmx_sys::DAQmxErrorPALFunctionObsolete,
//           NidaqmxError::ErrorPALComponentTooNew => nidaqmx_sys::DAQmxErrorPALComponentTooNew,
//           NidaqmxError::ErrorPALComponentTooOld => nidaqmx_sys::DAQmxErrorPALComponentTooOld,
//           NidaqmxError::ErrorPALComponentNotFound => nidaqmx_sys::DAQmxErrorPALComponentNotFound,
//           NidaqmxError::ErrorPALVersionMismatch => nidaqmx_sys::DAQmxErrorPALVersionMismatch,
//           NidaqmxError::ErrorPALFileFault => nidaqmx_sys::DAQmxErrorPALFileFault,
//           NidaqmxError::ErrorPALFileWriteFault => nidaqmx_sys::DAQmxErrorPALFileWriteFault,
//           NidaqmxError::ErrorPALFileReadFault => nidaqmx_sys::DAQmxErrorPALFileReadFault,
//           NidaqmxError::ErrorPALFileSeekFault => nidaqmx_sys::DAQmxErrorPALFileSeekFault,
//           NidaqmxError::ErrorPALFileCloseFault => nidaqmx_sys::DAQmxErrorPALFileCloseFault,
//           NidaqmxError::ErrorPALFileOpenFault => nidaqmx_sys::DAQmxErrorPALFileOpenFault,
//           NidaqmxError::ErrorPALDiskFull => nidaqmx_sys::DAQmxErrorPALDiskFull,
//           NidaqmxError::ErrorPALOSFault => nidaqmx_sys::DAQmxErrorPALOSFault,
//           NidaqmxError::ErrorPALOSInitializationFault => nidaqmx_sys::DAQmxErrorPALOSInitializationFault,
//           NidaqmxError::ErrorPALOSUnsupported => nidaqmx_sys::DAQmxErrorPALOSUnsupported,
//           NidaqmxError::ErrorPALCalculationOverflow => nidaqmx_sys::DAQmxErrorPALCalculationOverflow,
//           NidaqmxError::ErrorPALHardwareFault => nidaqmx_sys::DAQmxErrorPALHardwareFault,
//           NidaqmxError::ErrorPALFirmwareFault => nidaqmx_sys::DAQmxErrorPALFirmwareFault,
//           NidaqmxError::ErrorPALSoftwareFault => nidaqmx_sys::DAQmxErrorPALSoftwareFault,
//           NidaqmxError::ErrorPALMessageQueueFull => nidaqmx_sys::DAQmxErrorPALMessageQueueFull,
//           NidaqmxError::ErrorPALResourceAmbiguous => nidaqmx_sys::DAQmxErrorPALResourceAmbiguous,
//           NidaqmxError::ErrorPALResourceBusy => nidaqmx_sys::DAQmxErrorPALResourceBusy,
//           NidaqmxError::ErrorPALResourceInitialized => nidaqmx_sys::DAQmxErrorPALResourceInitialized,
//           NidaqmxError::ErrorPALResourceNotInitialized => nidaqmx_sys::DAQmxErrorPALResourceNotInitialized,
//           NidaqmxError::ErrorPALResourceReserved => nidaqmx_sys::DAQmxErrorPALResourceReserved,
//           NidaqmxError::ErrorPALResourceNotReserved => nidaqmx_sys::DAQmxErrorPALResourceNotReserved,
//           NidaqmxError::ErrorPALResourceNotAvailable => nidaqmx_sys::DAQmxErrorPALResourceNotAvailable,
//           NidaqmxError::ErrorPALResourceOwnedBySystem => nidaqmx_sys::DAQmxErrorPALResourceOwnedBySystem,
//           NidaqmxError::ErrorPALBadToken => nidaqmx_sys::DAQmxErrorPALBadToken,
//           NidaqmxError::ErrorPALBadThreadMultitask => nidaqmx_sys::DAQmxErrorPALBadThreadMultitask,
//           NidaqmxError::ErrorPALBadLibrarySpecifier => nidaqmx_sys::DAQmxErrorPALBadLibrarySpecifier,
//           NidaqmxError::ErrorPALBadAddressSpace => nidaqmx_sys::DAQmxErrorPALBadAddressSpace,
//           NidaqmxError::ErrorPALBadWindowType => nidaqmx_sys::DAQmxErrorPALBadWindowType,
//           NidaqmxError::ErrorPALBadAddressClass => nidaqmx_sys::DAQmxErrorPALBadAddressClass,
//           NidaqmxError::ErrorPALBadWriteCount => nidaqmx_sys::DAQmxErrorPALBadWriteCount,
//           NidaqmxError::ErrorPALBadWriteOffset => nidaqmx_sys::DAQmxErrorPALBadWriteOffset,
//           NidaqmxError::ErrorPALBadWriteMode => nidaqmx_sys::DAQmxErrorPALBadWriteMode,
//           NidaqmxError::ErrorPALBadReadCount => nidaqmx_sys::DAQmxErrorPALBadReadCount,
//           NidaqmxError::ErrorPALBadReadOffset => nidaqmx_sys::DAQmxErrorPALBadReadOffset,
//           NidaqmxError::ErrorPALBadReadMode => nidaqmx_sys::DAQmxErrorPALBadReadMode,
//           NidaqmxError::ErrorPALBadCount => nidaqmx_sys::DAQmxErrorPALBadCount,
//           NidaqmxError::ErrorPALBadOffset => nidaqmx_sys::DAQmxErrorPALBadOffset,
//           NidaqmxError::ErrorPALBadMode => nidaqmx_sys::DAQmxErrorPALBadMode,
//           NidaqmxError::ErrorPALBadDataSize => nidaqmx_sys::DAQmxErrorPALBadDataSize,
//           NidaqmxError::ErrorPALBadPointer => nidaqmx_sys::DAQmxErrorPALBadPointer,
//           NidaqmxError::ErrorPALBadSelector => nidaqmx_sys::DAQmxErrorPALBadSelector,
//           NidaqmxError::ErrorPALBadDevice => nidaqmx_sys::DAQmxErrorPALBadDevice,
//           NidaqmxError::ErrorPALIrrelevantAttribute => nidaqmx_sys::DAQmxErrorPALIrrelevantAttribute,
//           NidaqmxError::ErrorPALValueConflict => nidaqmx_sys::DAQmxErrorPALValueConflict,
//        }
//         }
//     }

//     impl From<NidaqmxSuccess> for i32 {
//         fn from(ret: NidaqmxSuccess) -> Self {
//             match ret {
//           NidaqmxSuccess::Success => nidaqmx_sys::DAQmxSuccess,
//           NidaqmxSuccess::WarningTimestampCounterRolledOver => nidaqmx_sys::DAQmxWarningTimestampCounterRolledOver,
//           NidaqmxSuccess::WarningInputTerminationOverloaded => nidaqmx_sys::DAQmxWarningInputTerminationOverloaded,
//           NidaqmxSuccess::WarningADCOverloaded => nidaqmx_sys::DAQmxWarningADCOverloaded,
//           NidaqmxSuccess::WarningPLLUnlocked => nidaqmx_sys::DAQmxWarningPLLUnlocked,
//           NidaqmxSuccess::WarningCounter0DMADuringAIConflict => nidaqmx_sys::DAQmxWarningCounter0DMADuringAIConflict,
//           NidaqmxSuccess::WarningCounter1DMADuringAOConflict => nidaqmx_sys::DAQmxWarningCounter1DMADuringAOConflict,
//           NidaqmxSuccess::WarningStoppedBeforeDone => nidaqmx_sys::DAQmxWarningStoppedBeforeDone,
//           NidaqmxSuccess::WarningRateViolatesSettlingTime => nidaqmx_sys::DAQmxWarningRateViolatesSettlingTime,
//           NidaqmxSuccess::WarningRateViolatesMaxADCRate => nidaqmx_sys::DAQmxWarningRateViolatesMaxADCRate,
//           NidaqmxSuccess::WarningUserDefInfoStringTooLong => nidaqmx_sys::DAQmxWarningUserDefInfoStringTooLong,
//           NidaqmxSuccess::WarningTooManyInterruptsPerSecond => nidaqmx_sys::DAQmxWarningTooManyInterruptsPerSecond,
//           NidaqmxSuccess::WarningPotentialGlitchDuringWrite => nidaqmx_sys::DAQmxWarningPotentialGlitchDuringWrite,
//           NidaqmxSuccess::WarningDevNotSelfCalibratedWithDAQmx => nidaqmx_sys::DAQmxWarningDevNotSelfCalibratedWithDAQmx,
//           NidaqmxSuccess::WarningAISampRateTooLow => nidaqmx_sys::DAQmxWarningAISampRateTooLow,
//           NidaqmxSuccess::WarningAIConvRateTooLow => nidaqmx_sys::DAQmxWarningAIConvRateTooLow,
//           NidaqmxSuccess::WarningReadOffsetCoercion => nidaqmx_sys::DAQmxWarningReadOffsetCoercion,
//           NidaqmxSuccess::WarningPretrigCoercion => nidaqmx_sys::DAQmxWarningPretrigCoercion,
//           NidaqmxSuccess::WarningSampValCoercedToMax => nidaqmx_sys::DAQmxWarningSampValCoercedToMax,
//           NidaqmxSuccess::WarningSampValCoercedToMin => nidaqmx_sys::DAQmxWarningSampValCoercedToMin,
//           NidaqmxSuccess::WarningPropertyVersionNew => nidaqmx_sys::DAQmxWarningPropertyVersionNew,
//           NidaqmxSuccess::WarningUserDefinedInfoTooLong => nidaqmx_sys::DAQmxWarningUserDefinedInfoTooLong,
//           NidaqmxSuccess::WarningCAPIStringTruncatedToFitBuffer => nidaqmx_sys::DAQmxWarningCAPIStringTruncatedToFitBuffer,
//           NidaqmxSuccess::WarningSampClkRateTooLow => nidaqmx_sys::DAQmxWarningSampClkRateTooLow,
//           NidaqmxSuccess::WarningPossiblyInvalidCTRSampsInFiniteDMAAcq => nidaqmx_sys::DAQmxWarningPossiblyInvalidCTRSampsInFiniteDMAAcq,
//           NidaqmxSuccess::WarningRISAcqCompletedSomeBinsNotFilled => nidaqmx_sys::DAQmxWarningRISAcqCompletedSomeBinsNotFilled,
//           NidaqmxSuccess::WarningPXIDevTempExceedsMaxOpTemp => nidaqmx_sys::DAQmxWarningPXIDevTempExceedsMaxOpTemp,
//           NidaqmxSuccess::WarningOutputGainTooLowForRFFreq => nidaqmx_sys::DAQmxWarningOutputGainTooLowForRFFreq,
//           NidaqmxSuccess::WarningOutputGainTooHighForRFFreq => nidaqmx_sys::DAQmxWarningOutputGainTooHighForRFFreq,
//           NidaqmxSuccess::WarningMultipleWritesBetweenSampClks => nidaqmx_sys::DAQmxWarningMultipleWritesBetweenSampClks,
//           NidaqmxSuccess::WarningDeviceMayShutDownDueToHighTemp => nidaqmx_sys::DAQmxWarningDeviceMayShutDownDueToHighTemp,
//           NidaqmxSuccess::WarningRateViolatesMinADCRate => nidaqmx_sys::DAQmxWarningRateViolatesMinADCRate,
//           NidaqmxSuccess::WarningSampClkRateAboveDevSpecs => nidaqmx_sys::DAQmxWarningSampClkRateAboveDevSpecs,
//           NidaqmxSuccess::WarningCOPrevDAQmxWriteSettingsOverwrittenForHWTimedSinglePoint => nidaqmx_sys::DAQmxWarningCOPrevDAQmxWriteSettingsOverwrittenForHWTimedSinglePoint,
//           NidaqmxSuccess::WarningLowpassFilterSettlingTimeExceedsUserTimeBetween2ADCConversions => nidaqmx_sys::DAQmxWarningLowpassFilterSettlingTimeExceedsUserTimeBetween2ADCConversions,
//           NidaqmxSuccess::WarningLowpassFilterSettlingTimeExceedsDriverTimeBetween2ADCConversions => nidaqmx_sys::DAQmxWarningLowpassFilterSettlingTimeExceedsDriverTimeBetween2ADCConversions,
//           NidaqmxSuccess::WarningSampClkRateViolatesSettlingTimeForGen => nidaqmx_sys::DAQmxWarningSampClkRateViolatesSettlingTimeForGen,
//           NidaqmxSuccess::WarningInvalidCalConstValueForAI => nidaqmx_sys::DAQmxWarningInvalidCalConstValueForAI,
//           NidaqmxSuccess::WarningInvalidCalConstValueForAO => nidaqmx_sys::DAQmxWarningInvalidCalConstValueForAO,
//           NidaqmxSuccess::WarningChanCalExpired => nidaqmx_sys::DAQmxWarningChanCalExpired,
//           NidaqmxSuccess::WarningUnrecognizedEnumValueEncounteredInStorage => nidaqmx_sys::DAQmxWarningUnrecognizedEnumValueEncounteredInStorage,
//           NidaqmxSuccess::WarningTableCRCNotCorrect => nidaqmx_sys::DAQmxWarningTableCRCNotCorrect,
//           NidaqmxSuccess::WarningExternalCRCNotCorrect => nidaqmx_sys::DAQmxWarningExternalCRCNotCorrect,
//           NidaqmxSuccess::WarningSelfCalCRCNotCorrect => nidaqmx_sys::DAQmxWarningSelfCalCRCNotCorrect,
//           NidaqmxSuccess::WarningDeviceSpecExceeded => nidaqmx_sys::DAQmxWarningDeviceSpecExceeded,
//           NidaqmxSuccess::WarningOnlyGainCalibrated => nidaqmx_sys::DAQmxWarningOnlyGainCalibrated,
//           NidaqmxSuccess::WarningReversePowerProtectionActivated => nidaqmx_sys::DAQmxWarningReversePowerProtectionActivated,
//           NidaqmxSuccess::WarningOverVoltageProtectionActivated => nidaqmx_sys::DAQmxWarningOverVoltageProtectionActivated,
//           NidaqmxSuccess::WarningBufferSizeNotMultipleOfSectorSize => nidaqmx_sys::DAQmxWarningBufferSizeNotMultipleOfSectorSize,
//           NidaqmxSuccess::WarningSampleRateMayCauseAcqToFail => nidaqmx_sys::DAQmxWarningSampleRateMayCauseAcqToFail,
//           NidaqmxSuccess::WarningUserAreaCRCNotCorrect => nidaqmx_sys::DAQmxWarningUserAreaCRCNotCorrect,
//           NidaqmxSuccess::WarningPowerUpInfoCRCNotCorrect => nidaqmx_sys::DAQmxWarningPowerUpInfoCRCNotCorrect,
//           NidaqmxSuccess::WarningConnectionCountHasExceededRecommendedLimit => nidaqmx_sys::DAQmxWarningConnectionCountHasExceededRecommendedLimit,
//           NidaqmxSuccess::WarningNetworkDeviceAlreadyAdded => nidaqmx_sys::DAQmxWarningNetworkDeviceAlreadyAdded,
//           NidaqmxSuccess::WarningAccessoryConnectionCountIsInvalid => nidaqmx_sys::DAQmxWarningAccessoryConnectionCountIsInvalid,
//           NidaqmxSuccess::WarningUnableToDisconnectPorts => nidaqmx_sys::DAQmxWarningUnableToDisconnectPorts,
//           NidaqmxSuccess::WarningReadRepeatedData => nidaqmx_sys::DAQmxWarningReadRepeatedData,
//           NidaqmxSuccess::WarningPXI5600_NotConfigured => nidaqmx_sys::DAQmxWarningPXI5600_NotConfigured,
//           NidaqmxSuccess::WarningPXI5661_IncorrectlyConfigured => nidaqmx_sys::DAQmxWarningPXI5661_IncorrectlyConfigured,
//           NidaqmxSuccess::WarningPXIe5601_NotConfigured => nidaqmx_sys::DAQmxWarningPXIe5601_NotConfigured,
//           NidaqmxSuccess::WarningPXIe5663_IncorrectlyConfigured => nidaqmx_sys::DAQmxWarningPXIe5663_IncorrectlyConfigured,
//           NidaqmxSuccess::WarningPXIe5663E_IncorrectlyConfigured => nidaqmx_sys::DAQmxWarningPXIe5663E_IncorrectlyConfigured,
//           NidaqmxSuccess::WarningPXIe5603_NotConfigured => nidaqmx_sys::DAQmxWarningPXIe5603_NotConfigured,
//           NidaqmxSuccess::WarningPXIe5665_5603_IncorrectlyConfigured => nidaqmx_sys::DAQmxWarningPXIe5665_5603_IncorrectlyConfigured,
//           NidaqmxSuccess::WarningPXIe5667_5603_IncorrectlyConfigured => nidaqmx_sys::DAQmxWarningPXIe5667_5603_IncorrectlyConfigured,
//           NidaqmxSuccess::WarningPXIe5605_NotConfigured => nidaqmx_sys::DAQmxWarningPXIe5605_NotConfigured,
//           NidaqmxSuccess::WarningPXIe5665_5605_IncorrectlyConfigured => nidaqmx_sys::DAQmxWarningPXIe5665_5605_IncorrectlyConfigured,
//           NidaqmxSuccess::WarningPXIe5667_5605_IncorrectlyConfigured => nidaqmx_sys::DAQmxWarningPXIe5667_5605_IncorrectlyConfigured,
//           NidaqmxSuccess::WarningPXIe5606_NotConfigured => nidaqmx_sys::DAQmxWarningPXIe5606_NotConfigured,
//           NidaqmxSuccess::WarningPXIe5665_5606_IncorrectlyConfigured => nidaqmx_sys::DAQmxWarningPXIe5665_5606_IncorrectlyConfigured,
//           NidaqmxSuccess::WarningPXI5610_NotConfigured => nidaqmx_sys::DAQmxWarningPXI5610_NotConfigured,
//           NidaqmxSuccess::WarningPXI5610_IncorrectlyConfigured => nidaqmx_sys::DAQmxWarningPXI5610_IncorrectlyConfigured,
//           NidaqmxSuccess::WarningPXIe5611_NotConfigured => nidaqmx_sys::DAQmxWarningPXIe5611_NotConfigured,
//           NidaqmxSuccess::WarningPXIe5611_IncorrectlyConfigured => nidaqmx_sys::DAQmxWarningPXIe5611_IncorrectlyConfigured,
//           NidaqmxSuccess::WarningUSBHotfixForDAQ => nidaqmx_sys::DAQmxWarningUSBHotfixForDAQ,
//           NidaqmxSuccess::WarningNoChangeSupersededByIdleBehavior => nidaqmx_sys::DAQmxWarningNoChangeSupersededByIdleBehavior,
//           NidaqmxSuccess::WarningReadNotCompleteBeforeSampClk => nidaqmx_sys::DAQmxWarningReadNotCompleteBeforeSampClk,
//           NidaqmxSuccess::WarningWriteNotCompleteBeforeSampClk => nidaqmx_sys::DAQmxWarningWriteNotCompleteBeforeSampClk,
//           NidaqmxSuccess::WarningWaitForNextSampClkDetectedMissedSampClk => nidaqmx_sys::DAQmxWarningWaitForNextSampClkDetectedMissedSampClk,
//           NidaqmxSuccess::WarningOutputDataTransferConditionNotSupported => nidaqmx_sys::DAQmxWarningOutputDataTransferConditionNotSupported,
//           NidaqmxSuccess::WarningTimestampMayBeInvalid => nidaqmx_sys::DAQmxWarningTimestampMayBeInvalid,
//           NidaqmxSuccess::WarningFirstSampleTimestampInaccurate => nidaqmx_sys::DAQmxWarningFirstSampleTimestampInaccurate,
//           NidaqmxSuccess::WarningPALValueConflict => nidaqmx_sys::DAQmxWarningPALValueConflict,
//           NidaqmxSuccess::WarningPALIrrelevantAttribute => nidaqmx_sys::DAQmxWarningPALIrrelevantAttribute,
//           NidaqmxSuccess::WarningPALBadDevice => nidaqmx_sys::DAQmxWarningPALBadDevice,
//           NidaqmxSuccess::WarningPALBadSelector => nidaqmx_sys::DAQmxWarningPALBadSelector,
//           NidaqmxSuccess::WarningPALBadPointer => nidaqmx_sys::DAQmxWarningPALBadPointer,
//           NidaqmxSuccess::WarningPALBadDataSize => nidaqmx_sys::DAQmxWarningPALBadDataSize,
//           NidaqmxSuccess::WarningPALBadMode => nidaqmx_sys::DAQmxWarningPALBadMode,
//           NidaqmxSuccess::WarningPALBadOffset => nidaqmx_sys::DAQmxWarningPALBadOffset,
//           NidaqmxSuccess::WarningPALBadCount => nidaqmx_sys::DAQmxWarningPALBadCount,
//           NidaqmxSuccess::WarningPALBadReadMode => nidaqmx_sys::DAQmxWarningPALBadReadMode,
//           NidaqmxSuccess::WarningPALBadReadOffset => nidaqmx_sys::DAQmxWarningPALBadReadOffset,
//           NidaqmxSuccess::WarningPALBadReadCount => nidaqmx_sys::DAQmxWarningPALBadReadCount,
//           NidaqmxSuccess::WarningPALBadWriteMode => nidaqmx_sys::DAQmxWarningPALBadWriteMode,
//           NidaqmxSuccess::WarningPALBadWriteOffset => nidaqmx_sys::DAQmxWarningPALBadWriteOffset,
//           NidaqmxSuccess::WarningPALBadWriteCount => nidaqmx_sys::DAQmxWarningPALBadWriteCount,
//           NidaqmxSuccess::WarningPALBadAddressClass => nidaqmx_sys::DAQmxWarningPALBadAddressClass,
//           NidaqmxSuccess::WarningPALBadWindowType => nidaqmx_sys::DAQmxWarningPALBadWindowType,
//           NidaqmxSuccess::WarningPALBadThreadMultitask => nidaqmx_sys::DAQmxWarningPALBadThreadMultitask,
//           NidaqmxSuccess::WarningPALResourceOwnedBySystem => nidaqmx_sys::DAQmxWarningPALResourceOwnedBySystem,
//           NidaqmxSuccess::WarningPALResourceNotAvailable => nidaqmx_sys::DAQmxWarningPALResourceNotAvailable,
//           NidaqmxSuccess::WarningPALResourceNotReserved => nidaqmx_sys::DAQmxWarningPALResourceNotReserved,
//           NidaqmxSuccess::WarningPALResourceReserved => nidaqmx_sys::DAQmxWarningPALResourceReserved,
//           NidaqmxSuccess::WarningPALResourceNotInitialized => nidaqmx_sys::DAQmxWarningPALResourceNotInitialized,
//           NidaqmxSuccess::WarningPALResourceInitialized => nidaqmx_sys::DAQmxWarningPALResourceInitialized,
//           NidaqmxSuccess::WarningPALResourceBusy => nidaqmx_sys::DAQmxWarningPALResourceBusy,
//           NidaqmxSuccess::WarningPALResourceAmbiguous => nidaqmx_sys::DAQmxWarningPALResourceAmbiguous,
//           NidaqmxSuccess::WarningPALFirmwareFault => nidaqmx_sys::DAQmxWarningPALFirmwareFault,
//           NidaqmxSuccess::WarningPALHardwareFault => nidaqmx_sys::DAQmxWarningPALHardwareFault,
//           NidaqmxSuccess::WarningPALOSUnsupported => nidaqmx_sys::DAQmxWarningPALOSUnsupported,
//           NidaqmxSuccess::WarningPALOSFault => nidaqmx_sys::DAQmxWarningPALOSFault,
//           NidaqmxSuccess::WarningPALFunctionObsolete => nidaqmx_sys::DAQmxWarningPALFunctionObsolete,
//           NidaqmxSuccess::WarningPALFunctionNotFound => nidaqmx_sys::DAQmxWarningPALFunctionNotFound,
//           NidaqmxSuccess::WarningPALFeatureNotSupported => nidaqmx_sys::DAQmxWarningPALFeatureNotSupported,
//           NidaqmxSuccess::WarningPALComponentInitializationFault => nidaqmx_sys::DAQmxWarningPALComponentInitializationFault,
//           NidaqmxSuccess::WarningPALComponentAlreadyLoaded => nidaqmx_sys::DAQmxWarningPALComponentAlreadyLoaded,
//           NidaqmxSuccess::WarningPALComponentNotUnloadable => nidaqmx_sys::DAQmxWarningPALComponentNotUnloadable,
//           NidaqmxSuccess::WarningPALMemoryAlignmentFault => nidaqmx_sys::DAQmxWarningPALMemoryAlignmentFault,
//           NidaqmxSuccess::WarningPALMemoryHeapNotEmpty => nidaqmx_sys::DAQmxWarningPALMemoryHeapNotEmpty,
//           NidaqmxSuccess::WarningPALTransferNotInProgress => nidaqmx_sys::DAQmxWarningPALTransferNotInProgress,
//           NidaqmxSuccess::WarningPALTransferInProgress => nidaqmx_sys::DAQmxWarningPALTransferInProgress,
//           NidaqmxSuccess::WarningPALTransferStopped => nidaqmx_sys::DAQmxWarningPALTransferStopped,
//           NidaqmxSuccess::WarningPALTransferAborted => nidaqmx_sys::DAQmxWarningPALTransferAborted,
//           NidaqmxSuccess::WarningPALLogicalBufferEmpty => nidaqmx_sys::DAQmxWarningPALLogicalBufferEmpty,
//           NidaqmxSuccess::WarningPALLogicalBufferFull => nidaqmx_sys::DAQmxWarningPALLogicalBufferFull,
//           NidaqmxSuccess::WarningPALPhysicalBufferEmpty => nidaqmx_sys::DAQmxWarningPALPhysicalBufferEmpty,
//           NidaqmxSuccess::WarningPALPhysicalBufferFull => nidaqmx_sys::DAQmxWarningPALPhysicalBufferFull,
//           NidaqmxSuccess::WarningPALTransferOverwritten => nidaqmx_sys::DAQmxWarningPALTransferOverwritten,
//           NidaqmxSuccess::WarningPALTransferOverread => nidaqmx_sys::DAQmxWarningPALTransferOverread,
//           NidaqmxSuccess::WarningPALDispatcherAlreadyExported => nidaqmx_sys::DAQmxWarningPALDispatcherAlreadyExported,
//           NidaqmxSuccess::WarningPALSyncAbandoned => nidaqmx_sys::DAQmxWarningPALSyncAbandoned,
//          }
//         }
//     }

//     #[derive(Clone, Debug, PartialEq, EnumIter, FromRepr, Display)]
//     #[repr(i32)]
//     #[strum()]
//     pub enum NidaqmxSuccess {
//         Success = nidaqmx_sys::DAQmxSuccess,
//         WarningTimestampCounterRolledOver = nidaqmx_sys::DAQmxWarningTimestampCounterRolledOver,
//         WarningInputTerminationOverloaded = nidaqmx_sys::DAQmxWarningInputTerminationOverloaded,
//         WarningADCOverloaded = nidaqmx_sys::DAQmxWarningADCOverloaded,
//         WarningPLLUnlocked = nidaqmx_sys::DAQmxWarningPLLUnlocked,
//         WarningCounter0DMADuringAIConflict = nidaqmx_sys::DAQmxWarningCounter0DMADuringAIConflict,
//         WarningCounter1DMADuringAOConflict = nidaqmx_sys::DAQmxWarningCounter1DMADuringAOConflict,
//         WarningStoppedBeforeDone = nidaqmx_sys::DAQmxWarningStoppedBeforeDone,
//         WarningRateViolatesSettlingTime = nidaqmx_sys::DAQmxWarningRateViolatesSettlingTime,
//         WarningRateViolatesMaxADCRate = nidaqmx_sys::DAQmxWarningRateViolatesMaxADCRate,
//         WarningUserDefInfoStringTooLong = nidaqmx_sys::DAQmxWarningUserDefInfoStringTooLong,
//         WarningTooManyInterruptsPerSecond = nidaqmx_sys::DAQmxWarningTooManyInterruptsPerSecond,
//         WarningPotentialGlitchDuringWrite = nidaqmx_sys::DAQmxWarningPotentialGlitchDuringWrite,
//         WarningDevNotSelfCalibratedWithDAQmx =
//             nidaqmx_sys::DAQmxWarningDevNotSelfCalibratedWithDAQmx,
//         WarningAISampRateTooLow = nidaqmx_sys::DAQmxWarningAISampRateTooLow,
//         WarningAIConvRateTooLow = nidaqmx_sys::DAQmxWarningAIConvRateTooLow,
//         WarningReadOffsetCoercion = nidaqmx_sys::DAQmxWarningReadOffsetCoercion,
//         WarningPretrigCoercion = nidaqmx_sys::DAQmxWarningPretrigCoercion,
//         WarningSampValCoercedToMax = nidaqmx_sys::DAQmxWarningSampValCoercedToMax,
//         WarningSampValCoercedToMin = nidaqmx_sys::DAQmxWarningSampValCoercedToMin,
//         WarningPropertyVersionNew = nidaqmx_sys::DAQmxWarningPropertyVersionNew,
//         WarningUserDefinedInfoTooLong = nidaqmx_sys::DAQmxWarningUserDefinedInfoTooLong,
//         WarningCAPIStringTruncatedToFitBuffer =
//             nidaqmx_sys::DAQmxWarningCAPIStringTruncatedToFitBuffer,
//         WarningSampClkRateTooLow = nidaqmx_sys::DAQmxWarningSampClkRateTooLow,
//         WarningPossiblyInvalidCTRSampsInFiniteDMAAcq =
//             nidaqmx_sys::DAQmxWarningPossiblyInvalidCTRSampsInFiniteDMAAcq,
//         WarningRISAcqCompletedSomeBinsNotFilled =
//             nidaqmx_sys::DAQmxWarningRISAcqCompletedSomeBinsNotFilled,
//         WarningPXIDevTempExceedsMaxOpTemp = nidaqmx_sys::DAQmxWarningPXIDevTempExceedsMaxOpTemp,
//         WarningOutputGainTooLowForRFFreq = nidaqmx_sys::DAQmxWarningOutputGainTooLowForRFFreq,
//         WarningOutputGainTooHighForRFFreq = nidaqmx_sys::DAQmxWarningOutputGainTooHighForRFFreq,
//         WarningMultipleWritesBetweenSampClks =
//             nidaqmx_sys::DAQmxWarningMultipleWritesBetweenSampClks,
//         WarningDeviceMayShutDownDueToHighTemp =
//             nidaqmx_sys::DAQmxWarningDeviceMayShutDownDueToHighTemp,
//         WarningRateViolatesMinADCRate = nidaqmx_sys::DAQmxWarningRateViolatesMinADCRate,
//         WarningSampClkRateAboveDevSpecs = nidaqmx_sys::DAQmxWarningSampClkRateAboveDevSpecs,
//         WarningCOPrevDAQmxWriteSettingsOverwrittenForHWTimedSinglePoint =
//             nidaqmx_sys::DAQmxWarningCOPrevDAQmxWriteSettingsOverwrittenForHWTimedSinglePoint,
//         WarningLowpassFilterSettlingTimeExceedsUserTimeBetween2ADCConversions =
//             nidaqmx_sys::DAQmxWarningLowpassFilterSettlingTimeExceedsUserTimeBetween2ADCConversions,
//         WarningLowpassFilterSettlingTimeExceedsDriverTimeBetween2ADCConversions = nidaqmx_sys::DAQmxWarningLowpassFilterSettlingTimeExceedsDriverTimeBetween2ADCConversions,
//         WarningSampClkRateViolatesSettlingTimeForGen =
//             nidaqmx_sys::DAQmxWarningSampClkRateViolatesSettlingTimeForGen,
//         WarningInvalidCalConstValueForAI = nidaqmx_sys::DAQmxWarningInvalidCalConstValueForAI,
//         WarningInvalidCalConstValueForAO = nidaqmx_sys::DAQmxWarningInvalidCalConstValueForAO,
//         WarningChanCalExpired = nidaqmx_sys::DAQmxWarningChanCalExpired,
//         WarningUnrecognizedEnumValueEncounteredInStorage =
//             nidaqmx_sys::DAQmxWarningUnrecognizedEnumValueEncounteredInStorage,
//         WarningTableCRCNotCorrect = nidaqmx_sys::DAQmxWarningTableCRCNotCorrect,
//         WarningExternalCRCNotCorrect = nidaqmx_sys::DAQmxWarningExternalCRCNotCorrect,
//         WarningSelfCalCRCNotCorrect = nidaqmx_sys::DAQmxWarningSelfCalCRCNotCorrect,
//         WarningDeviceSpecExceeded = nidaqmx_sys::DAQmxWarningDeviceSpecExceeded,
//         WarningOnlyGainCalibrated = nidaqmx_sys::DAQmxWarningOnlyGainCalibrated,
//         WarningReversePowerProtectionActivated =
//             nidaqmx_sys::DAQmxWarningReversePowerProtectionActivated,
//         WarningOverVoltageProtectionActivated =
//             nidaqmx_sys::DAQmxWarningOverVoltageProtectionActivated,
//         WarningBufferSizeNotMultipleOfSectorSize =
//             nidaqmx_sys::DAQmxWarningBufferSizeNotMultipleOfSectorSize,
//         WarningSampleRateMayCauseAcqToFail = nidaqmx_sys::DAQmxWarningSampleRateMayCauseAcqToFail,
//         WarningUserAreaCRCNotCorrect = nidaqmx_sys::DAQmxWarningUserAreaCRCNotCorrect,
//         WarningPowerUpInfoCRCNotCorrect = nidaqmx_sys::DAQmxWarningPowerUpInfoCRCNotCorrect,
//         WarningConnectionCountHasExceededRecommendedLimit =
//             nidaqmx_sys::DAQmxWarningConnectionCountHasExceededRecommendedLimit,
//         WarningNetworkDeviceAlreadyAdded = nidaqmx_sys::DAQmxWarningNetworkDeviceAlreadyAdded,
//         WarningAccessoryConnectionCountIsInvalid =
//             nidaqmx_sys::DAQmxWarningAccessoryConnectionCountIsInvalid,
//         WarningUnableToDisconnectPorts = nidaqmx_sys::DAQmxWarningUnableToDisconnectPorts,
//         WarningReadRepeatedData = nidaqmx_sys::DAQmxWarningReadRepeatedData,
//         WarningPXI5600_NotConfigured = nidaqmx_sys::DAQmxWarningPXI5600_NotConfigured,
//         WarningPXI5661_IncorrectlyConfigured =
//             nidaqmx_sys::DAQmxWarningPXI5661_IncorrectlyConfigured,
//         WarningPXIe5601_NotConfigured = nidaqmx_sys::DAQmxWarningPXIe5601_NotConfigured,
//         WarningPXIe5663_IncorrectlyConfigured =
//             nidaqmx_sys::DAQmxWarningPXIe5663_IncorrectlyConfigured,
//         WarningPXIe5663E_IncorrectlyConfigured =
//             nidaqmx_sys::DAQmxWarningPXIe5663E_IncorrectlyConfigured,
//         WarningPXIe5603_NotConfigured = nidaqmx_sys::DAQmxWarningPXIe5603_NotConfigured,
//         WarningPXIe5665_5603_IncorrectlyConfigured =
//             nidaqmx_sys::DAQmxWarningPXIe5665_5603_IncorrectlyConfigured,
//         WarningPXIe5667_5603_IncorrectlyConfigured =
//             nidaqmx_sys::DAQmxWarningPXIe5667_5603_IncorrectlyConfigured,
//         WarningPXIe5605_NotConfigured = nidaqmx_sys::DAQmxWarningPXIe5605_NotConfigured,
//         WarningPXIe5665_5605_IncorrectlyConfigured =
//             nidaqmx_sys::DAQmxWarningPXIe5665_5605_IncorrectlyConfigured,
//         WarningPXIe5667_5605_IncorrectlyConfigured =
//             nidaqmx_sys::DAQmxWarningPXIe5667_5605_IncorrectlyConfigured,
//         WarningPXIe5606_NotConfigured = nidaqmx_sys::DAQmxWarningPXIe5606_NotConfigured,
//         WarningPXIe5665_5606_IncorrectlyConfigured =
//             nidaqmx_sys::DAQmxWarningPXIe5665_5606_IncorrectlyConfigured,
//         WarningPXI5610_NotConfigured = nidaqmx_sys::DAQmxWarningPXI5610_NotConfigured,
//         WarningPXI5610_IncorrectlyConfigured =
//             nidaqmx_sys::DAQmxWarningPXI5610_IncorrectlyConfigured,
//         WarningPXIe5611_NotConfigured = nidaqmx_sys::DAQmxWarningPXIe5611_NotConfigured,
//         WarningPXIe5611_IncorrectlyConfigured =
//             nidaqmx_sys::DAQmxWarningPXIe5611_IncorrectlyConfigured,
//         WarningUSBHotfixForDAQ = nidaqmx_sys::DAQmxWarningUSBHotfixForDAQ,
//         WarningNoChangeSupersededByIdleBehavior =
//             nidaqmx_sys::DAQmxWarningNoChangeSupersededByIdleBehavior,
//         WarningReadNotCompleteBeforeSampClk = nidaqmx_sys::DAQmxWarningReadNotCompleteBeforeSampClk,
//         WarningWriteNotCompleteBeforeSampClk =
//             nidaqmx_sys::DAQmxWarningWriteNotCompleteBeforeSampClk,
//         WarningWaitForNextSampClkDetectedMissedSampClk =
//             nidaqmx_sys::DAQmxWarningWaitForNextSampClkDetectedMissedSampClk,
//         WarningOutputDataTransferConditionNotSupported =
//             nidaqmx_sys::DAQmxWarningOutputDataTransferConditionNotSupported,
//         WarningTimestampMayBeInvalid = nidaqmx_sys::DAQmxWarningTimestampMayBeInvalid,
//         WarningFirstSampleTimestampInaccurate =
//             nidaqmx_sys::DAQmxWarningFirstSampleTimestampInaccurate,
//         WarningPALValueConflict = nidaqmx_sys::DAQmxWarningPALValueConflict,
//         WarningPALIrrelevantAttribute = nidaqmx_sys::DAQmxWarningPALIrrelevantAttribute,
//         WarningPALBadDevice = nidaqmx_sys::DAQmxWarningPALBadDevice,
//         WarningPALBadSelector = nidaqmx_sys::DAQmxWarningPALBadSelector,
//         WarningPALBadPointer = nidaqmx_sys::DAQmxWarningPALBadPointer,
//         WarningPALBadDataSize = nidaqmx_sys::DAQmxWarningPALBadDataSize,
//         WarningPALBadMode = nidaqmx_sys::DAQmxWarningPALBadMode,
//         WarningPALBadOffset = nidaqmx_sys::DAQmxWarningPALBadOffset,
//         WarningPALBadCount = nidaqmx_sys::DAQmxWarningPALBadCount,
//         WarningPALBadReadMode = nidaqmx_sys::DAQmxWarningPALBadReadMode,
//         WarningPALBadReadOffset = nidaqmx_sys::DAQmxWarningPALBadReadOffset,
//         WarningPALBadReadCount = nidaqmx_sys::DAQmxWarningPALBadReadCount,
//         WarningPALBadWriteMode = nidaqmx_sys::DAQmxWarningPALBadWriteMode,
//         WarningPALBadWriteOffset = nidaqmx_sys::DAQmxWarningPALBadWriteOffset,
//         WarningPALBadWriteCount = nidaqmx_sys::DAQmxWarningPALBadWriteCount,
//         WarningPALBadAddressClass = nidaqmx_sys::DAQmxWarningPALBadAddressClass,
//         WarningPALBadWindowType = nidaqmx_sys::DAQmxWarningPALBadWindowType,
//         WarningPALBadThreadMultitask = nidaqmx_sys::DAQmxWarningPALBadThreadMultitask,
//         WarningPALResourceOwnedBySystem = nidaqmx_sys::DAQmxWarningPALResourceOwnedBySystem,
//         WarningPALResourceNotAvailable = nidaqmx_sys::DAQmxWarningPALResourceNotAvailable,
//         WarningPALResourceNotReserved = nidaqmx_sys::DAQmxWarningPALResourceNotReserved,
//         WarningPALResourceReserved = nidaqmx_sys::DAQmxWarningPALResourceReserved,
//         WarningPALResourceNotInitialized = nidaqmx_sys::DAQmxWarningPALResourceNotInitialized,
//         WarningPALResourceInitialized = nidaqmx_sys::DAQmxWarningPALResourceInitialized,
//         WarningPALResourceBusy = nidaqmx_sys::DAQmxWarningPALResourceBusy,
//         WarningPALResourceAmbiguous = nidaqmx_sys::DAQmxWarningPALResourceAmbiguous,
//         WarningPALFirmwareFault = nidaqmx_sys::DAQmxWarningPALFirmwareFault,
//         WarningPALHardwareFault = nidaqmx_sys::DAQmxWarningPALHardwareFault,
//         WarningPALOSUnsupported = nidaqmx_sys::DAQmxWarningPALOSUnsupported,
//         WarningPALOSFault = nidaqmx_sys::DAQmxWarningPALOSFault,
//         WarningPALFunctionObsolete = nidaqmx_sys::DAQmxWarningPALFunctionObsolete,
//         WarningPALFunctionNotFound = nidaqmx_sys::DAQmxWarningPALFunctionNotFound,
//         WarningPALFeatureNotSupported = nidaqmx_sys::DAQmxWarningPALFeatureNotSupported,
//         WarningPALComponentInitializationFault =
//             nidaqmx_sys::DAQmxWarningPALComponentInitializationFault,
//         WarningPALComponentAlreadyLoaded = nidaqmx_sys::DAQmxWarningPALComponentAlreadyLoaded,
//         WarningPALComponentNotUnloadable = nidaqmx_sys::DAQmxWarningPALComponentNotUnloadable,
//         WarningPALMemoryAlignmentFault = nidaqmx_sys::DAQmxWarningPALMemoryAlignmentFault,
//         WarningPALMemoryHeapNotEmpty = nidaqmx_sys::DAQmxWarningPALMemoryHeapNotEmpty,
//         WarningPALTransferNotInProgress = nidaqmx_sys::DAQmxWarningPALTransferNotInProgress,
//         WarningPALTransferInProgress = nidaqmx_sys::DAQmxWarningPALTransferInProgress,
//         WarningPALTransferStopped = nidaqmx_sys::DAQmxWarningPALTransferStopped,
//         WarningPALTransferAborted = nidaqmx_sys::DAQmxWarningPALTransferAborted,
//         WarningPALLogicalBufferEmpty = nidaqmx_sys::DAQmxWarningPALLogicalBufferEmpty,
//         WarningPALLogicalBufferFull = nidaqmx_sys::DAQmxWarningPALLogicalBufferFull,
//         WarningPALPhysicalBufferEmpty = nidaqmx_sys::DAQmxWarningPALPhysicalBufferEmpty,
//         WarningPALPhysicalBufferFull = nidaqmx_sys::DAQmxWarningPALPhysicalBufferFull,
//         WarningPALTransferOverwritten = nidaqmx_sys::DAQmxWarningPALTransferOverwritten,
//         WarningPALTransferOverread = nidaqmx_sys::DAQmxWarningPALTransferOverread,
//         WarningPALDispatcherAlreadyExported = nidaqmx_sys::DAQmxWarningPALDispatcherAlreadyExported,
//         WarningPALSyncAbandoned = nidaqmx_sys::DAQmxWarningPALSyncAbandoned,
//     }

//     #[derive(Clone, Debug, EnumIter, FromRepr, Display)]
//     #[repr(i32)]
//     #[strum()]
//     pub enum NidaqmxError {
//         ErrorMultiTaskCfgSampRateNotSupportedWithPropSet =
//             nidaqmx_sys::DAQmxErrorMultiTaskCfgSampRateNotSupportedWithPropSet,
//         ErrorMultiTaskCfgSampRateConflictingProp =
//             nidaqmx_sys::DAQmxErrorMultiTaskCfgSampRateConflictingProp,
//         ErrorNoCommonSampRateFoundNoRepeatSamps =
//             nidaqmx_sys::DAQmxErrorNoCommonSampRateFoundNoRepeatSamps,
//         ErrorNoCommonSampRateFound = nidaqmx_sys::DAQmxErrorNoCommonSampRateFound,
//         ErrorMultiTaskCfgDoesNotSupportMultiDevTask =
//             nidaqmx_sys::DAQmxErrorMultiTaskCfgDoesNotSupportMultiDevTask,
//         ErrorMultiTaskSampRateCfgNotSupported =
//             nidaqmx_sys::DAQmxErrorMultiTaskSampRateCfgNotSupported,
//         ErrorDebugSessionNotAllowedTimingSourceRegistered =
//             nidaqmx_sys::DAQmxErrorDebugSessionNotAllowedTimingSourceRegistered,
//         ErrorDebugSessionNotAllowedWhenLogging =
//             nidaqmx_sys::DAQmxErrorDebugSessionNotAllowedWhenLogging,
//         ErrorDebugSessionNotAllowedEventRegistered =
//             nidaqmx_sys::DAQmxErrorDebugSessionNotAllowedEventRegistered,
//         ErrorInvalidTargetTaskForDebugSession =
//             nidaqmx_sys::DAQmxErrorInvalidTargetTaskForDebugSession,
//         ErrorFunctionNotSupportedForDevice = nidaqmx_sys::DAQmxErrorFunctionNotSupportedForDevice,
//         ErrorMultipleTargetTasksFoundForDebugSession =
//             nidaqmx_sys::DAQmxErrorMultipleTargetTasksFoundForDebugSession,
//         ErrorTargetTaskNotFoundForDebugSession =
//             nidaqmx_sys::DAQmxErrorTargetTaskNotFoundForDebugSession,
//         ErrorOperationNotSupportedInDebugSession =
//             nidaqmx_sys::DAQmxErrorOperationNotSupportedInDebugSession,
//         ErrorOperationNotPermittedInMonitorModeForDebugSession =
//             nidaqmx_sys::DAQmxErrorOperationNotPermittedInMonitorModeForDebugSession,
//         ErrorGetActiveDevPrptyFailedDueToDifftVals =
//             nidaqmx_sys::DAQmxErrorGetActiveDevPrptyFailedDueToDifftVals,
//         ErrorTaskAlreadyRegisteredATimingSource =
//             nidaqmx_sys::DAQmxErrorTaskAlreadyRegisteredATimingSource,
//         ErrorFilterNotSupportedOnHWRev = nidaqmx_sys::DAQmxErrorFilterNotSupportedOnHWRev,
//         ErrorSensorPowerSupplyVoltageLevel = nidaqmx_sys::DAQmxErrorSensorPowerSupplyVoltageLevel,
//         ErrorSensorPowerSupply = nidaqmx_sys::DAQmxErrorSensorPowerSupply,
//         ErrorInvalidScanlist = nidaqmx_sys::DAQmxErrorInvalidScanlist,
//         ErrorTimeResourceCannotBeRouted = nidaqmx_sys::DAQmxErrorTimeResourceCannotBeRouted,
//         ErrorInvalidResetDelayRequested = nidaqmx_sys::DAQmxErrorInvalidResetDelayRequested,
//         ErrorExceededTotalTimetriggersAvailable =
//             nidaqmx_sys::DAQmxErrorExceededTotalTimetriggersAvailable,
//         ErrorExceededTotalTimestampsAvailable =
//             nidaqmx_sys::DAQmxErrorExceededTotalTimestampsAvailable,
//         ErrorNoSynchronizationProtocolRunning =
//             nidaqmx_sys::DAQmxErrorNoSynchronizationProtocolRunning,
//         ErrorConflictingCoherencyRequirements =
//             nidaqmx_sys::DAQmxErrorConflictingCoherencyRequirements,
//         ErrorNoSharedTimescale = nidaqmx_sys::DAQmxErrorNoSharedTimescale,
//         ErrorInvalidFieldDAQBankName = nidaqmx_sys::DAQmxErrorInvalidFieldDAQBankName,
//         ErrorDeviceDoesNotSupportHWTSP = nidaqmx_sys::DAQmxErrorDeviceDoesNotSupportHWTSP,
//         ErrorBankTypeDoesNotMatchBankTypeInDestination =
//             nidaqmx_sys::DAQmxErrorBankTypeDoesNotMatchBankTypeInDestination,
//         ErrorInvalidFieldDAQBankNumberSpecd = nidaqmx_sys::DAQmxErrorInvalidFieldDAQBankNumberSpecd,
//         ErrorUnsupportedSimulatedBankForSimulatedFieldDAQ =
//             nidaqmx_sys::DAQmxErrorUnsupportedSimulatedBankForSimulatedFieldDAQ,
//         ErrorFieldDAQBankSimMustMatchFieldDAQSim =
//             nidaqmx_sys::DAQmxErrorFieldDAQBankSimMustMatchFieldDAQSim,
//         ErrorDevNoLongerSupportedWithinDAQmxAPI =
//             nidaqmx_sys::DAQmxErrorDevNoLongerSupportedWithinDAQmxAPI,
//         ErrorTimingEngineDoesNotSupportOnBoardMemory =
//             nidaqmx_sys::DAQmxErrorTimingEngineDoesNotSupportOnBoardMemory,
//         ErrorDuplicateTaskCrossProject = nidaqmx_sys::DAQmxErrorDuplicateTaskCrossProject,
//         ErrorTimeStartTriggerBeforeArmStartTrigger =
//             nidaqmx_sys::DAQmxErrorTimeStartTriggerBeforeArmStartTrigger,
//         ErrorTimeTriggerCannotBeSet = nidaqmx_sys::DAQmxErrorTimeTriggerCannotBeSet,
//         ErrorInvalidTriggerWindowValue = nidaqmx_sys::DAQmxErrorInvalidTriggerWindowValue,
//         ErrorCannotQueryPropertyBeforeOrDuringAcquisition =
//             nidaqmx_sys::DAQmxErrorCannotQueryPropertyBeforeOrDuringAcquisition,
//         ErrorSampleClockTimebaseNotSupported =
//             nidaqmx_sys::DAQmxErrorSampleClockTimebaseNotSupported,
//         ErrorTimestampNotYetReceived = nidaqmx_sys::DAQmxErrorTimestampNotYetReceived,
//         ErrorTimeTriggerNotSupported = nidaqmx_sys::DAQmxErrorTimeTriggerNotSupported,
//         ErrorTimestampNotEnabled = nidaqmx_sys::DAQmxErrorTimestampNotEnabled,
//         ErrorTimeTriggersInconsistent = nidaqmx_sys::DAQmxErrorTimeTriggersInconsistent,
//         ErrorTriggerConfiguredIsInThePast = nidaqmx_sys::DAQmxErrorTriggerConfiguredIsInThePast,
//         ErrorTriggerConfiguredIsTooFarFromCurrentTime =
//             nidaqmx_sys::DAQmxErrorTriggerConfiguredIsTooFarFromCurrentTime,
//         ErrorSynchronizationLockLost = nidaqmx_sys::DAQmxErrorSynchronizationLockLost,
//         ErrorInconsistentTimescales = nidaqmx_sys::DAQmxErrorInconsistentTimescales,
//         ErrorCannotSynchronizeDevices = nidaqmx_sys::DAQmxErrorCannotSynchronizeDevices,
//         ErrorAssociatedChansHaveAttributeConflictWithMultipleMaxMinRanges =
//             nidaqmx_sys::DAQmxErrorAssociatedChansHaveAttributeConflictWithMultipleMaxMinRanges,
//         ErrorSampleRateNumChansOrAttributeValues =
//             nidaqmx_sys::DAQmxErrorSampleRateNumChansOrAttributeValues,
//         ErrorWaitForValidTimestampNotSupported =
//             nidaqmx_sys::DAQmxErrorWaitForValidTimestampNotSupported,
//         ErrorTrigWinTimeoutExpired = nidaqmx_sys::DAQmxErrorTrigWinTimeoutExpired,
//         ErrorInvalidTriggerCfgForDevice = nidaqmx_sys::DAQmxErrorInvalidTriggerCfgForDevice,
//         ErrorInvalidDataTransferMechanismForDevice =
//             nidaqmx_sys::DAQmxErrorInvalidDataTransferMechanismForDevice,
//         ErrorInputFIFOOverflow3 = nidaqmx_sys::DAQmxErrorInputFIFOOverflow3,
//         ErrorTooManyDevicesForAnalogMultiEdgeTrigCDAQ =
//             nidaqmx_sys::DAQmxErrorTooManyDevicesForAnalogMultiEdgeTrigCDAQ,
//         ErrorTooManyTriggersTypesSpecifiedInTask =
//             nidaqmx_sys::DAQmxErrorTooManyTriggersTypesSpecifiedInTask,
//         ErrorMismatchedMultiTriggerConfigValues =
//             nidaqmx_sys::DAQmxErrorMismatchedMultiTriggerConfigValues,
//         ErrorInconsistentAODACRangeAcrossTasks =
//             nidaqmx_sys::DAQmxErrorInconsistentAODACRangeAcrossTasks,
//         ErrorInconsistentDTToWrite = nidaqmx_sys::DAQmxErrorInconsistentDTToWrite,
//         ErrorFunctionObsolete = nidaqmx_sys::DAQmxErrorFunctionObsolete,
//         ErrorNegativeDurationNotSupported = nidaqmx_sys::DAQmxErrorNegativeDurationNotSupported,
//         ErrorDurationTooSmall = nidaqmx_sys::DAQmxErrorDurationTooSmall,
//         ErrorDurationTooLong = nidaqmx_sys::DAQmxErrorDurationTooLong,
//         ErrorDurationBasedNotSupportedForSpecifiedTimingMode =
//             nidaqmx_sys::DAQmxErrorDurationBasedNotSupportedForSpecifiedTimingMode,
//         ErrorInvalidLEDState = nidaqmx_sys::DAQmxErrorInvalidLEDState,
//         ErrorWatchdogStatesNotUniform = nidaqmx_sys::DAQmxErrorWatchdogStatesNotUniform,
//         ErrorSelfTestFailedPowerSupplyOutOfTolerance =
//             nidaqmx_sys::DAQmxErrorSelfTestFailedPowerSupplyOutOfTolerance,
//         ErrorHWTSPMultiSampleWrite = nidaqmx_sys::DAQmxErrorHWTSPMultiSampleWrite,
//         ErrorOnboardRegenExceedsChannelLimit =
//             nidaqmx_sys::DAQmxErrorOnboardRegenExceedsChannelLimit,
//         ErrorWatchdogChannelExpirationStateNotSpecified =
//             nidaqmx_sys::DAQmxErrorWatchdogChannelExpirationStateNotSpecified,
//         ErrorInvalidShuntSourceForCalibration =
//             nidaqmx_sys::DAQmxErrorInvalidShuntSourceForCalibration,
//         ErrorInvalidShuntSelectForCalibration =
//             nidaqmx_sys::DAQmxErrorInvalidShuntSelectForCalibration,
//         ErrorInvalidShuntCalibrationConfiguration =
//             nidaqmx_sys::DAQmxErrorInvalidShuntCalibrationConfiguration,
//         ErrorBufferedOperationsNotSupportedOnChannelStandalone =
//             nidaqmx_sys::DAQmxErrorBufferedOperationsNotSupportedOnChannelStandalone,
//         ErrorFeatureNotAvailableOnAccessory = nidaqmx_sys::DAQmxErrorFeatureNotAvailableOnAccessory,
//         ErrorInconsistentThreshVoltageAcrossTerminals =
//             nidaqmx_sys::DAQmxErrorInconsistentThreshVoltageAcrossTerminals,
//         ErrorDAQmxIsNotInstalledOnTarget = nidaqmx_sys::DAQmxErrorDAQmxIsNotInstalledOnTarget,
//         ErrorCOCannotKeepUpInHWTimedSinglePoint =
//             nidaqmx_sys::DAQmxErrorCOCannotKeepUpInHWTimedSinglePoint,
//         ErrorWaitForNextSampClkDetected3OrMoreSampClks =
//             nidaqmx_sys::DAQmxErrorWaitForNextSampClkDetected3OrMoreSampClks,
//         ErrorWaitForNextSampClkDetectedMissedSampClk =
//             nidaqmx_sys::DAQmxErrorWaitForNextSampClkDetectedMissedSampClk,
//         ErrorWriteNotCompleteBeforeSampClk = nidaqmx_sys::DAQmxErrorWriteNotCompleteBeforeSampClk,
//         ErrorReadNotCompleteBeforeSampClk = nidaqmx_sys::DAQmxErrorReadNotCompleteBeforeSampClk,
//         ErrorInconsistentDigitalFilteringAcrossTerminals =
//             nidaqmx_sys::DAQmxErrorInconsistentDigitalFilteringAcrossTerminals,
//         ErrorInconsistentPullUpCfgAcrossTerminals =
//             nidaqmx_sys::DAQmxErrorInconsistentPullUpCfgAcrossTerminals,
//         ErrorInconsistentTermCfgAcrossTerminals =
//             nidaqmx_sys::DAQmxErrorInconsistentTermCfgAcrossTerminals,
//         ErrorVCXODCMBecameUnlocked = nidaqmx_sys::DAQmxErrorVCXODCMBecameUnlocked,
//         ErrorPLLDACUpdateFailed = nidaqmx_sys::DAQmxErrorPLLDACUpdateFailed,
//         ErrorNoCabledDevice = nidaqmx_sys::DAQmxErrorNoCabledDevice,
//         ErrorLostRefClk = nidaqmx_sys::DAQmxErrorLostRefClk,
//         ErrorCantUseAITimingEngineWithCounters =
//             nidaqmx_sys::DAQmxErrorCantUseAITimingEngineWithCounters,
//         ErrorDACOffsetValNotSet = nidaqmx_sys::DAQmxErrorDACOffsetValNotSet,
//         ErrorCalAdjustRefValOutOfRange = nidaqmx_sys::DAQmxErrorCalAdjustRefValOutOfRange,
//         ErrorChansForCalAdjustMustPerformSetContext =
//             nidaqmx_sys::DAQmxErrorChansForCalAdjustMustPerformSetContext,
//         ErrorGetCalDataInvalidForCalMode = nidaqmx_sys::DAQmxErrorGetCalDataInvalidForCalMode,
//         ErrorNoIEPEWithACNotAllowed = nidaqmx_sys::DAQmxErrorNoIEPEWithACNotAllowed,
//         ErrorSetupCalNeededBeforeGetCalDataPoints =
//             nidaqmx_sys::DAQmxErrorSetupCalNeededBeforeGetCalDataPoints,
//         ErrorVoltageNotCalibrated = nidaqmx_sys::DAQmxErrorVoltageNotCalibrated,
//         ErrorMissingRangeForCalibration = nidaqmx_sys::DAQmxErrorMissingRangeForCalibration,
//         ErrorMultipleChansNotSupportedDuringCalAdjust =
//             nidaqmx_sys::DAQmxErrorMultipleChansNotSupportedDuringCalAdjust,
//         ErrorShuntCalFailedOutOfRange = nidaqmx_sys::DAQmxErrorShuntCalFailedOutOfRange,
//         ErrorOperationNotSupportedOnSimulatedDevice =
//             nidaqmx_sys::DAQmxErrorOperationNotSupportedOnSimulatedDevice,
//         ErrorFirmwareVersionSameAsInstalledVersion =
//             nidaqmx_sys::DAQmxErrorFirmwareVersionSameAsInstalledVersion,
//         ErrorFirmwareVersionOlderThanInstalledVersion =
//             nidaqmx_sys::DAQmxErrorFirmwareVersionOlderThanInstalledVersion,
//         ErrorFirmwareUpdateInvalidState = nidaqmx_sys::DAQmxErrorFirmwareUpdateInvalidState,
//         ErrorFirmwareUpdateInvalidID = nidaqmx_sys::DAQmxErrorFirmwareUpdateInvalidID,
//         ErrorFirmwareUpdateAutomaticManagementEnabled =
//             nidaqmx_sys::DAQmxErrorFirmwareUpdateAutomaticManagementEnabled,
//         ErrorSetupCalibrationNotCalled = nidaqmx_sys::DAQmxErrorSetupCalibrationNotCalled,
//         ErrorCalMeasuredDataSizeVsActualDataSizeMismatch =
//             nidaqmx_sys::DAQmxErrorCalMeasuredDataSizeVsActualDataSizeMismatch,
//         ErrorCDAQMissingDSAMasterForChanExpansion =
//             nidaqmx_sys::DAQmxErrorCDAQMissingDSAMasterForChanExpansion,
//         ErrorCDAQMasterNotFoundForChanExpansion =
//             nidaqmx_sys::DAQmxErrorCDAQMasterNotFoundForChanExpansion,
//         ErrorAllChansShouldBeProvidedForCalibration =
//             nidaqmx_sys::DAQmxErrorAllChansShouldBeProvidedForCalibration,
//         ErrorMustSpecifyExpirationStateForAllLinesInRange =
//             nidaqmx_sys::DAQmxErrorMustSpecifyExpirationStateForAllLinesInRange,
//         ErrorOpenSessionExists = nidaqmx_sys::DAQmxErrorOpenSessionExists,
//         ErrorCannotQueryTerminalForSWArmStart =
//             nidaqmx_sys::DAQmxErrorCannotQueryTerminalForSWArmStart,
//         ErrorChassisWatchdogTimerExpired = nidaqmx_sys::DAQmxErrorChassisWatchdogTimerExpired,
//         ErrorCantReserveWatchdogTaskWhileOtherTasksReserved =
//             nidaqmx_sys::DAQmxErrorCantReserveWatchdogTaskWhileOtherTasksReserved,
//         ErrorCantReserveTaskWhileWatchdogTaskReserving =
//             nidaqmx_sys::DAQmxErrorCantReserveTaskWhileWatchdogTaskReserving,
//         ErrorAuxPowerSourceRequired = nidaqmx_sys::DAQmxErrorAuxPowerSourceRequired,
//         ErrorDeviceNotSupportedOnLocalSystem =
//             nidaqmx_sys::DAQmxErrorDeviceNotSupportedOnLocalSystem,
//         ErrorOneTimestampChannelRequiredForCombinedNavigationRead =
//             nidaqmx_sys::DAQmxErrorOneTimestampChannelRequiredForCombinedNavigationRead,
//         ErrorMultDevsMultPhysChans = nidaqmx_sys::DAQmxErrorMultDevsMultPhysChans,
//         ErrorInvalidCalAdjustmentPointValues =
//             nidaqmx_sys::DAQmxErrorInvalidCalAdjustmentPointValues,
//         ErrorDifferentDigitizerFromCommunicator =
//             nidaqmx_sys::DAQmxErrorDifferentDigitizerFromCommunicator,
//         ErrorCDAQSyncMasterClockNotPresent = nidaqmx_sys::DAQmxErrorCDAQSyncMasterClockNotPresent,
//         ErrorAssociatedChansHaveConflictingProps =
//             nidaqmx_sys::DAQmxErrorAssociatedChansHaveConflictingProps,
//         ErrorAutoConfigBetweenMultipleDeviceStatesInvalid =
//             nidaqmx_sys::DAQmxErrorAutoConfigBetweenMultipleDeviceStatesInvalid,
//         ErrorAutoConfigOfOfflineDevicesInvalid =
//             nidaqmx_sys::DAQmxErrorAutoConfigOfOfflineDevicesInvalid,
//         ErrorExternalFIFOFault = nidaqmx_sys::DAQmxErrorExternalFIFOFault,
//         ErrorConnectionsNotReciprocal = nidaqmx_sys::DAQmxErrorConnectionsNotReciprocal,
//         ErrorInvalidOutputToInputCDAQSyncConnection =
//             nidaqmx_sys::DAQmxErrorInvalidOutputToInputCDAQSyncConnection,
//         ErrorReferenceClockNotPresent = nidaqmx_sys::DAQmxErrorReferenceClockNotPresent,
//         ErrorBlankStringExpansionFoundNoSupportedCDAQSyncConnectionDevices =
//             nidaqmx_sys::DAQmxErrorBlankStringExpansionFoundNoSupportedCDAQSyncConnectionDevices,
//         ErrorNoDevicesSupportCDAQSyncConnections =
//             nidaqmx_sys::DAQmxErrorNoDevicesSupportCDAQSyncConnections,
//         ErrorInvalidCDAQSyncTimeoutValue = nidaqmx_sys::DAQmxErrorInvalidCDAQSyncTimeoutValue,
//         ErrorCDAQSyncConnectionToSamePort = nidaqmx_sys::DAQmxErrorCDAQSyncConnectionToSamePort,
//         ErrorDevsWithoutCommonSyncConnectionStrategy =
//             nidaqmx_sys::DAQmxErrorDevsWithoutCommonSyncConnectionStrategy,
//         ErrorNoCDAQSyncBetweenPhysAndSimulatedDevs =
//             nidaqmx_sys::DAQmxErrorNoCDAQSyncBetweenPhysAndSimulatedDevs,
//         ErrorUnableToContainCards = nidaqmx_sys::DAQmxErrorUnableToContainCards,
//         ErrorFindDisconnectedBetweenPhysAndSimDeviceStatesInvalid =
//             nidaqmx_sys::DAQmxErrorFindDisconnectedBetweenPhysAndSimDeviceStatesInvalid,
//         ErrorOperationAborted = nidaqmx_sys::DAQmxErrorOperationAborted,
//         ErrorTwoPortsRequired = nidaqmx_sys::DAQmxErrorTwoPortsRequired,
//         ErrorDeviceDoesNotSupportCDAQSyncConnections =
//             nidaqmx_sys::DAQmxErrorDeviceDoesNotSupportCDAQSyncConnections,
//         ErrorInvalidcDAQSyncPortConnectionFormat =
//             nidaqmx_sys::DAQmxErrorInvalidcDAQSyncPortConnectionFormat,
//         ErrorRosetteMeasurementsNotSpecified =
//             nidaqmx_sys::DAQmxErrorRosetteMeasurementsNotSpecified,
//         ErrorInvalidNumOfPhysChansForDeltaRosette =
//             nidaqmx_sys::DAQmxErrorInvalidNumOfPhysChansForDeltaRosette,
//         ErrorInvalidNumOfPhysChansForTeeRosette =
//             nidaqmx_sys::DAQmxErrorInvalidNumOfPhysChansForTeeRosette,
//         ErrorRosetteStrainChanNamesNeeded = nidaqmx_sys::DAQmxErrorRosetteStrainChanNamesNeeded,
//         ErrorMultideviceWithOnDemandTiming = nidaqmx_sys::DAQmxErrorMultideviceWithOnDemandTiming,
//         ErrorFREQOUTCannotProduceDesiredFrequency3 =
//             nidaqmx_sys::DAQmxErrorFREQOUTCannotProduceDesiredFrequency3,
//         ErrorTwoEdgeSeparationSameTerminalSameEdge =
//             nidaqmx_sys::DAQmxErrorTwoEdgeSeparationSameTerminalSameEdge,
//         ErrorDontMixSyncPulseAndSampClkTimebaseOn449x =
//             nidaqmx_sys::DAQmxErrorDontMixSyncPulseAndSampClkTimebaseOn449x,
//         ErrorNeitherRefClkNorSampClkTimebaseConfiguredForDSASync =
//             nidaqmx_sys::DAQmxErrorNeitherRefClkNorSampClkTimebaseConfiguredForDSASync,
//         ErrorRetriggeringFiniteCONotAllowed = nidaqmx_sys::DAQmxErrorRetriggeringFiniteCONotAllowed,
//         ErrorDeviceRebootedFromWDTTimeout = nidaqmx_sys::DAQmxErrorDeviceRebootedFromWDTTimeout,
//         ErrorTimeoutValueExceedsMaximum = nidaqmx_sys::DAQmxErrorTimeoutValueExceedsMaximum,
//         ErrorSharingDifferentWireModes = nidaqmx_sys::DAQmxErrorSharingDifferentWireModes,
//         ErrorCantPrimeWithEmptyBuffer = nidaqmx_sys::DAQmxErrorCantPrimeWithEmptyBuffer,
//         ErrorConfigFailedBecauseWatchdogExpired =
//             nidaqmx_sys::DAQmxErrorConfigFailedBecauseWatchdogExpired,
//         ErrorWriteFailedBecauseWatchdogChangedLineDirection =
//             nidaqmx_sys::DAQmxErrorWriteFailedBecauseWatchdogChangedLineDirection,
//         ErrorMultipleSubsytemCalibration = nidaqmx_sys::DAQmxErrorMultipleSubsytemCalibration,
//         ErrorIncorrectChannelForOffsetAdjustment =
//             nidaqmx_sys::DAQmxErrorIncorrectChannelForOffsetAdjustment,
//         ErrorInvalidNumRefVoltagesToWrite = nidaqmx_sys::DAQmxErrorInvalidNumRefVoltagesToWrite,
//         ErrorStartTrigDelayWithDSAModule = nidaqmx_sys::DAQmxErrorStartTrigDelayWithDSAModule,
//         ErrorMoreThanOneSyncPulseDetected = nidaqmx_sys::DAQmxErrorMoreThanOneSyncPulseDetected,
//         ErrorDevNotSupportedWithinDAQmxAPI = nidaqmx_sys::DAQmxErrorDevNotSupportedWithinDAQmxAPI,
//         ErrorDevsWithoutSyncStrategies = nidaqmx_sys::DAQmxErrorDevsWithoutSyncStrategies,
//         ErrorDevsWithoutCommonSyncStrategy = nidaqmx_sys::DAQmxErrorDevsWithoutCommonSyncStrategy,
//         ErrorSyncStrategiesCannotSync = nidaqmx_sys::DAQmxErrorSyncStrategiesCannotSync,
//         ErrorChassisCommunicationInterrupted =
//             nidaqmx_sys::DAQmxErrorChassisCommunicationInterrupted,
//         ErrorUnknownCardPowerProfileInCarrier =
//             nidaqmx_sys::DAQmxErrorUnknownCardPowerProfileInCarrier,
//         ErrorAttrNotSupportedOnAccessory = nidaqmx_sys::DAQmxErrorAttrNotSupportedOnAccessory,
//         ErrorNetworkDeviceReservedByAnotherHost =
//             nidaqmx_sys::DAQmxErrorNetworkDeviceReservedByAnotherHost,
//         ErrorIncorrectFirmwareFileUploaded = nidaqmx_sys::DAQmxErrorIncorrectFirmwareFileUploaded,
//         ErrorInvalidFirmwareFileUploaded = nidaqmx_sys::DAQmxErrorInvalidFirmwareFileUploaded,
//         ErrorInTimerTimeoutOnArm = nidaqmx_sys::DAQmxErrorInTimerTimeoutOnArm,
//         ErrorCantExceedSlotRelayDriveLimit = nidaqmx_sys::DAQmxErrorCantExceedSlotRelayDriveLimit,
//         ErrorModuleUnsupportedFor9163 = nidaqmx_sys::DAQmxErrorModuleUnsupportedFor9163,
//         ErrorConnectionsNotSupported = nidaqmx_sys::DAQmxErrorConnectionsNotSupported,
//         ErrorAccessoryNotPresent = nidaqmx_sys::DAQmxErrorAccessoryNotPresent,
//         ErrorSpecifiedAccessoryChannelsNotPresentOnDevice =
//             nidaqmx_sys::DAQmxErrorSpecifiedAccessoryChannelsNotPresentOnDevice,
//         ErrorConnectionsNotSupportedOnAccessory =
//             nidaqmx_sys::DAQmxErrorConnectionsNotSupportedOnAccessory,
//         ErrorRateTooFastForHWTSP = nidaqmx_sys::DAQmxErrorRateTooFastForHWTSP,
//         ErrorDelayFromSampleClockOutOfRangeForHWTSP =
//             nidaqmx_sys::DAQmxErrorDelayFromSampleClockOutOfRangeForHWTSP,
//         ErrorAveragingWhenNotInternalHWTSP = nidaqmx_sys::DAQmxErrorAveragingWhenNotInternalHWTSP,
//         ErrorAttributeNotSupportedUnlessHWTSP =
//             nidaqmx_sys::DAQmxErrorAttributeNotSupportedUnlessHWTSP,
//         ErrorFiveVoltDetectFailed = nidaqmx_sys::DAQmxErrorFiveVoltDetectFailed,
//         ErrorAnalogBusStateInconsistent = nidaqmx_sys::DAQmxErrorAnalogBusStateInconsistent,
//         ErrorCardDetectedDoesNotMatchExpectedCard =
//             nidaqmx_sys::DAQmxErrorCardDetectedDoesNotMatchExpectedCard,
//         ErrorLoggingStartNewFileNotCalled = nidaqmx_sys::DAQmxErrorLoggingStartNewFileNotCalled,
//         ErrorLoggingSampsPerFileNotDivisible =
//             nidaqmx_sys::DAQmxErrorLoggingSampsPerFileNotDivisible,
//         ErrorRetrievingNetworkDeviceProperties =
//             nidaqmx_sys::DAQmxErrorRetrievingNetworkDeviceProperties,
//         ErrorFilePreallocationFailed = nidaqmx_sys::DAQmxErrorFilePreallocationFailed,
//         ErrorModuleMismatchInSameTimedTask = nidaqmx_sys::DAQmxErrorModuleMismatchInSameTimedTask,
//         ErrorInvalidAttributeValuePossiblyDueToOtherAttributeValues =
//             nidaqmx_sys::DAQmxErrorInvalidAttributeValuePossiblyDueToOtherAttributeValues,
//         ErrorChangeDetectionStoppedToPreventDeviceHang =
//             nidaqmx_sys::DAQmxErrorChangeDetectionStoppedToPreventDeviceHang,
//         ErrorFilterDelayRemovalNotPosssibleWithAnalogTrigger =
//             nidaqmx_sys::DAQmxErrorFilterDelayRemovalNotPosssibleWithAnalogTrigger,
//         ErrorNonbufferedOrNoChannels = nidaqmx_sys::DAQmxErrorNonbufferedOrNoChannels,
//         ErrorTristateLogicLevelNotSpecdForEntirePort =
//             nidaqmx_sys::DAQmxErrorTristateLogicLevelNotSpecdForEntirePort,
//         ErrorTristateLogicLevelNotSupportedOnDigOutChan =
//             nidaqmx_sys::DAQmxErrorTristateLogicLevelNotSupportedOnDigOutChan,
//         ErrorTristateLogicLevelNotSupported = nidaqmx_sys::DAQmxErrorTristateLogicLevelNotSupported,
//         ErrorIncompleteGainAndCouplingCalAdjustment =
//             nidaqmx_sys::DAQmxErrorIncompleteGainAndCouplingCalAdjustment,
//         ErrorNetworkStatusConnectionLost = nidaqmx_sys::DAQmxErrorNetworkStatusConnectionLost,
//         ErrorModuleChangeDuringConnectionLoss =
//             nidaqmx_sys::DAQmxErrorModuleChangeDuringConnectionLoss,
//         ErrorNetworkDeviceNotReservedByHost = nidaqmx_sys::DAQmxErrorNetworkDeviceNotReservedByHost,
//         ErrorDuplicateCalibrationAdjustmentInput =
//             nidaqmx_sys::DAQmxErrorDuplicateCalibrationAdjustmentInput,
//         ErrorSelfCalFailedContactTechSupport =
//             nidaqmx_sys::DAQmxErrorSelfCalFailedContactTechSupport,
//         ErrorSelfCalFailedToConverge = nidaqmx_sys::DAQmxErrorSelfCalFailedToConverge,
//         ErrorUnsupportedSimulatedModuleForSimulatedChassis =
//             nidaqmx_sys::DAQmxErrorUnsupportedSimulatedModuleForSimulatedChassis,
//         ErrorLoggingWriteSizeTooBig = nidaqmx_sys::DAQmxErrorLoggingWriteSizeTooBig,
//         ErrorLoggingWriteSizeNotDivisible = nidaqmx_sys::DAQmxErrorLoggingWriteSizeNotDivisible,
//         ErrorMyDAQPowerRailFault = nidaqmx_sys::DAQmxErrorMyDAQPowerRailFault,
//         ErrorDeviceDoesNotSupportThisOperation =
//             nidaqmx_sys::DAQmxErrorDeviceDoesNotSupportThisOperation,
//         ErrorNetworkDevicesNotSupportedOnThisPlatform =
//             nidaqmx_sys::DAQmxErrorNetworkDevicesNotSupportedOnThisPlatform,
//         ErrorUnknownFirmwareVersion = nidaqmx_sys::DAQmxErrorUnknownFirmwareVersion,
//         ErrorFirmwareIsUpdating = nidaqmx_sys::DAQmxErrorFirmwareIsUpdating,
//         ErrorAccessoryEEPROMIsCorrupt = nidaqmx_sys::DAQmxErrorAccessoryEEPROMIsCorrupt,
//         ErrorThrmcplLeadOffsetNullingCalNotSupported =
//             nidaqmx_sys::DAQmxErrorThrmcplLeadOffsetNullingCalNotSupported,
//         ErrorSelfCalFailedTryExtCal = nidaqmx_sys::DAQmxErrorSelfCalFailedTryExtCal,
//         ErrorOutputP2PNotSupportedWithMultithreadedScripts =
//             nidaqmx_sys::DAQmxErrorOutputP2PNotSupportedWithMultithreadedScripts,
//         ErrorThrmcplCalibrationChannelsOpen = nidaqmx_sys::DAQmxErrorThrmcplCalibrationChannelsOpen,
//         ErrorMDNSServiceInstanceAlreadyInUse =
//             nidaqmx_sys::DAQmxErrorMDNSServiceInstanceAlreadyInUse,
//         ErrorIPAddressAlreadyInUse = nidaqmx_sys::DAQmxErrorIPAddressAlreadyInUse,
//         ErrorHostnameAlreadyInUse = nidaqmx_sys::DAQmxErrorHostnameAlreadyInUse,
//         ErrorInvalidNumberOfCalAdjustmentPoints =
//             nidaqmx_sys::DAQmxErrorInvalidNumberOfCalAdjustmentPoints,
//         ErrorFilterOrDigitalSyncInternalSignal =
//             nidaqmx_sys::DAQmxErrorFilterOrDigitalSyncInternalSignal,
//         ErrorBadDDSSource = nidaqmx_sys::DAQmxErrorBadDDSSource,
//         ErrorOnboardRegenWithMoreThan16Channels =
//             nidaqmx_sys::DAQmxErrorOnboardRegenWithMoreThan16Channels,
//         ErrorTriggerTooFast = nidaqmx_sys::DAQmxErrorTriggerTooFast,
//         ErrorMinMaxOutsideTableRange = nidaqmx_sys::DAQmxErrorMinMaxOutsideTableRange,
//         ErrorChannelExpansionWithInvalidAnalogTriggerDevice =
//             nidaqmx_sys::DAQmxErrorChannelExpansionWithInvalidAnalogTriggerDevice,
//         ErrorSyncPulseSrcInvalidForTask = nidaqmx_sys::DAQmxErrorSyncPulseSrcInvalidForTask,
//         ErrorInvalidCarrierSlotNumberSpecd = nidaqmx_sys::DAQmxErrorInvalidCarrierSlotNumberSpecd,
//         ErrorCardsMustBeInSameCarrier = nidaqmx_sys::DAQmxErrorCardsMustBeInSameCarrier,
//         ErrorCardDevCarrierSimMustMatch = nidaqmx_sys::DAQmxErrorCardDevCarrierSimMustMatch,
//         ErrorDevMustHaveAtLeastOneCard = nidaqmx_sys::DAQmxErrorDevMustHaveAtLeastOneCard,
//         ErrorCardTopologyError = nidaqmx_sys::DAQmxErrorCardTopologyError,
//         ErrorExceededCarrierPowerLimit = nidaqmx_sys::DAQmxErrorExceededCarrierPowerLimit,
//         ErrorCardsIncompatible = nidaqmx_sys::DAQmxErrorCardsIncompatible,
//         ErrorAnalogBusNotValid = nidaqmx_sys::DAQmxErrorAnalogBusNotValid,
//         ErrorReservationConflict = nidaqmx_sys::DAQmxErrorReservationConflict,
//         ErrorMemMappedOnDemandNotSupported = nidaqmx_sys::DAQmxErrorMemMappedOnDemandNotSupported,
//         ErrorSlaveWithNoStartTriggerConfigured =
//             nidaqmx_sys::DAQmxErrorSlaveWithNoStartTriggerConfigured,
//         ErrorChannelExpansionWithDifferentTriggerDevices =
//             nidaqmx_sys::DAQmxErrorChannelExpansionWithDifferentTriggerDevices,
//         ErrorCounterSyncAndRetriggered = nidaqmx_sys::DAQmxErrorCounterSyncAndRetriggered,
//         ErrorNoExternalSyncPulseDetected = nidaqmx_sys::DAQmxErrorNoExternalSyncPulseDetected,
//         ErrorSlaveAndNoExternalSyncPulse = nidaqmx_sys::DAQmxErrorSlaveAndNoExternalSyncPulse,
//         ErrorCustomTimingRequiredForAttribute =
//             nidaqmx_sys::DAQmxErrorCustomTimingRequiredForAttribute,
//         ErrorCustomTimingModeNotSet = nidaqmx_sys::DAQmxErrorCustomTimingModeNotSet,
//         ErrorAccessoryPowerTripped = nidaqmx_sys::DAQmxErrorAccessoryPowerTripped,
//         ErrorUnsupportedAccessory = nidaqmx_sys::DAQmxErrorUnsupportedAccessory,
//         ErrorInvalidAccessoryChange = nidaqmx_sys::DAQmxErrorInvalidAccessoryChange,
//         ErrorFirmwareRequiresUpgrade = nidaqmx_sys::DAQmxErrorFirmwareRequiresUpgrade,
//         ErrorFastExternalTimebaseNotSupportedForDevice =
//             nidaqmx_sys::DAQmxErrorFastExternalTimebaseNotSupportedForDevice,
//         ErrorInvalidShuntLocationForCalibration =
//             nidaqmx_sys::DAQmxErrorInvalidShuntLocationForCalibration,
//         ErrorDeviceNameTooLong = nidaqmx_sys::DAQmxErrorDeviceNameTooLong,
//         ErrorBridgeScalesUnsupported = nidaqmx_sys::DAQmxErrorBridgeScalesUnsupported,
//         ErrorMismatchedElecPhysValues = nidaqmx_sys::DAQmxErrorMismatchedElecPhysValues,
//         ErrorLinearRequiresUniquePoints = nidaqmx_sys::DAQmxErrorLinearRequiresUniquePoints,
//         ErrorMissingRequiredScalingParameter =
//             nidaqmx_sys::DAQmxErrorMissingRequiredScalingParameter,
//         ErrorLoggingNotSupportOnOutputTasks = nidaqmx_sys::DAQmxErrorLoggingNotSupportOnOutputTasks,
//         ErrorMemoryMappedHardwareTimedNonBufferedUnsupported =
//             nidaqmx_sys::DAQmxErrorMemoryMappedHardwareTimedNonBufferedUnsupported,
//         ErrorCannotUpdatePulseTrainWithAutoIncrementEnabled =
//             nidaqmx_sys::DAQmxErrorCannotUpdatePulseTrainWithAutoIncrementEnabled,
//         ErrorHWTimedSinglePointAndDataXferNotDMA =
//             nidaqmx_sys::DAQmxErrorHWTimedSinglePointAndDataXferNotDMA,
//         ErrorSCCSecondStageEmpty = nidaqmx_sys::DAQmxErrorSCCSecondStageEmpty,
//         ErrorSCCInvalidDualStageCombo = nidaqmx_sys::DAQmxErrorSCCInvalidDualStageCombo,
//         ErrorSCCInvalidSecondStage = nidaqmx_sys::DAQmxErrorSCCInvalidSecondStage,
//         ErrorSCCInvalidFirstStage = nidaqmx_sys::DAQmxErrorSCCInvalidFirstStage,
//         ErrorCounterMultipleSampleClockedChannels =
//             nidaqmx_sys::DAQmxErrorCounterMultipleSampleClockedChannels,
//         ErrorTwoCounterMeasurementModeAndSampleClocked =
//             nidaqmx_sys::DAQmxError2CounterMeasurementModeAndSampleClocked,
//         ErrorCantHaveBothMemMappedAndNonMemMappedTasks =
//             nidaqmx_sys::DAQmxErrorCantHaveBothMemMappedAndNonMemMappedTasks,
//         ErrorMemMappedDataReadByAnotherProcess =
//             nidaqmx_sys::DAQmxErrorMemMappedDataReadByAnotherProcess,
//         ErrorRetriggeringInvalidForGivenSettings =
//             nidaqmx_sys::DAQmxErrorRetriggeringInvalidForGivenSettings,
//         ErrorAIOverrun = nidaqmx_sys::DAQmxErrorAIOverrun,
//         ErrorCOOverrun = nidaqmx_sys::DAQmxErrorCOOverrun,
//         ErrorCounterMultipleBufferedChannels =
//             nidaqmx_sys::DAQmxErrorCounterMultipleBufferedChannels,
//         ErrorInvalidTimebaseForCOHWTSP = nidaqmx_sys::DAQmxErrorInvalidTimebaseForCOHWTSP,
//         ErrorWriteBeforeEvent = nidaqmx_sys::DAQmxErrorWriteBeforeEvent,
//         ErrorCIOverrun = nidaqmx_sys::DAQmxErrorCIOverrun,
//         ErrorCounterNonResponsiveAndReset = nidaqmx_sys::DAQmxErrorCounterNonResponsiveAndReset,
//         ErrorMeasTypeOrChannelNotSupportedForLogging =
//             nidaqmx_sys::DAQmxErrorMeasTypeOrChannelNotSupportedForLogging,
//         ErrorFileAlreadyOpenedForWrite = nidaqmx_sys::DAQmxErrorFileAlreadyOpenedForWrite,
//         ErrorTdmsNotFound = nidaqmx_sys::DAQmxErrorTdmsNotFound,
//         ErrorGenericFileIO = nidaqmx_sys::DAQmxErrorGenericFileIO,
//         ErrorFiniteSTCCounterNotSupportedForLogging =
//             nidaqmx_sys::DAQmxErrorFiniteSTCCounterNotSupportedForLogging,
//         ErrorMeasurementTypeNotSupportedForLogging =
//             nidaqmx_sys::DAQmxErrorMeasurementTypeNotSupportedForLogging,
//         ErrorFileAlreadyOpened = nidaqmx_sys::DAQmxErrorFileAlreadyOpened,
//         ErrorDiskFull = nidaqmx_sys::DAQmxErrorDiskFull,
//         ErrorFilePathInvalid = nidaqmx_sys::DAQmxErrorFilePathInvalid,
//         ErrorFileVersionMismatch = nidaqmx_sys::DAQmxErrorFileVersionMismatch,
//         ErrorFileWriteProtected = nidaqmx_sys::DAQmxErrorFileWriteProtected,
//         ErrorReadNotSupportedForLoggingMode = nidaqmx_sys::DAQmxErrorReadNotSupportedForLoggingMode,
//         ErrorAttributeNotSupportedWhenLogging =
//             nidaqmx_sys::DAQmxErrorAttributeNotSupportedWhenLogging,
//         ErrorLoggingModeNotSupportedNonBuffered =
//             nidaqmx_sys::DAQmxErrorLoggingModeNotSupportedNonBuffered,
//         ErrorPropertyNotSupportedWithConflictingProperty =
//             nidaqmx_sys::DAQmxErrorPropertyNotSupportedWithConflictingProperty,
//         ErrorParallelSSHOnConnector1 = nidaqmx_sys::DAQmxErrorParallelSSHOnConnector1,
//         ErrorCOOnlyImplicitSampleTimingTypeSupported =
//             nidaqmx_sys::DAQmxErrorCOOnlyImplicitSampleTimingTypeSupported,
//         ErrorCalibrationFailedAOOutOfRange = nidaqmx_sys::DAQmxErrorCalibrationFailedAOOutOfRange,
//         ErrorCalibrationFailedAIOutOfRange = nidaqmx_sys::DAQmxErrorCalibrationFailedAIOutOfRange,
//         ErrorCalPWMLinearityFailed = nidaqmx_sys::DAQmxErrorCalPWMLinearityFailed,
//         ErrorOverrunUnderflowConfigurationCombo =
//             nidaqmx_sys::DAQmxErrorOverrunUnderflowConfigurationCombo,
//         ErrorCannotWriteToFiniteCOTask = nidaqmx_sys::DAQmxErrorCannotWriteToFiniteCOTask,
//         ErrorNetworkDAQInvalidWEPKeyLength = nidaqmx_sys::DAQmxErrorNetworkDAQInvalidWEPKeyLength,
//         ErrorCalInputsShortedNotSupported = nidaqmx_sys::DAQmxErrorCalInputsShortedNotSupported,
//         ErrorCannotSetPropertyWhenTaskIsReserved =
//             nidaqmx_sys::DAQmxErrorCannotSetPropertyWhenTaskIsReserved,
//         ErrorMinus12VFuseBlown = nidaqmx_sys::DAQmxErrorMinus12VFuseBlown,
//         ErrorPlus12VFuseBlown = nidaqmx_sys::DAQmxErrorPlus12VFuseBlown,
//         ErrorPlus5VFuseBlown = nidaqmx_sys::DAQmxErrorPlus5VFuseBlown,
//         ErrorPlus3VFuseBlown = nidaqmx_sys::DAQmxErrorPlus3VFuseBlown,
//         ErrorDeviceSerialPortError = nidaqmx_sys::DAQmxErrorDeviceSerialPortError,
//         ErrorPowerUpStateMachineNotDone = nidaqmx_sys::DAQmxErrorPowerUpStateMachineNotDone,
//         ErrorTooManyTriggersSpecifiedInTask = nidaqmx_sys::DAQmxErrorTooManyTriggersSpecifiedInTask,
//         ErrorVerticalOffsetNotSupportedOnDevice =
//             nidaqmx_sys::DAQmxErrorVerticalOffsetNotSupportedOnDevice,
//         ErrorInvalidCouplingForMeasurementType =
//             nidaqmx_sys::DAQmxErrorInvalidCouplingForMeasurementType,
//         ErrorDigitalLineUpdateTooFastForDevice =
//             nidaqmx_sys::DAQmxErrorDigitalLineUpdateTooFastForDevice,
//         ErrorCertificateIsTooBigToTransfer = nidaqmx_sys::DAQmxErrorCertificateIsTooBigToTransfer,
//         ErrorOnlyPEMOrDERCertiticatesAccepted =
//             nidaqmx_sys::DAQmxErrorOnlyPEMOrDERCertiticatesAccepted,
//         ErrorCalCouplingNotSupported = nidaqmx_sys::DAQmxErrorCalCouplingNotSupported,
//         ErrorDeviceNotSupportedIn64Bit = nidaqmx_sys::DAQmxErrorDeviceNotSupportedIn64Bit,
//         ErrorNetworkDeviceInUse = nidaqmx_sys::DAQmxErrorNetworkDeviceInUse,
//         ErrorInvalidIPv4AddressFormat = nidaqmx_sys::DAQmxErrorInvalidIPv4AddressFormat,
//         ErrorNetworkProductTypeMismatch = nidaqmx_sys::DAQmxErrorNetworkProductTypeMismatch,
//         ErrorOnlyPEMCertificatesAccepted = nidaqmx_sys::DAQmxErrorOnlyPEMCertificatesAccepted,
//         ErrorCalibrationRequiresPrototypingBoardEnabled =
//             nidaqmx_sys::DAQmxErrorCalibrationRequiresPrototypingBoardEnabled,
//         ErrorAllCurrentLimitingResourcesAlreadyTaken =
//             nidaqmx_sys::DAQmxErrorAllCurrentLimitingResourcesAlreadyTaken,
//         ErrorUserDefInfoStringBadLength = nidaqmx_sys::DAQmxErrorUserDefInfoStringBadLength,
//         ErrorPropertyNotFound = nidaqmx_sys::DAQmxErrorPropertyNotFound,
//         ErrorOverVoltageProtectionActivated = nidaqmx_sys::DAQmxErrorOverVoltageProtectionActivated,
//         ErrorScaledIQWaveformTooLarge = nidaqmx_sys::DAQmxErrorScaledIQWaveformTooLarge,
//         ErrorFirmwareFailedToDownload = nidaqmx_sys::DAQmxErrorFirmwareFailedToDownload,
//         ErrorPropertyNotSupportedForBusType = nidaqmx_sys::DAQmxErrorPropertyNotSupportedForBusType,
//         ErrorChangeRateWhileRunningCouldNotBeCompleted =
//             nidaqmx_sys::DAQmxErrorChangeRateWhileRunningCouldNotBeCompleted,
//         ErrorCannotQueryManualControlAttribute =
//             nidaqmx_sys::DAQmxErrorCannotQueryManualControlAttribute,
//         ErrorInvalidNetworkConfiguration = nidaqmx_sys::DAQmxErrorInvalidNetworkConfiguration,
//         ErrorInvalidWirelessConfiguration = nidaqmx_sys::DAQmxErrorInvalidWirelessConfiguration,
//         ErrorInvalidWirelessCountryCode = nidaqmx_sys::DAQmxErrorInvalidWirelessCountryCode,
//         ErrorInvalidWirelessChannel = nidaqmx_sys::DAQmxErrorInvalidWirelessChannel,
//         ErrorNetworkEEPROMHasChanged = nidaqmx_sys::DAQmxErrorNetworkEEPROMHasChanged,
//         ErrorNetworkSerialNumberMismatch = nidaqmx_sys::DAQmxErrorNetworkSerialNumberMismatch,
//         ErrorNetworkStatusDown = nidaqmx_sys::DAQmxErrorNetworkStatusDown,
//         ErrorNetworkTargetUnreachable = nidaqmx_sys::DAQmxErrorNetworkTargetUnreachable,
//         ErrorNetworkTargetNotFound = nidaqmx_sys::DAQmxErrorNetworkTargetNotFound,
//         ErrorNetworkStatusTimedOut = nidaqmx_sys::DAQmxErrorNetworkStatusTimedOut,
//         ErrorInvalidWirelessSecuritySelection =
//             nidaqmx_sys::DAQmxErrorInvalidWirelessSecuritySelection,
//         ErrorNetworkDeviceConfigurationLocked =
//             nidaqmx_sys::DAQmxErrorNetworkDeviceConfigurationLocked,
//         ErrorNetworkDAQDeviceNotSupported = nidaqmx_sys::DAQmxErrorNetworkDAQDeviceNotSupported,
//         ErrorNetworkDAQCannotCreateEmptySleeve =
//             nidaqmx_sys::DAQmxErrorNetworkDAQCannotCreateEmptySleeve,
//         ErrorUserDefInfoStringTooLong = nidaqmx_sys::DAQmxErrorUserDefInfoStringTooLong,
//         ErrorModuleTypeDoesNotMatchModuleTypeInDestination =
//             nidaqmx_sys::DAQmxErrorModuleTypeDoesNotMatchModuleTypeInDestination,
//         ErrorInvalidTEDSInterfaceAddress = nidaqmx_sys::DAQmxErrorInvalidTEDSInterfaceAddress,
//         ErrorDevDoesNotSupportSCXIComm = nidaqmx_sys::DAQmxErrorDevDoesNotSupportSCXIComm,
//         ErrorSCXICommDevConnector0MustBeCabledToModule =
//             nidaqmx_sys::DAQmxErrorSCXICommDevConnector0MustBeCabledToModule,
//         ErrorSCXIModuleDoesNotSupportDigitizationMode =
//             nidaqmx_sys::DAQmxErrorSCXIModuleDoesNotSupportDigitizationMode,
//         ErrorDevDoesNotSupportMultiplexedSCXIDigitizationMode =
//             nidaqmx_sys::DAQmxErrorDevDoesNotSupportMultiplexedSCXIDigitizationMode,
//         ErrorDevOrDevPhysChanDoesNotSupportSCXIDigitization =
//             nidaqmx_sys::DAQmxErrorDevOrDevPhysChanDoesNotSupportSCXIDigitization,
//         ErrorInvalidPhysChanName = nidaqmx_sys::DAQmxErrorInvalidPhysChanName,
//         ErrorSCXIChassisCommModeInvalid = nidaqmx_sys::DAQmxErrorSCXIChassisCommModeInvalid,
//         ErrorRequiredDependencyNotFound = nidaqmx_sys::DAQmxErrorRequiredDependencyNotFound,
//         ErrorInvalidStorage = nidaqmx_sys::DAQmxErrorInvalidStorage,
//         ErrorInvalidObject = nidaqmx_sys::DAQmxErrorInvalidObject,
//         ErrorStorageAlteredPriorToSave = nidaqmx_sys::DAQmxErrorStorageAlteredPriorToSave,
//         ErrorTaskDoesNotReferenceLocalChannel =
//             nidaqmx_sys::DAQmxErrorTaskDoesNotReferenceLocalChannel,
//         ErrorReferencedDevSimMustMatchTarget =
//             nidaqmx_sys::DAQmxErrorReferencedDevSimMustMatchTarget,
//         ErrorProgrammedIOFailsBecauseOfWatchdogTimer =
//             nidaqmx_sys::DAQmxErrorProgrammedIOFailsBecauseOfWatchdogTimer,
//         ErrorWatchdogTimerFailsBecauseOfProgrammedIO =
//             nidaqmx_sys::DAQmxErrorWatchdogTimerFailsBecauseOfProgrammedIO,
//         ErrorCantUseThisTimingEngineWithAPort =
//             nidaqmx_sys::DAQmxErrorCantUseThisTimingEngineWithAPort,
//         ErrorProgrammedIOConflict = nidaqmx_sys::DAQmxErrorProgrammedIOConflict,
//         ErrorChangeDetectionIncompatibleWithProgrammedIO =
//             nidaqmx_sys::DAQmxErrorChangeDetectionIncompatibleWithProgrammedIO,
//         ErrorTristateNotEnoughLines = nidaqmx_sys::DAQmxErrorTristateNotEnoughLines,
//         ErrorTristateConflict = nidaqmx_sys::DAQmxErrorTristateConflict,
//         ErrorGenerateOrFiniteWaitExpectedBeforeBreakBlock =
//             nidaqmx_sys::DAQmxErrorGenerateOrFiniteWaitExpectedBeforeBreakBlock,
//         ErrorBreakBlockNotAllowedInLoop = nidaqmx_sys::DAQmxErrorBreakBlockNotAllowedInLoop,
//         ErrorClearTriggerNotAllowedInBreakBlock =
//             nidaqmx_sys::DAQmxErrorClearTriggerNotAllowedInBreakBlock,
//         ErrorNestingNotAllowedInBreakBlock = nidaqmx_sys::DAQmxErrorNestingNotAllowedInBreakBlock,
//         ErrorIfElseBlockNotAllowedInBreakBlock =
//             nidaqmx_sys::DAQmxErrorIfElseBlockNotAllowedInBreakBlock,
//         ErrorRepeatUntilTriggerLoopNotAllowedInBreakBlock =
//             nidaqmx_sys::DAQmxErrorRepeatUntilTriggerLoopNotAllowedInBreakBlock,
//         ErrorWaitUntilTriggerNotAllowedInBreakBlock =
//             nidaqmx_sys::DAQmxErrorWaitUntilTriggerNotAllowedInBreakBlock,
//         ErrorMarkerPosInvalidInBreakBlock = nidaqmx_sys::DAQmxErrorMarkerPosInvalidInBreakBlock,
//         ErrorInvalidWaitDurationInBreakBlock =
//             nidaqmx_sys::DAQmxErrorInvalidWaitDurationInBreakBlock,
//         ErrorInvalidSubsetLengthInBreakBlock =
//             nidaqmx_sys::DAQmxErrorInvalidSubsetLengthInBreakBlock,
//         ErrorInvalidWaveformLengthInBreakBlock =
//             nidaqmx_sys::DAQmxErrorInvalidWaveformLengthInBreakBlock,
//         ErrorInvalidWaitDurationBeforeBreakBlock =
//             nidaqmx_sys::DAQmxErrorInvalidWaitDurationBeforeBreakBlock,
//         ErrorInvalidSubsetLengthBeforeBreakBlock =
//             nidaqmx_sys::DAQmxErrorInvalidSubsetLengthBeforeBreakBlock,
//         ErrorInvalidWaveformLengthBeforeBreakBlock =
//             nidaqmx_sys::DAQmxErrorInvalidWaveformLengthBeforeBreakBlock,
//         ErrorSampleRateTooHighForADCTimingMode =
//             nidaqmx_sys::DAQmxErrorSampleRateTooHighForADCTimingMode,
//         ErrorActiveDevNotSupportedWithMultiDevTask =
//             nidaqmx_sys::DAQmxErrorActiveDevNotSupportedWithMultiDevTask,
//         ErrorRealDevAndSimDevNotSupportedInSameTask =
//             nidaqmx_sys::DAQmxErrorRealDevAndSimDevNotSupportedInSameTask,
//         ErrorRTSISimMustMatchDevSim = nidaqmx_sys::DAQmxErrorRTSISimMustMatchDevSim,
//         ErrorBridgeShuntCaNotSupported = nidaqmx_sys::DAQmxErrorBridgeShuntCaNotSupported,
//         ErrorStrainShuntCaNotSupported = nidaqmx_sys::DAQmxErrorStrainShuntCaNotSupported,
//         ErrorGainTooLargeForGainCalConst = nidaqmx_sys::DAQmxErrorGainTooLargeForGainCalConst,
//         ErrorOffsetTooLargeForOffsetCalConst =
//             nidaqmx_sys::DAQmxErrorOffsetTooLargeForOffsetCalConst,
//         ErrorElvisPrototypingBoardRemoved = nidaqmx_sys::DAQmxErrorElvisPrototypingBoardRemoved,
//         ErrorElvis2PowerRailFault = nidaqmx_sys::DAQmxErrorElvis2PowerRailFault,
//         ErrorElvis2PhysicalChansFault = nidaqmx_sys::DAQmxErrorElvis2PhysicalChansFault,
//         ErrorElvis2PhysicalChansThermalEvent =
//             nidaqmx_sys::DAQmxErrorElvis2PhysicalChansThermalEvent,
//         ErrorRXBitErrorRateLimitExceeded = nidaqmx_sys::DAQmxErrorRXBitErrorRateLimitExceeded,
//         ErrorPHYBitErrorRateLimitExceeded = nidaqmx_sys::DAQmxErrorPHYBitErrorRateLimitExceeded,
//         ErrorTwoPartAttributeCalledOutOfOrder =
//             nidaqmx_sys::DAQmxErrorTwoPartAttributeCalledOutOfOrder,
//         ErrorInvalidSCXIChassisAddress = nidaqmx_sys::DAQmxErrorInvalidSCXIChassisAddress,
//         ErrorCouldNotConnectToRemoteMXS = nidaqmx_sys::DAQmxErrorCouldNotConnectToRemoteMXS,
//         ErrorExcitationStateRequiredForAttributes =
//             nidaqmx_sys::DAQmxErrorExcitationStateRequiredForAttributes,
//         ErrorDeviceNotUsableUntilUSBReplug = nidaqmx_sys::DAQmxErrorDeviceNotUsableUntilUSBReplug,
//         ErrorInputFIFOOverflowDuringCalibrationOnFullSpeedUSB =
//             nidaqmx_sys::DAQmxErrorInputFIFOOverflowDuringCalibrationOnFullSpeedUSB,
//         ErrorInputFIFOOverflowDuringCalibration =
//             nidaqmx_sys::DAQmxErrorInputFIFOOverflowDuringCalibration,
//         ErrorCJCChanConflictsWithNonThermocoupleChan =
//             nidaqmx_sys::DAQmxErrorCJCChanConflictsWithNonThermocoupleChan,
//         ErrorCommDeviceForPXIBackplaneNotInRightmostSlot =
//             nidaqmx_sys::DAQmxErrorCommDeviceForPXIBackplaneNotInRightmostSlot,
//         ErrorCommDeviceForPXIBackplaneNotInSameChassis =
//             nidaqmx_sys::DAQmxErrorCommDeviceForPXIBackplaneNotInSameChassis,
//         ErrorCommDeviceForPXIBackplaneNotPXI =
//             nidaqmx_sys::DAQmxErrorCommDeviceForPXIBackplaneNotPXI,
//         ErrorInvalidCalExcitFrequency = nidaqmx_sys::DAQmxErrorInvalidCalExcitFrequency,
//         ErrorInvalidCalExcitVoltage = nidaqmx_sys::DAQmxErrorInvalidCalExcitVoltage,
//         ErrorInvalidAIInputSrc = nidaqmx_sys::DAQmxErrorInvalidAIInputSrc,
//         ErrorInvalidCalInputRef = nidaqmx_sys::DAQmxErrorInvalidCalInputRef,
//         ErrordBReferenceValueNotGreaterThanZero =
//             nidaqmx_sys::DAQmxErrordBReferenceValueNotGreaterThanZero,
//         ErrorSampleClockRateIsTooFastForSampleClockTiming =
//             nidaqmx_sys::DAQmxErrorSampleClockRateIsTooFastForSampleClockTiming,
//         ErrorDeviceNotUsableUntilColdStart = nidaqmx_sys::DAQmxErrorDeviceNotUsableUntilColdStart,
//         ErrorSampleClockRateIsTooFastForBurstTiming =
//             nidaqmx_sys::DAQmxErrorSampleClockRateIsTooFastForBurstTiming,
//         ErrorDevImportFailedAssociatedResourceIDsNotSupported =
//             nidaqmx_sys::DAQmxErrorDevImportFailedAssociatedResourceIDsNotSupported,
//         ErrorSCXI1600ImportNotSupported = nidaqmx_sys::DAQmxErrorSCXI1600ImportNotSupported,
//         ErrorPowerSupplyConfigurationFailed = nidaqmx_sys::DAQmxErrorPowerSupplyConfigurationFailed,
//         ErrorIEPEWithDCNotAllowed = nidaqmx_sys::DAQmxErrorIEPEWithDCNotAllowed,
//         ErrorMinTempForThermocoupleTypeOutsideAccuracyForPolyScaling =
//             nidaqmx_sys::DAQmxErrorMinTempForThermocoupleTypeOutsideAccuracyForPolyScaling,
//         ErrorDevImportFailedNoDeviceToOverwriteAndSimulationNotSupported =
//             nidaqmx_sys::DAQmxErrorDevImportFailedNoDeviceToOverwriteAndSimulationNotSupported,
//         ErrorDevImportFailedDeviceNotSupportedOnDestination =
//             nidaqmx_sys::DAQmxErrorDevImportFailedDeviceNotSupportedOnDestination,
//         ErrorFirmwareIsTooOld = nidaqmx_sys::DAQmxErrorFirmwareIsTooOld,
//         ErrorFirmwareCouldntUpdate = nidaqmx_sys::DAQmxErrorFirmwareCouldntUpdate,
//         ErrorFirmwareIsCorrupt = nidaqmx_sys::DAQmxErrorFirmwareIsCorrupt,
//         ErrorFirmwareTooNew = nidaqmx_sys::DAQmxErrorFirmwareTooNew,
//         ErrorSampClockCannotBeExportedFromExternalSampClockSrc =
//             nidaqmx_sys::DAQmxErrorSampClockCannotBeExportedFromExternalSampClockSrc,
//         ErrorPhysChanReservedForInputWhenDesiredForOutput =
//             nidaqmx_sys::DAQmxErrorPhysChanReservedForInputWhenDesiredForOutput,
//         ErrorPhysChanReservedForOutputWhenDesiredForInput =
//             nidaqmx_sys::DAQmxErrorPhysChanReservedForOutputWhenDesiredForInput,
//         ErrorSpecifiedCDAQSlotNotEmpty = nidaqmx_sys::DAQmxErrorSpecifiedCDAQSlotNotEmpty,
//         ErrorDeviceDoesNotSupportSimulation = nidaqmx_sys::DAQmxErrorDeviceDoesNotSupportSimulation,
//         ErrorInvalidCDAQSlotNumberSpecd = nidaqmx_sys::DAQmxErrorInvalidCDAQSlotNumberSpecd,
//         ErrorCSeriesModSimMustMatchCDAQChassisSim =
//             nidaqmx_sys::DAQmxErrorCSeriesModSimMustMatchCDAQChassisSim,
//         ErrorSCCCabledDevMustNotBeSimWhenSCCCarrierIsNotSim =
//             nidaqmx_sys::DAQmxErrorSCCCabledDevMustNotBeSimWhenSCCCarrierIsNotSim,
//         ErrorSCCModSimMustMatchSCCCarrierSim =
//             nidaqmx_sys::DAQmxErrorSCCModSimMustMatchSCCCarrierSim,
//         ErrorSCXIModuleDoesNotSupportSimulation =
//             nidaqmx_sys::DAQmxErrorSCXIModuleDoesNotSupportSimulation,
//         ErrorSCXICableDevMustNotBeSimWhenModIsNotSim =
//             nidaqmx_sys::DAQmxErrorSCXICableDevMustNotBeSimWhenModIsNotSim,
//         ErrorSCXIDigitizerSimMustNotBeSimWhenModIsNotSim =
//             nidaqmx_sys::DAQmxErrorSCXIDigitizerSimMustNotBeSimWhenModIsNotSim,
//         ErrorSCXIModSimMustMatchSCXIChassisSim =
//             nidaqmx_sys::DAQmxErrorSCXIModSimMustMatchSCXIChassisSim,
//         ErrorSimPXIDevReqSlotAndChassisSpecd =
//             nidaqmx_sys::DAQmxErrorSimPXIDevReqSlotAndChassisSpecd,
//         ErrorSimDevConflictWithRealDev = nidaqmx_sys::DAQmxErrorSimDevConflictWithRealDev,
//         ErrorInsufficientDataForCalibration = nidaqmx_sys::DAQmxErrorInsufficientDataForCalibration,
//         ErrorTriggerChannelMustBeEnabled = nidaqmx_sys::DAQmxErrorTriggerChannelMustBeEnabled,
//         ErrorCalibrationDataConflictCouldNotBeResolved =
//             nidaqmx_sys::DAQmxErrorCalibrationDataConflictCouldNotBeResolved,
//         ErrorSoftwareTooNewForSelfCalibrationData =
//             nidaqmx_sys::DAQmxErrorSoftwareTooNewForSelfCalibrationData,
//         ErrorSoftwareTooNewForExtCalibrationData =
//             nidaqmx_sys::DAQmxErrorSoftwareTooNewForExtCalibrationData,
//         ErrorSelfCalibrationDataTooNewForSoftware =
//             nidaqmx_sys::DAQmxErrorSelfCalibrationDataTooNewForSoftware,
//         ErrorExtCalibrationDataTooNewForSoftware =
//             nidaqmx_sys::DAQmxErrorExtCalibrationDataTooNewForSoftware,
//         ErrorSoftwareTooNewForEEPROM = nidaqmx_sys::DAQmxErrorSoftwareTooNewForEEPROM,
//         ErrorEEPROMTooNewForSoftware = nidaqmx_sys::DAQmxErrorEEPROMTooNewForSoftware,
//         ErrorSoftwareTooNewForHardware = nidaqmx_sys::DAQmxErrorSoftwareTooNewForHardware,
//         ErrorHardwareTooNewForSoftware = nidaqmx_sys::DAQmxErrorHardwareTooNewForSoftware,
//         ErrorTaskCannotRestartFirstSampNotAvailToGenerate =
//             nidaqmx_sys::DAQmxErrorTaskCannotRestartFirstSampNotAvailToGenerate,
//         ErrorOnlyUseStartTrigSrcPrptyWithDevDataLines =
//             nidaqmx_sys::DAQmxErrorOnlyUseStartTrigSrcPrptyWithDevDataLines,
//         ErrorOnlyUsePauseTrigSrcPrptyWithDevDataLines =
//             nidaqmx_sys::DAQmxErrorOnlyUsePauseTrigSrcPrptyWithDevDataLines,
//         ErrorOnlyUseRefTrigSrcPrptyWithDevDataLines =
//             nidaqmx_sys::DAQmxErrorOnlyUseRefTrigSrcPrptyWithDevDataLines,
//         ErrorPauseTrigDigPatternSizeDoesNotMatchSrcSize =
//             nidaqmx_sys::DAQmxErrorPauseTrigDigPatternSizeDoesNotMatchSrcSize,
//         ErrorLineConflictCDAQ = nidaqmx_sys::DAQmxErrorLineConflictCDAQ,
//         ErrorCannotWriteBeyondFinalFiniteSample =
//             nidaqmx_sys::DAQmxErrorCannotWriteBeyondFinalFiniteSample,
//         ErrorRefAndStartTriggerSrcCantBeSame =
//             nidaqmx_sys::DAQmxErrorRefAndStartTriggerSrcCantBeSame,
//         ErrorMemMappingIncompatibleWithPhysChansInTask =
//             nidaqmx_sys::DAQmxErrorMemMappingIncompatibleWithPhysChansInTask,
//         ErrorOutputDriveTypeMemMappingConflict =
//             nidaqmx_sys::DAQmxErrorOutputDriveTypeMemMappingConflict,
//         ErrorCAPIDeviceIndexInvalid = nidaqmx_sys::DAQmxErrorCAPIDeviceIndexInvalid,
//         ErrorRatiometricDevicesMustUseExcitationForScaling =
//             nidaqmx_sys::DAQmxErrorRatiometricDevicesMustUseExcitationForScaling,
//         ErrorPropertyRequiresPerDeviceCfg = nidaqmx_sys::DAQmxErrorPropertyRequiresPerDeviceCfg,
//         ErrorAICouplingAndAIInputSourceConflict =
//             nidaqmx_sys::DAQmxErrorAICouplingAndAIInputSourceConflict,
//         ErrorOnlyOneTaskCanPerformDOMemoryMappingAtATime =
//             nidaqmx_sys::DAQmxErrorOnlyOneTaskCanPerformDOMemoryMappingAtATime,
//         ErrorTooManyChansForAnalogRefTrigCDAQ =
//             nidaqmx_sys::DAQmxErrorTooManyChansForAnalogRefTrigCDAQ,
//         ErrorSpecdPropertyValueIsIncompatibleWithSampleTimingType =
//             nidaqmx_sys::DAQmxErrorSpecdPropertyValueIsIncompatibleWithSampleTimingType,
//         ErrorCPUNotSupportedRequireSSE = nidaqmx_sys::DAQmxErrorCPUNotSupportedRequireSSE,
//         ErrorSpecdPropertyValueIsIncompatibleWithSampleTimingResponseMode =
//             nidaqmx_sys::DAQmxErrorSpecdPropertyValueIsIncompatibleWithSampleTimingResponseMode,
//         ErrorConflictingNextWriteIsLastAndRegenModeProperties =
//             nidaqmx_sys::DAQmxErrorConflictingNextWriteIsLastAndRegenModeProperties,
//         ErrorMStudioOperationDoesNotSupportDeviceContext =
//             nidaqmx_sys::DAQmxErrorMStudioOperationDoesNotSupportDeviceContext,
//         ErrorPropertyValueInChannelExpansionContextInvalid =
//             nidaqmx_sys::DAQmxErrorPropertyValueInChannelExpansionContextInvalid,
//         ErrorHWTimedNonBufferedAONotSupported =
//             nidaqmx_sys::DAQmxErrorHWTimedNonBufferedAONotSupported,
//         ErrorWaveformLengthNotMultOfQuantum = nidaqmx_sys::DAQmxErrorWaveformLengthNotMultOfQuantum,
//         ErrorDSAExpansionMixedBoardsWrongOrderInPXIChassis =
//             nidaqmx_sys::DAQmxErrorDSAExpansionMixedBoardsWrongOrderInPXIChassis,
//         ErrorPowerLevelTooLowForOOK = nidaqmx_sys::DAQmxErrorPowerLevelTooLowForOOK,
//         ErrorDeviceComponentTestFailure = nidaqmx_sys::DAQmxErrorDeviceComponentTestFailure,
//         ErrorUserDefinedWfmWithOOKUnsupported =
//             nidaqmx_sys::DAQmxErrorUserDefinedWfmWithOOKUnsupported,
//         ErrorInvalidDigitalModulationUserDefinedWaveform =
//             nidaqmx_sys::DAQmxErrorInvalidDigitalModulationUserDefinedWaveform,
//         ErrorBothRefInAndRefOutEnabled = nidaqmx_sys::DAQmxErrorBothRefInAndRefOutEnabled,
//         ErrorBothAnalogAndDigitalModulationEnabled =
//             nidaqmx_sys::DAQmxErrorBothAnalogAndDigitalModulationEnabled,
//         ErrorBufferedOpsNotSupportedInSpecdSlotForCDAQ =
//             nidaqmx_sys::DAQmxErrorBufferedOpsNotSupportedInSpecdSlotForCDAQ,
//         ErrorPhysChanNotSupportedInSpecdSlotForCDAQ =
//             nidaqmx_sys::DAQmxErrorPhysChanNotSupportedInSpecdSlotForCDAQ,
//         ErrorResourceReservedWithConflictingSettings =
//             nidaqmx_sys::DAQmxErrorResourceReservedWithConflictingSettings,
//         ErrorInconsistentAnalogTrigSettingsCDAQ =
//             nidaqmx_sys::DAQmxErrorInconsistentAnalogTrigSettingsCDAQ,
//         ErrorTooManyChansForAnalogPauseTrigCDAQ =
//             nidaqmx_sys::DAQmxErrorTooManyChansForAnalogPauseTrigCDAQ,
//         ErrorAnalogTrigNotFirstInScanListCDAQ =
//             nidaqmx_sys::DAQmxErrorAnalogTrigNotFirstInScanListCDAQ,
//         ErrorTooManyChansGivenTimingType = nidaqmx_sys::DAQmxErrorTooManyChansGivenTimingType,
//         ErrorSampClkTimebaseDivWithExtSampClk =
//             nidaqmx_sys::DAQmxErrorSampClkTimebaseDivWithExtSampClk,
//         ErrorCantSaveTaskWithPerDeviceTimingProperties =
//             nidaqmx_sys::DAQmxErrorCantSaveTaskWithPerDeviceTimingProperties,
//         ErrorConflictingAutoZeroMode = nidaqmx_sys::DAQmxErrorConflictingAutoZeroMode,
//         ErrorSampClkRateNotSupportedWithEAREnabled =
//             nidaqmx_sys::DAQmxErrorSampClkRateNotSupportedWithEAREnabled,
//         ErrorSampClkTimebaseRateNotSpecd = nidaqmx_sys::DAQmxErrorSampClkTimebaseRateNotSpecd,
//         ErrorSessionCorruptedByDLLReload = nidaqmx_sys::DAQmxErrorSessionCorruptedByDLLReload,
//         ErrorActiveDevNotSupportedWithChanExpansion =
//             nidaqmx_sys::DAQmxErrorActiveDevNotSupportedWithChanExpansion,
//         ErrorSampClkRateInvalid = nidaqmx_sys::DAQmxErrorSampClkRateInvalid,
//         ErrorExtSyncPulseSrcCannotBeExported =
//             nidaqmx_sys::DAQmxErrorExtSyncPulseSrcCannotBeExported,
//         ErrorSyncPulseMinDelayToStartNeededForExtSyncPulseSrc =
//             nidaqmx_sys::DAQmxErrorSyncPulseMinDelayToStartNeededForExtSyncPulseSrc,
//         ErrorSyncPulseSrcInvalid = nidaqmx_sys::DAQmxErrorSyncPulseSrcInvalid,
//         ErrorSampClkTimebaseRateInvalid = nidaqmx_sys::DAQmxErrorSampClkTimebaseRateInvalid,
//         ErrorSampClkTimebaseSrcInvalid = nidaqmx_sys::DAQmxErrorSampClkTimebaseSrcInvalid,
//         ErrorSampClkRateMustBeSpecd = nidaqmx_sys::DAQmxErrorSampClkRateMustBeSpecd,
//         ErrorInvalidAttributeName = nidaqmx_sys::DAQmxErrorInvalidAttributeName,
//         ErrorCJCChanNameMustBeSetWhenCJCSrcIsScannableChan =
//             nidaqmx_sys::DAQmxErrorCJCChanNameMustBeSetWhenCJCSrcIsScannableChan,
//         ErrorHiddenChanMissingInChansPropertyInCfgFile =
//             nidaqmx_sys::DAQmxErrorHiddenChanMissingInChansPropertyInCfgFile,
//         ErrorChanNamesNotSpecdInCfgFile = nidaqmx_sys::DAQmxErrorChanNamesNotSpecdInCfgFile,
//         ErrorDuplicateHiddenChanNamesInCfgFile =
//             nidaqmx_sys::DAQmxErrorDuplicateHiddenChanNamesInCfgFile,
//         ErrorDuplicateChanNameInCfgFile = nidaqmx_sys::DAQmxErrorDuplicateChanNameInCfgFile,
//         ErrorInvalidSCCModuleForSlotSpecd = nidaqmx_sys::DAQmxErrorInvalidSCCModuleForSlotSpecd,
//         ErrorInvalidSCCSlotNumberSpecd = nidaqmx_sys::DAQmxErrorInvalidSCCSlotNumberSpecd,
//         ErrorInvalidSectionIdentifier = nidaqmx_sys::DAQmxErrorInvalidSectionIdentifier,
//         ErrorInvalidSectionName = nidaqmx_sys::DAQmxErrorInvalidSectionName,
//         ErrorDAQmxVersionNotSupported = nidaqmx_sys::DAQmxErrorDAQmxVersionNotSupported,
//         ErrorSWObjectsFoundInFile = nidaqmx_sys::DAQmxErrorSWObjectsFoundInFile,
//         ErrorHWObjectsFoundInFile = nidaqmx_sys::DAQmxErrorHWObjectsFoundInFile,
//         ErrorLocalChannelSpecdWithNoParentTask =
//             nidaqmx_sys::DAQmxErrorLocalChannelSpecdWithNoParentTask,
//         ErrorTaskReferencesMissingLocalChannel =
//             nidaqmx_sys::DAQmxErrorTaskReferencesMissingLocalChannel,
//         ErrorTaskReferencesLocalChannelFromOtherTask =
//             nidaqmx_sys::DAQmxErrorTaskReferencesLocalChannelFromOtherTask,
//         ErrorTaskMissingChannelProperty = nidaqmx_sys::DAQmxErrorTaskMissingChannelProperty,
//         ErrorInvalidLocalChanName = nidaqmx_sys::DAQmxErrorInvalidLocalChanName,
//         ErrorInvalidEscapeCharacterInString = nidaqmx_sys::DAQmxErrorInvalidEscapeCharacterInString,
//         ErrorInvalidTableIdentifier = nidaqmx_sys::DAQmxErrorInvalidTableIdentifier,
//         ErrorValueFoundInInvalidColumn = nidaqmx_sys::DAQmxErrorValueFoundInInvalidColumn,
//         ErrorMissingStartOfTable = nidaqmx_sys::DAQmxErrorMissingStartOfTable,
//         ErrorFileMissingRequiredDAQmxHeader = nidaqmx_sys::DAQmxErrorFileMissingRequiredDAQmxHeader,
//         ErrorDeviceIDDoesNotMatch = nidaqmx_sys::DAQmxErrorDeviceIDDoesNotMatch,
//         ErrorBufferedOperationsNotSupportedOnSelectedLines =
//             nidaqmx_sys::DAQmxErrorBufferedOperationsNotSupportedOnSelectedLines,
//         ErrorPropertyConflictsWithScale = nidaqmx_sys::DAQmxErrorPropertyConflictsWithScale,
//         ErrorInvalidINIFileSyntax = nidaqmx_sys::DAQmxErrorInvalidINIFileSyntax,
//         ErrorDeviceInfoFailedPXIChassisNotIdentified =
//             nidaqmx_sys::DAQmxErrorDeviceInfoFailedPXIChassisNotIdentified,
//         ErrorInvalidHWProductNumber = nidaqmx_sys::DAQmxErrorInvalidHWProductNumber,
//         ErrorInvalidHWProductType = nidaqmx_sys::DAQmxErrorInvalidHWProductType,
//         ErrorInvalidNumericFormatSpecd = nidaqmx_sys::DAQmxErrorInvalidNumericFormatSpecd,
//         ErrorDuplicatePropertyInObject = nidaqmx_sys::DAQmxErrorDuplicatePropertyInObject,
//         ErrorInvalidEnumValueSpecd = nidaqmx_sys::DAQmxErrorInvalidEnumValueSpecd,
//         ErrorTEDSSensorPhysicalChannelConflict =
//             nidaqmx_sys::DAQmxErrorTEDSSensorPhysicalChannelConflict,
//         ErrorTooManyPhysicalChansForTEDSInterfaceSpecd =
//             nidaqmx_sys::DAQmxErrorTooManyPhysicalChansForTEDSInterfaceSpecd,
//         ErrorIncapableTEDSInterfaceControllingDeviceSpecd =
//             nidaqmx_sys::DAQmxErrorIncapableTEDSInterfaceControllingDeviceSpecd,
//         ErrorSCCCarrierSpecdIsMissing = nidaqmx_sys::DAQmxErrorSCCCarrierSpecdIsMissing,
//         ErrorIncapableSCCDigitizingDeviceSpecd =
//             nidaqmx_sys::DAQmxErrorIncapableSCCDigitizingDeviceSpecd,
//         ErrorAccessorySettingNotApplicable = nidaqmx_sys::DAQmxErrorAccessorySettingNotApplicable,
//         ErrorDeviceAndConnectorSpecdAlreadyOccupied =
//             nidaqmx_sys::DAQmxErrorDeviceAndConnectorSpecdAlreadyOccupied,
//         ErrorIllegalAccessoryTypeForDeviceSpecd =
//             nidaqmx_sys::DAQmxErrorIllegalAccessoryTypeForDeviceSpecd,
//         ErrorInvalidDeviceConnectorNumberSpecd =
//             nidaqmx_sys::DAQmxErrorInvalidDeviceConnectorNumberSpecd,
//         ErrorInvalidAccessoryName = nidaqmx_sys::DAQmxErrorInvalidAccessoryName,
//         ErrorMoreThanOneMatchForSpecdDevice = nidaqmx_sys::DAQmxErrorMoreThanOneMatchForSpecdDevice,
//         ErrorNoMatchForSpecdDevice = nidaqmx_sys::DAQmxErrorNoMatchForSpecdDevice,
//         ErrorProductTypeAndProductNumberConflict =
//             nidaqmx_sys::DAQmxErrorProductTypeAndProductNumberConflict,
//         ErrorExtraPropertyDetectedInSpecdObject =
//             nidaqmx_sys::DAQmxErrorExtraPropertyDetectedInSpecdObject,
//         ErrorRequiredPropertyMissing = nidaqmx_sys::DAQmxErrorRequiredPropertyMissing,
//         ErrorCantSetAuthorForLocalChan = nidaqmx_sys::DAQmxErrorCantSetAuthorForLocalChan,
//         ErrorInvalidTimeValue = nidaqmx_sys::DAQmxErrorInvalidTimeValue,
//         ErrorInvalidTimeFormat = nidaqmx_sys::DAQmxErrorInvalidTimeFormat,
//         ErrorDigDevChansSpecdInModeOtherThanParallel =
//             nidaqmx_sys::DAQmxErrorDigDevChansSpecdInModeOtherThanParallel,
//         ErrorCascadeDigitizationModeNotSupported =
//             nidaqmx_sys::DAQmxErrorCascadeDigitizationModeNotSupported,
//         ErrorSpecdSlotAlreadyOccupied = nidaqmx_sys::DAQmxErrorSpecdSlotAlreadyOccupied,
//         ErrorInvalidSCXISlotNumberSpecd = nidaqmx_sys::DAQmxErrorInvalidSCXISlotNumberSpecd,
//         ErrorAddressAlreadyInUse = nidaqmx_sys::DAQmxErrorAddressAlreadyInUse,
//         ErrorSpecdDeviceDoesNotSupportRTSI = nidaqmx_sys::DAQmxErrorSpecdDeviceDoesNotSupportRTSI,
//         ErrorSpecdDeviceIsAlreadyOnRTSIBus = nidaqmx_sys::DAQmxErrorSpecdDeviceIsAlreadyOnRTSIBus,
//         ErrorIdentifierInUse = nidaqmx_sys::DAQmxErrorIdentifierInUse,
//         ErrorWaitForNextSampleClockOrReadDetected3OrMoreMissedSampClks =
//             nidaqmx_sys::DAQmxErrorWaitForNextSampleClockOrReadDetected3OrMoreMissedSampClks,
//         ErrorHWTimedAndDataXferPIO = nidaqmx_sys::DAQmxErrorHWTimedAndDataXferPIO,
//         ErrorNonBufferedAndHWTimed = nidaqmx_sys::DAQmxErrorNonBufferedAndHWTimed,
//         ErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriodPolled =
//             nidaqmx_sys::DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriodPolled,
//         ErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriod2 =
//             nidaqmx_sys::DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriod2,
//         ErrorCOCannotKeepUpInHWTimedSinglePointPolled =
//             nidaqmx_sys::DAQmxErrorCOCannotKeepUpInHWTimedSinglePointPolled,
//         ErrorWriteRecoveryCannotKeepUpInHWTimedSinglePoint =
//             nidaqmx_sys::DAQmxErrorWriteRecoveryCannotKeepUpInHWTimedSinglePoint,
//         ErrorNoChangeDetectionOnSelectedLineForDevice =
//             nidaqmx_sys::DAQmxErrorNoChangeDetectionOnSelectedLineForDevice,
//         ErrorSMIOPauseTriggersNotSupportedWithChannelExpansion =
//             nidaqmx_sys::DAQmxErrorSMIOPauseTriggersNotSupportedWithChannelExpansion,
//         ErrorClockMasterForExternalClockNotLongestPipeline =
//             nidaqmx_sys::DAQmxErrorClockMasterForExternalClockNotLongestPipeline,
//         ErrorUnsupportedUnicodeByteOrderMarker =
//             nidaqmx_sys::DAQmxErrorUnsupportedUnicodeByteOrderMarker,
//         ErrorTooManyInstructionsInLoopInScript =
//             nidaqmx_sys::DAQmxErrorTooManyInstructionsInLoopInScript,
//         ErrorPLLNotLocked = nidaqmx_sys::DAQmxErrorPLLNotLocked,
//         ErrorIfElseBlockNotAllowedInFiniteRepeatLoopInScript =
//             nidaqmx_sys::DAQmxErrorIfElseBlockNotAllowedInFiniteRepeatLoopInScript,
//         ErrorIfElseBlockNotAllowedInConditionalRepeatLoopInScript =
//             nidaqmx_sys::DAQmxErrorIfElseBlockNotAllowedInConditionalRepeatLoopInScript,
//         ErrorClearIsLastInstructionInIfElseBlockInScript =
//             nidaqmx_sys::DAQmxErrorClearIsLastInstructionInIfElseBlockInScript,
//         ErrorInvalidWaitDurationBeforeIfElseBlockInScript =
//             nidaqmx_sys::DAQmxErrorInvalidWaitDurationBeforeIfElseBlockInScript,
//         ErrorMarkerPosInvalidBeforeIfElseBlockInScript =
//             nidaqmx_sys::DAQmxErrorMarkerPosInvalidBeforeIfElseBlockInScript,
//         ErrorInvalidSubsetLengthBeforeIfElseBlockInScript =
//             nidaqmx_sys::DAQmxErrorInvalidSubsetLengthBeforeIfElseBlockInScript,
//         ErrorInvalidWaveformLengthBeforeIfElseBlockInScript =
//             nidaqmx_sys::DAQmxErrorInvalidWaveformLengthBeforeIfElseBlockInScript,
//         ErrorGenerateOrFiniteWaitInstructionExpectedBeforeIfElseBlockInScript =
//             nidaqmx_sys::DAQmxErrorGenerateOrFiniteWaitInstructionExpectedBeforeIfElseBlockInScript,
//         ErrorCalPasswordNotSupported = nidaqmx_sys::DAQmxErrorCalPasswordNotSupported,
//         ErrorSetupCalNeededBeforeAdjustCal = nidaqmx_sys::DAQmxErrorSetupCalNeededBeforeAdjustCal,
//         ErrorMultipleChansNotSupportedDuringCalSetup =
//             nidaqmx_sys::DAQmxErrorMultipleChansNotSupportedDuringCalSetup,
//         ErrorDevCannotBeAccessed = nidaqmx_sys::DAQmxErrorDevCannotBeAccessed,
//         ErrorSampClkRateDoesntMatchSampClkSrc =
//             nidaqmx_sys::DAQmxErrorSampClkRateDoesntMatchSampClkSrc,
//         ErrorSampClkRateNotSupportedWithEARDisabled =
//             nidaqmx_sys::DAQmxErrorSampClkRateNotSupportedWithEARDisabled,
//         ErrorLabVIEWVersionDoesntSupportDAQmxEvents =
//             nidaqmx_sys::DAQmxErrorLabVIEWVersionDoesntSupportDAQmxEvents,
//         ErrorCOReadyForNewValNotSupportedWithOnDemand =
//             nidaqmx_sys::DAQmxErrorCOReadyForNewValNotSupportedWithOnDemand,
//         ErrorCIHWTimedSinglePointNotSupportedForMeasType =
//             nidaqmx_sys::DAQmxErrorCIHWTimedSinglePointNotSupportedForMeasType,
//         ErrorOnDemandNotSupportedWithHWTimedSinglePoint =
//             nidaqmx_sys::DAQmxErrorOnDemandNotSupportedWithHWTimedSinglePoint,
//         ErrorHWTimedSinglePointAndDataXferNotProgIO =
//             nidaqmx_sys::DAQmxErrorHWTimedSinglePointAndDataXferNotProgIO,
//         ErrorMemMapAndHWTimedSinglePoint = nidaqmx_sys::DAQmxErrorMemMapAndHWTimedSinglePoint,
//         ErrorCannotSetPropertyWhenHWTimedSinglePointTaskIsRunning =
//             nidaqmx_sys::DAQmxErrorCannotSetPropertyWhenHWTimedSinglePointTaskIsRunning,
//         ErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriod =
//             nidaqmx_sys::DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriod,
//         ErrorTooManyEventsGenerated = nidaqmx_sys::DAQmxErrorTooManyEventsGenerated,
//         ErrorMStudioCppRemoveEventsBeforeStop =
//             nidaqmx_sys::DAQmxErrorMStudioCppRemoveEventsBeforeStop,
//         ErrorCAPICannotRegisterSyncEventsFromMultipleThreads =
//             nidaqmx_sys::DAQmxErrorCAPICannotRegisterSyncEventsFromMultipleThreads,
//         ErrorReadWaitNextSampClkWaitMismatchTwo =
//             nidaqmx_sys::DAQmxErrorReadWaitNextSampClkWaitMismatchTwo,
//         ErrorReadWaitNextSampClkWaitMismatchOne =
//             nidaqmx_sys::DAQmxErrorReadWaitNextSampClkWaitMismatchOne,
//         ErrorDAQmxSignalEventTypeNotSupportedByChanTypesOrDevicesInTask =
//             nidaqmx_sys::DAQmxErrorDAQmxSignalEventTypeNotSupportedByChanTypesOrDevicesInTask,
//         ErrorCannotUnregisterDAQmxSoftwareEventWhileTaskIsRunning =
//             nidaqmx_sys::DAQmxErrorCannotUnregisterDAQmxSoftwareEventWhileTaskIsRunning,
//         ErrorAutoStartWriteNotAllowedEventRegistered =
//             nidaqmx_sys::DAQmxErrorAutoStartWriteNotAllowedEventRegistered,
//         ErrorAutoStartReadNotAllowedEventRegistered =
//             nidaqmx_sys::DAQmxErrorAutoStartReadNotAllowedEventRegistered,
//         ErrorCannotGetPropertyWhenTaskNotReservedCommittedOrRunning =
//             nidaqmx_sys::DAQmxErrorCannotGetPropertyWhenTaskNotReservedCommittedOrRunning,
//         ErrorSignalEventsNotSupportedByDevice =
//             nidaqmx_sys::DAQmxErrorSignalEventsNotSupportedByDevice,
//         ErrorEveryNSamplesAcqIntoBufferEventNotSupportedByDevice =
//             nidaqmx_sys::DAQmxErrorEveryNSamplesAcqIntoBufferEventNotSupportedByDevice,
//         ErrorEveryNSampsTransferredFromBufferEventNotSupportedByDevice =
//             nidaqmx_sys::DAQmxErrorEveryNSampsTransferredFromBufferEventNotSupportedByDevice,
//         ErrorCAPISyncEventsTaskStateChangeNotAllowedFromDifferentThread =
//             nidaqmx_sys::DAQmxErrorCAPISyncEventsTaskStateChangeNotAllowedFromDifferentThread,
//         ErrorDAQmxSWEventsWithDifferentCallMechanisms =
//             nidaqmx_sys::DAQmxErrorDAQmxSWEventsWithDifferentCallMechanisms,
//         ErrorCantSaveChanWithPolyCalScaleAndAllowInteractiveEdit =
//             nidaqmx_sys::DAQmxErrorCantSaveChanWithPolyCalScaleAndAllowInteractiveEdit,
//         ErrorChanDoesNotSupportCJC = nidaqmx_sys::DAQmxErrorChanDoesNotSupportCJC,
//         ErrorCOReadyForNewValNotSupportedWithHWTimedSinglePoint =
//             nidaqmx_sys::DAQmxErrorCOReadyForNewValNotSupportedWithHWTimedSinglePoint,
//         ErrorDACAllowConnToGndNotSupportedByDevWhenRefSrcExt =
//             nidaqmx_sys::DAQmxErrorDACAllowConnToGndNotSupportedByDevWhenRefSrcExt,
//         ErrorCantGetPropertyTaskNotRunning = nidaqmx_sys::DAQmxErrorCantGetPropertyTaskNotRunning,
//         ErrorCantSetPropertyTaskNotRunning = nidaqmx_sys::DAQmxErrorCantSetPropertyTaskNotRunning,
//         ErrorCantSetPropertyTaskNotRunningCommitted =
//             nidaqmx_sys::DAQmxErrorCantSetPropertyTaskNotRunningCommitted,
//         ErrorAIEveryNSampsEventIntervalNotMultipleOf2 =
//             nidaqmx_sys::DAQmxErrorAIEveryNSampsEventIntervalNotMultipleOf2,
//         ErrorInvalidTEDSPhysChanNotAI = nidaqmx_sys::DAQmxErrorInvalidTEDSPhysChanNotAI,
//         ErrorCAPICannotPerformTaskOperationInAsyncCallback =
//             nidaqmx_sys::DAQmxErrorCAPICannotPerformTaskOperationInAsyncCallback,
//         ErrorEveryNSampsTransferredFromBufferEventAlreadyRegistered =
//             nidaqmx_sys::DAQmxErrorEveryNSampsTransferredFromBufferEventAlreadyRegistered,
//         ErrorEveryNSampsAcqIntoBufferEventAlreadyRegistered =
//             nidaqmx_sys::DAQmxErrorEveryNSampsAcqIntoBufferEventAlreadyRegistered,
//         ErrorEveryNSampsTransferredFromBufferNotForInput =
//             nidaqmx_sys::DAQmxErrorEveryNSampsTransferredFromBufferNotForInput,
//         ErrorEveryNSampsAcqIntoBufferNotForOutput =
//             nidaqmx_sys::DAQmxErrorEveryNSampsAcqIntoBufferNotForOutput,
//         ErrorAOSampTimingTypeDifferentIn2Tasks =
//             nidaqmx_sys::DAQmxErrorAOSampTimingTypeDifferentIn2Tasks,
//         ErrorCouldNotDownloadFirmwareHWDamaged =
//             nidaqmx_sys::DAQmxErrorCouldNotDownloadFirmwareHWDamaged,
//         ErrorCouldNotDownloadFirmwareFileMissingOrDamaged =
//             nidaqmx_sys::DAQmxErrorCouldNotDownloadFirmwareFileMissingOrDamaged,
//         ErrorCannotRegisterDAQmxSoftwareEventWhileTaskIsRunning =
//             nidaqmx_sys::DAQmxErrorCannotRegisterDAQmxSoftwareEventWhileTaskIsRunning,
//         ErrorDifferentRawDataCompression = nidaqmx_sys::DAQmxErrorDifferentRawDataCompression,
//         ErrorConfiguredTEDSInterfaceDevNotDetected =
//             nidaqmx_sys::DAQmxErrorConfiguredTEDSInterfaceDevNotDetected,
//         ErrorCompressedSampSizeExceedsResolution =
//             nidaqmx_sys::DAQmxErrorCompressedSampSizeExceedsResolution,
//         ErrorChanDoesNotSupportCompression = nidaqmx_sys::DAQmxErrorChanDoesNotSupportCompression,
//         ErrorDifferentRawDataFormats = nidaqmx_sys::DAQmxErrorDifferentRawDataFormats,
//         ErrorSampClkOutputTermIncludesStartTrigSrc =
//             nidaqmx_sys::DAQmxErrorSampClkOutputTermIncludesStartTrigSrc,
//         ErrorStartTrigSrcEqualToSampClkSrc = nidaqmx_sys::DAQmxErrorStartTrigSrcEqualToSampClkSrc,
//         ErrorEventOutputTermIncludesTrigSrc = nidaqmx_sys::DAQmxErrorEventOutputTermIncludesTrigSrc,
//         ErrorCOMultipleWritesBetweenSampClks =
//             nidaqmx_sys::DAQmxErrorCOMultipleWritesBetweenSampClks,
//         ErrorDoneEventAlreadyRegistered = nidaqmx_sys::DAQmxErrorDoneEventAlreadyRegistered,
//         ErrorSignalEventAlreadyRegistered = nidaqmx_sys::DAQmxErrorSignalEventAlreadyRegistered,
//         ErrorCannotHaveTimedLoopAndDAQmxSignalEventsInSameTask =
//             nidaqmx_sys::DAQmxErrorCannotHaveTimedLoopAndDAQmxSignalEventsInSameTask,
//         ErrorNeedLabVIEW711PatchToUseDAQmxEvents =
//             nidaqmx_sys::DAQmxErrorNeedLabVIEW711PatchToUseDAQmxEvents,
//         ErrorStartFailedDueToWriteFailure = nidaqmx_sys::DAQmxErrorStartFailedDueToWriteFailure,
//         ErrorDataXferCustomThresholdNotDMAXferMethodSpecifiedForDev =
//             nidaqmx_sys::DAQmxErrorDataXferCustomThresholdNotDMAXferMethodSpecifiedForDev,
//         ErrorDataXferRequestConditionNotSpecifiedForCustomThreshold =
//             nidaqmx_sys::DAQmxErrorDataXferRequestConditionNotSpecifiedForCustomThreshold,
//         ErrorDataXferCustomThresholdNotSpecified =
//             nidaqmx_sys::DAQmxErrorDataXferCustomThresholdNotSpecified,
//         ErrorCAPISyncCallbackNotSupportedOnThisPlatform =
//             nidaqmx_sys::DAQmxErrorCAPISyncCallbackNotSupportedOnThisPlatform,
//         ErrorCalChanReversePolyCoefNotSpecd = nidaqmx_sys::DAQmxErrorCalChanReversePolyCoefNotSpecd,
//         ErrorCalChanForwardPolyCoefNotSpecd = nidaqmx_sys::DAQmxErrorCalChanForwardPolyCoefNotSpecd,
//         ErrorChanCalRepeatedNumberInPreScaledVals =
//             nidaqmx_sys::DAQmxErrorChanCalRepeatedNumberInPreScaledVals,
//         ErrorChanCalTableNumScaledNotEqualNumPrescaledVals =
//             nidaqmx_sys::DAQmxErrorChanCalTableNumScaledNotEqualNumPrescaledVals,
//         ErrorChanCalTableScaledValsNotSpecd = nidaqmx_sys::DAQmxErrorChanCalTableScaledValsNotSpecd,
//         ErrorChanCalTablePreScaledValsNotSpecd =
//             nidaqmx_sys::DAQmxErrorChanCalTablePreScaledValsNotSpecd,
//         ErrorChanCalScaleTypeNotSet = nidaqmx_sys::DAQmxErrorChanCalScaleTypeNotSet,
//         ErrorChanCalExpired = nidaqmx_sys::DAQmxErrorChanCalExpired,
//         ErrorChanCalExpirationDateNotSet = nidaqmx_sys::DAQmxErrorChanCalExpirationDateNotSet,
//         ErrorThreeOutputPortCombinationGivenSampTimingType653x =
//             nidaqmx_sys::DAQmxError3OutputPortCombinationGivenSampTimingType653x,
//         ErrorThreeInputPortCombinationGivenSampTimingType653x =
//             nidaqmx_sys::DAQmxError3InputPortCombinationGivenSampTimingType653x,
//         ErrorTwoOutputPortCombinationGivenSampTimingType653x =
//             nidaqmx_sys::DAQmxError2OutputPortCombinationGivenSampTimingType653x,
//         ErrorTwoInputPortCombinationGivenSampTimingType653x =
//             nidaqmx_sys::DAQmxError2InputPortCombinationGivenSampTimingType653x,
//         ErrorPatternMatcherMayBeUsedByOneTrigOnly =
//             nidaqmx_sys::DAQmxErrorPatternMatcherMayBeUsedByOneTrigOnly,
//         ErrorNoChansSpecdForPatternSource = nidaqmx_sys::DAQmxErrorNoChansSpecdForPatternSource,
//         ErrorChangeDetectionChanNotInTask = nidaqmx_sys::DAQmxErrorChangeDetectionChanNotInTask,
//         ErrorChangeDetectionChanNotTristated =
//             nidaqmx_sys::DAQmxErrorChangeDetectionChanNotTristated,
//         ErrorWaitModeValueNotSupportedNonBuffered =
//             nidaqmx_sys::DAQmxErrorWaitModeValueNotSupportedNonBuffered,
//         ErrorWaitModePropertyNotSupportedNonBuffered =
//             nidaqmx_sys::DAQmxErrorWaitModePropertyNotSupportedNonBuffered,
//         ErrorCantSavePerLineConfigDigChanSoInteractiveEditsAllowed =
//             nidaqmx_sys::DAQmxErrorCantSavePerLineConfigDigChanSoInteractiveEditsAllowed,
//         ErrorCantSaveNonPortMultiLineDigChanSoInteractiveEditsAllowed =
//             nidaqmx_sys::DAQmxErrorCantSaveNonPortMultiLineDigChanSoInteractiveEditsAllowed,
//         ErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalNoIrqOnDev =
//             nidaqmx_sys::DAQmxErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalNoIrqOnDev,
//         ErrorGlobalTaskNameAlreadyChanName = nidaqmx_sys::DAQmxErrorGlobalTaskNameAlreadyChanName,
//         ErrorGlobalChanNameAlreadyTaskName = nidaqmx_sys::DAQmxErrorGlobalChanNameAlreadyTaskName,
//         ErrorAOEveryNSampsEventIntervalNotMultipleOf2 =
//             nidaqmx_sys::DAQmxErrorAOEveryNSampsEventIntervalNotMultipleOf2,
//         ErrorSampleTimebaseDivisorNotSupportedGivenTimingType =
//             nidaqmx_sys::DAQmxErrorSampleTimebaseDivisorNotSupportedGivenTimingType,
//         ErrorHandshakeEventOutputTermNotSupportedGivenTimingType =
//             nidaqmx_sys::DAQmxErrorHandshakeEventOutputTermNotSupportedGivenTimingType,
//         ErrorChangeDetectionOutputTermNotSupportedGivenTimingType =
//             nidaqmx_sys::DAQmxErrorChangeDetectionOutputTermNotSupportedGivenTimingType,
//         ErrorReadyForTransferOutputTermNotSupportedGivenTimingType =
//             nidaqmx_sys::DAQmxErrorReadyForTransferOutputTermNotSupportedGivenTimingType,
//         ErrorRefTrigOutputTermNotSupportedGivenTimingType =
//             nidaqmx_sys::DAQmxErrorRefTrigOutputTermNotSupportedGivenTimingType,
//         ErrorStartTrigOutputTermNotSupportedGivenTimingType =
//             nidaqmx_sys::DAQmxErrorStartTrigOutputTermNotSupportedGivenTimingType,
//         ErrorSampClockOutputTermNotSupportedGivenTimingType =
//             nidaqmx_sys::DAQmxErrorSampClockOutputTermNotSupportedGivenTimingType,
//         ErrorMhz20TimebaseNotSupportedGivenTimingType =
//             nidaqmx_sys::DAQmxError20MhzTimebaseNotSupportedGivenTimingType,
//         ErrorSampClockSourceNotSupportedGivenTimingType =
//             nidaqmx_sys::DAQmxErrorSampClockSourceNotSupportedGivenTimingType,
//         ErrorRefTrigTypeNotSupportedGivenTimingType =
//             nidaqmx_sys::DAQmxErrorRefTrigTypeNotSupportedGivenTimingType,
//         ErrorPauseTrigTypeNotSupportedGivenTimingType =
//             nidaqmx_sys::DAQmxErrorPauseTrigTypeNotSupportedGivenTimingType,
//         ErrorHandshakeTrigTypeNotSupportedGivenTimingType =
//             nidaqmx_sys::DAQmxErrorHandshakeTrigTypeNotSupportedGivenTimingType,
//         ErrorStartTrigTypeNotSupportedGivenTimingType =
//             nidaqmx_sys::DAQmxErrorStartTrigTypeNotSupportedGivenTimingType,
//         ErrorRefClkSrcNotSupported = nidaqmx_sys::DAQmxErrorRefClkSrcNotSupported,
//         ErrorDataVoltageLowAndHighIncompatible =
//             nidaqmx_sys::DAQmxErrorDataVoltageLowAndHighIncompatible,
//         ErrorInvalidCharInDigPatternString = nidaqmx_sys::DAQmxErrorInvalidCharInDigPatternString,
//         ErrorCantUsePort3AloneGivenSampTimingTypeOn653x =
//             nidaqmx_sys::DAQmxErrorCantUsePort3AloneGivenSampTimingTypeOn653x,
//         ErrorCantUsePort1AloneGivenSampTimingTypeOn653x =
//             nidaqmx_sys::DAQmxErrorCantUsePort1AloneGivenSampTimingTypeOn653x,
//         ErrorPartialUseOfPhysicalLinesWithinPortNotSupported653x =
//             nidaqmx_sys::DAQmxErrorPartialUseOfPhysicalLinesWithinPortNotSupported653x,
//         ErrorPhysicalChanNotSupportedGivenSampTimingType653x =
//             nidaqmx_sys::DAQmxErrorPhysicalChanNotSupportedGivenSampTimingType653x,
//         ErrorCanExportOnlyDigEdgeTrigs = nidaqmx_sys::DAQmxErrorCanExportOnlyDigEdgeTrigs,
//         ErrorRefTrigDigPatternSizeDoesNotMatchSourceSize =
//             nidaqmx_sys::DAQmxErrorRefTrigDigPatternSizeDoesNotMatchSourceSize,
//         ErrorStartTrigDigPatternSizeDoesNotMatchSourceSize =
//             nidaqmx_sys::DAQmxErrorStartTrigDigPatternSizeDoesNotMatchSourceSize,
//         ErrorChangeDetectionRisingAndFallingEdgeChanDontMatch =
//             nidaqmx_sys::DAQmxErrorChangeDetectionRisingAndFallingEdgeChanDontMatch,
//         ErrorPhysicalChansForChangeDetectionAndPatternMatch653x =
//             nidaqmx_sys::DAQmxErrorPhysicalChansForChangeDetectionAndPatternMatch653x,
//         ErrorCanExportOnlyOnboardSampClk = nidaqmx_sys::DAQmxErrorCanExportOnlyOnboardSampClk,
//         ErrorInternalSampClkNotRisingEdge = nidaqmx_sys::DAQmxErrorInternalSampClkNotRisingEdge,
//         ErrorRefTrigDigPatternChanNotInTask = nidaqmx_sys::DAQmxErrorRefTrigDigPatternChanNotInTask,
//         ErrorRefTrigDigPatternChanNotTristated =
//             nidaqmx_sys::DAQmxErrorRefTrigDigPatternChanNotTristated,
//         ErrorStartTrigDigPatternChanNotInTask =
//             nidaqmx_sys::DAQmxErrorStartTrigDigPatternChanNotInTask,
//         ErrorStartTrigDigPatternChanNotTristated =
//             nidaqmx_sys::DAQmxErrorStartTrigDigPatternChanNotTristated,
//         ErrorPXIStarAndClock10Sync = nidaqmx_sys::DAQmxErrorPXIStarAndClock10Sync,
//         ErrorGlobalChanCannotBeSavedSoInteractiveEditsAllowed =
//             nidaqmx_sys::DAQmxErrorGlobalChanCannotBeSavedSoInteractiveEditsAllowed,
//         ErrorTaskCannotBeSavedSoInteractiveEditsAllowed =
//             nidaqmx_sys::DAQmxErrorTaskCannotBeSavedSoInteractiveEditsAllowed,
//         ErrorInvalidGlobalChan = nidaqmx_sys::DAQmxErrorInvalidGlobalChan,
//         ErrorEveryNSampsEventAlreadyRegistered =
//             nidaqmx_sys::DAQmxErrorEveryNSampsEventAlreadyRegistered,
//         ErrorEveryNSampsEventIntervalZeroNotSupported =
//             nidaqmx_sys::DAQmxErrorEveryNSampsEventIntervalZeroNotSupported,
//         ErrorChanSizeTooBigForU16PortWrite = nidaqmx_sys::DAQmxErrorChanSizeTooBigForU16PortWrite,
//         ErrorChanSizeTooBigForU16PortRead = nidaqmx_sys::DAQmxErrorChanSizeTooBigForU16PortRead,
//         ErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalWhenDMA =
//             nidaqmx_sys::DAQmxErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalWhenDMA,
//         ErrorWriteWhenTaskNotRunningCOTicks = nidaqmx_sys::DAQmxErrorWriteWhenTaskNotRunningCOTicks,
//         ErrorWriteWhenTaskNotRunningCOFreq = nidaqmx_sys::DAQmxErrorWriteWhenTaskNotRunningCOFreq,
//         ErrorWriteWhenTaskNotRunningCOTime = nidaqmx_sys::DAQmxErrorWriteWhenTaskNotRunningCOTime,
//         ErrorAOMinMaxNotSupportedDACRangeTooSmall =
//             nidaqmx_sys::DAQmxErrorAOMinMaxNotSupportedDACRangeTooSmall,
//         ErrorAOMinMaxNotSupportedGivenDACRange =
//             nidaqmx_sys::DAQmxErrorAOMinMaxNotSupportedGivenDACRange,
//         ErrorAOMinMaxNotSupportedGivenDACRangeAndOffsetVal =
//             nidaqmx_sys::DAQmxErrorAOMinMaxNotSupportedGivenDACRangeAndOffsetVal,
//         ErrorAOMinMaxNotSupportedDACOffsetValInappropriate =
//             nidaqmx_sys::DAQmxErrorAOMinMaxNotSupportedDACOffsetValInappropriate,
//         ErrorAOMinMaxNotSupportedGivenDACOffsetVal =
//             nidaqmx_sys::DAQmxErrorAOMinMaxNotSupportedGivenDACOffsetVal,
//         ErrorAOMinMaxNotSupportedDACRefValTooSmall =
//             nidaqmx_sys::DAQmxErrorAOMinMaxNotSupportedDACRefValTooSmall,
//         ErrorAOMinMaxNotSupportedGivenDACRefVal =
//             nidaqmx_sys::DAQmxErrorAOMinMaxNotSupportedGivenDACRefVal,
//         ErrorAOMinMaxNotSupportedGivenDACRefAndOffsetVal =
//             nidaqmx_sys::DAQmxErrorAOMinMaxNotSupportedGivenDACRefAndOffsetVal,
//         ErrorWhenAcqCompAndNumSampsPerChanExceedsOnBrdBufSize =
//             nidaqmx_sys::DAQmxErrorWhenAcqCompAndNumSampsPerChanExceedsOnBrdBufSize,
//         ErrorWhenAcqCompAndNoRefTrig = nidaqmx_sys::DAQmxErrorWhenAcqCompAndNoRefTrig,
//         ErrorWaitForNextSampClkNotSupported = nidaqmx_sys::DAQmxErrorWaitForNextSampClkNotSupported,
//         ErrorDevInUnidentifiedPXIChassis = nidaqmx_sys::DAQmxErrorDevInUnidentifiedPXIChassis,
//         ErrorMaxSoundPressureMicSensitivitRelatedAIPropertiesNotSupportedByDev = nidaqmx_sys::DAQmxErrorMaxSoundPressureMicSensitivitRelatedAIPropertiesNotSupportedByDev,
//         ErrorMaxSoundPressureAndMicSensitivityNotSupportedByDev =
//             nidaqmx_sys::DAQmxErrorMaxSoundPressureAndMicSensitivityNotSupportedByDev,
//         ErrorAOBufferSizeZeroForSampClkTimingType =
//             nidaqmx_sys::DAQmxErrorAOBufferSizeZeroForSampClkTimingType,
//         ErrorAOCallWriteBeforeStartForSampClkTimingType =
//             nidaqmx_sys::DAQmxErrorAOCallWriteBeforeStartForSampClkTimingType,
//         ErrorInvalidCalLowPassCutoffFreq = nidaqmx_sys::DAQmxErrorInvalidCalLowPassCutoffFreq,
//         ErrorSimulationCannotBeDisabledForDevCreatedAsSimulatedDev =
//             nidaqmx_sys::DAQmxErrorSimulationCannotBeDisabledForDevCreatedAsSimulatedDev,
//         ErrorCannotAddNewDevsAfterTaskConfiguration =
//             nidaqmx_sys::DAQmxErrorCannotAddNewDevsAfterTaskConfiguration,
//         ErrorDifftSyncPulseSrcAndSampClkTimebaseSrcDevMultiDevTask =
//             nidaqmx_sys::DAQmxErrorDifftSyncPulseSrcAndSampClkTimebaseSrcDevMultiDevTask,
//         ErrorTermWithoutDevInMultiDevTask = nidaqmx_sys::DAQmxErrorTermWithoutDevInMultiDevTask,
//         ErrorSyncNoDevSampClkTimebaseOrSyncPulseInPXISlot2 =
//             nidaqmx_sys::DAQmxErrorSyncNoDevSampClkTimebaseOrSyncPulseInPXISlot2,
//         ErrorPhysicalChanNotOnThisConnector = nidaqmx_sys::DAQmxErrorPhysicalChanNotOnThisConnector,
//         ErrorNumSampsToWaitNotGreaterThanZeroInScript =
//             nidaqmx_sys::DAQmxErrorNumSampsToWaitNotGreaterThanZeroInScript,
//         ErrorNumSampsToWaitNotMultipleOfAlignmentQuantumInScript =
//             nidaqmx_sys::DAQmxErrorNumSampsToWaitNotMultipleOfAlignmentQuantumInScript,
//         ErrorEveryNSamplesEventNotSupportedForNonBufferedTasks =
//             nidaqmx_sys::DAQmxErrorEveryNSamplesEventNotSupportedForNonBufferedTasks,
//         ErrorBufferedAndDataXferPIO = nidaqmx_sys::DAQmxErrorBufferedAndDataXferPIO,
//         ErrorCannotWriteWhenAutoStartFalseAndTaskNotRunning =
//             nidaqmx_sys::DAQmxErrorCannotWriteWhenAutoStartFalseAndTaskNotRunning,
//         ErrorNonBufferedAndDataXferInterrupts =
//             nidaqmx_sys::DAQmxErrorNonBufferedAndDataXferInterrupts,
//         ErrorWriteFailedMultipleCtrsWithFREQOUT =
//             nidaqmx_sys::DAQmxErrorWriteFailedMultipleCtrsWithFREQOUT,
//         ErrorReadNotCompleteBefore3SampClkEdges =
//             nidaqmx_sys::DAQmxErrorReadNotCompleteBefore3SampClkEdges,
//         ErrorCtrHWTimedSinglePointAndDataXferNotProgIO =
//             nidaqmx_sys::DAQmxErrorCtrHWTimedSinglePointAndDataXferNotProgIO,
//         ErrorPrescalerNot1ForInputTerminal = nidaqmx_sys::DAQmxErrorPrescalerNot1ForInputTerminal,
//         ErrorPrescalerNot1ForTimebaseSrc = nidaqmx_sys::DAQmxErrorPrescalerNot1ForTimebaseSrc,
//         ErrorSampClkTimingTypeWhenTristateIsFalse =
//             nidaqmx_sys::DAQmxErrorSampClkTimingTypeWhenTristateIsFalse,
//         ErrorOutputBufferSizeNotMultOfXferSize =
//             nidaqmx_sys::DAQmxErrorOutputBufferSizeNotMultOfXferSize,
//         ErrorSampPerChanNotMultOfXferSize = nidaqmx_sys::DAQmxErrorSampPerChanNotMultOfXferSize,
//         ErrorWriteToTEDSFailed = nidaqmx_sys::DAQmxErrorWriteToTEDSFailed,
//         ErrorSCXIDevNotUsablePowerTurnedOff = nidaqmx_sys::DAQmxErrorSCXIDevNotUsablePowerTurnedOff,
//         ErrorCannotReadWhenAutoStartFalseBufSizeZeroAndTaskNotRunning =
//             nidaqmx_sys::DAQmxErrorCannotReadWhenAutoStartFalseBufSizeZeroAndTaskNotRunning,
//         ErrorCannotReadWhenAutoStartFalseHWTimedSinglePtAndTaskNotRunning =
//             nidaqmx_sys::DAQmxErrorCannotReadWhenAutoStartFalseHWTimedSinglePtAndTaskNotRunning,
//         ErrorCannotReadWhenAutoStartFalseOnDemandAndTaskNotRunning =
//             nidaqmx_sys::DAQmxErrorCannotReadWhenAutoStartFalseOnDemandAndTaskNotRunning,
//         ErrorSimultaneousAOWhenNotOnDemandTiming =
//             nidaqmx_sys::DAQmxErrorSimultaneousAOWhenNotOnDemandTiming,
//         ErrorMemMapAndSimultaneousAO = nidaqmx_sys::DAQmxErrorMemMapAndSimultaneousAO,
//         ErrorWriteFailedMultipleCOOutputTypes =
//             nidaqmx_sys::DAQmxErrorWriteFailedMultipleCOOutputTypes,
//         ErrorWriteToTEDSNotSupportedOnRT = nidaqmx_sys::DAQmxErrorWriteToTEDSNotSupportedOnRT,
//         ErrorVirtualTEDSDataFileError = nidaqmx_sys::DAQmxErrorVirtualTEDSDataFileError,
//         ErrorTEDSSensorDataError = nidaqmx_sys::DAQmxErrorTEDSSensorDataError,
//         ErrorDataSizeMoreThanSizeOfEEPROMOnTEDS =
//             nidaqmx_sys::DAQmxErrorDataSizeMoreThanSizeOfEEPROMOnTEDS,
//         ErrorPROMOnTEDSContainsBasicTEDSData =
//             nidaqmx_sys::DAQmxErrorPROMOnTEDSContainsBasicTEDSData,
//         ErrorPROMOnTEDSAlreadyWritten = nidaqmx_sys::DAQmxErrorPROMOnTEDSAlreadyWritten,
//         ErrorTEDSDoesNotContainPROM = nidaqmx_sys::DAQmxErrorTEDSDoesNotContainPROM,
//         ErrorHWTimedSinglePointNotSupportedAI =
//             nidaqmx_sys::DAQmxErrorHWTimedSinglePointNotSupportedAI,
//         ErrorHWTimedSinglePointOddNumChansInAITask =
//             nidaqmx_sys::DAQmxErrorHWTimedSinglePointOddNumChansInAITask,
//         ErrorCantUseOnlyOnBoardMemWithProgrammedIO =
//             nidaqmx_sys::DAQmxErrorCantUseOnlyOnBoardMemWithProgrammedIO,
//         ErrorSwitchDevShutDownDueToHighTemp = nidaqmx_sys::DAQmxErrorSwitchDevShutDownDueToHighTemp,
//         ErrorExcitationNotSupportedWhenTermCfgDiff =
//             nidaqmx_sys::DAQmxErrorExcitationNotSupportedWhenTermCfgDiff,
//         ErrorTEDSMinElecValGEMaxElecVal = nidaqmx_sys::DAQmxErrorTEDSMinElecValGEMaxElecVal,
//         ErrorTEDSMinPhysValGEMaxPhysVal = nidaqmx_sys::DAQmxErrorTEDSMinPhysValGEMaxPhysVal,
//         ErrorCIOnboardClockNotSupportedAsInputTerm =
//             nidaqmx_sys::DAQmxErrorCIOnboardClockNotSupportedAsInputTerm,
//         ErrorInvalidSampModeForPositionMeas = nidaqmx_sys::DAQmxErrorInvalidSampModeForPositionMeas,
//         ErrorTrigWhenAOHWTimedSinglePtSampMode =
//             nidaqmx_sys::DAQmxErrorTrigWhenAOHWTimedSinglePtSampMode,
//         ErrorDAQmxCantUseStringDueToUnknownChar =
//             nidaqmx_sys::DAQmxErrorDAQmxCantUseStringDueToUnknownChar,
//         ErrorDAQmxCantRetrieveStringDueToUnknownChar =
//             nidaqmx_sys::DAQmxErrorDAQmxCantRetrieveStringDueToUnknownChar,
//         ErrorClearTEDSNotSupportedOnRT = nidaqmx_sys::DAQmxErrorClearTEDSNotSupportedOnRT,
//         ErrorCfgTEDSNotSupportedOnRT = nidaqmx_sys::DAQmxErrorCfgTEDSNotSupportedOnRT,
//         ErrorProgFilterClkCfgdToDifferentMinPulseWidthBySameTask1PerDev =
//             nidaqmx_sys::DAQmxErrorProgFilterClkCfgdToDifferentMinPulseWidthBySameTask1PerDev,
//         ErrorProgFilterClkCfgdToDifferentMinPulseWidthByAnotherTask1PerDev =
//             nidaqmx_sys::DAQmxErrorProgFilterClkCfgdToDifferentMinPulseWidthByAnotherTask1PerDev,
//         ErrorNoLastExtCalDateTimeLastExtCalNotDAQmx =
//             nidaqmx_sys::DAQmxErrorNoLastExtCalDateTimeLastExtCalNotDAQmx,
//         ErrorCannotWriteNotStartedAutoStartFalseNotOnDemandHWTimedSglPt =
//             nidaqmx_sys::DAQmxErrorCannotWriteNotStartedAutoStartFalseNotOnDemandHWTimedSglPt,
//         ErrorCannotWriteNotStartedAutoStartFalseNotOnDemandBufSizeZero =
//             nidaqmx_sys::DAQmxErrorCannotWriteNotStartedAutoStartFalseNotOnDemandBufSizeZero,
//         ErrorCOInvalidTimingSrcDueToSignal = nidaqmx_sys::DAQmxErrorCOInvalidTimingSrcDueToSignal,
//         ErrorCIInvalidTimingSrcForSampClkDueToSampTimingType =
//             nidaqmx_sys::DAQmxErrorCIInvalidTimingSrcForSampClkDueToSampTimingType,
//         ErrorCIInvalidTimingSrcForEventCntDueToSampMode =
//             nidaqmx_sys::DAQmxErrorCIInvalidTimingSrcForEventCntDueToSampMode,
//         ErrorNoChangeDetectOnNonInputDigLineForDev =
//             nidaqmx_sys::DAQmxErrorNoChangeDetectOnNonInputDigLineForDev,
//         ErrorEmptyStringTermNameNotSupported =
//             nidaqmx_sys::DAQmxErrorEmptyStringTermNameNotSupported,
//         ErrorMemMapEnabledForHWTimedNonBufferedAO =
//             nidaqmx_sys::DAQmxErrorMemMapEnabledForHWTimedNonBufferedAO,
//         ErrorDevOnboardMemOverflowDuringHWTimedNonBufferedGen =
//             nidaqmx_sys::DAQmxErrorDevOnboardMemOverflowDuringHWTimedNonBufferedGen,
//         ErrorCODAQmxWriteMultipleChans = nidaqmx_sys::DAQmxErrorCODAQmxWriteMultipleChans,
//         ErrorCantMaintainExistingValueAOSync =
//             nidaqmx_sys::DAQmxErrorCantMaintainExistingValueAOSync,
//         ErrorMStudioMultiplePhysChansNotSupported =
//             nidaqmx_sys::DAQmxErrorMStudioMultiplePhysChansNotSupported,
//         ErrorCantConfigureTEDSForChan = nidaqmx_sys::DAQmxErrorCantConfigureTEDSForChan,
//         ErrorWriteDataTypeTooSmall = nidaqmx_sys::DAQmxErrorWriteDataTypeTooSmall,
//         ErrorReadDataTypeTooSmall = nidaqmx_sys::DAQmxErrorReadDataTypeTooSmall,
//         ErrorMeasuredBridgeOffsetTooHigh = nidaqmx_sys::DAQmxErrorMeasuredBridgeOffsetTooHigh,
//         ErrorStartTrigConflictWithCOHWTimedSinglePt =
//             nidaqmx_sys::DAQmxErrorStartTrigConflictWithCOHWTimedSinglePt,
//         ErrorSampClkRateExtSampClkTimebaseRateMismatch =
//             nidaqmx_sys::DAQmxErrorSampClkRateExtSampClkTimebaseRateMismatch,
//         ErrorInvalidTimingSrcDueToSampTimingType =
//             nidaqmx_sys::DAQmxErrorInvalidTimingSrcDueToSampTimingType,
//         ErrorVirtualTEDSFileNotFound = nidaqmx_sys::DAQmxErrorVirtualTEDSFileNotFound,
//         ErrorMStudioNoForwardPolyScaleCoeffs =
//             nidaqmx_sys::DAQmxErrorMStudioNoForwardPolyScaleCoeffs,
//         ErrorMStudioNoReversePolyScaleCoeffs =
//             nidaqmx_sys::DAQmxErrorMStudioNoReversePolyScaleCoeffs,
//         ErrorMStudioNoPolyScaleCoeffsUseCalc =
//             nidaqmx_sys::DAQmxErrorMStudioNoPolyScaleCoeffsUseCalc,
//         ErrorMStudioNoForwardPolyScaleCoeffsUseCalc =
//             nidaqmx_sys::DAQmxErrorMStudioNoForwardPolyScaleCoeffsUseCalc,
//         ErrorMStudioNoReversePolyScaleCoeffsUseCalc =
//             nidaqmx_sys::DAQmxErrorMStudioNoReversePolyScaleCoeffsUseCalc,
//         ErrorCOSampModeSampTimingTypeSampClkConflict =
//             nidaqmx_sys::DAQmxErrorCOSampModeSampTimingTypeSampClkConflict,
//         ErrorDevCannotProduceMinPulseWidth = nidaqmx_sys::DAQmxErrorDevCannotProduceMinPulseWidth,
//         ErrorCannotProduceMinPulseWidthGivenPropertyValues =
//             nidaqmx_sys::DAQmxErrorCannotProduceMinPulseWidthGivenPropertyValues,
//         ErrorTermCfgdToDifferentMinPulseWidthByAnotherTask =
//             nidaqmx_sys::DAQmxErrorTermCfgdToDifferentMinPulseWidthByAnotherTask,
//         ErrorTermCfgdToDifferentMinPulseWidthByAnotherProperty =
//             nidaqmx_sys::DAQmxErrorTermCfgdToDifferentMinPulseWidthByAnotherProperty,
//         ErrorDigSyncNotAvailableOnTerm = nidaqmx_sys::DAQmxErrorDigSyncNotAvailableOnTerm,
//         ErrorDigFilterNotAvailableOnTerm = nidaqmx_sys::DAQmxErrorDigFilterNotAvailableOnTerm,
//         ErrorDigFilterEnabledMinPulseWidthNotCfg =
//             nidaqmx_sys::DAQmxErrorDigFilterEnabledMinPulseWidthNotCfg,
//         ErrorDigFilterAndSyncBothEnabled = nidaqmx_sys::DAQmxErrorDigFilterAndSyncBothEnabled,
//         ErrorHWTimedSinglePointAOAndDataXferNotProgIO =
//             nidaqmx_sys::DAQmxErrorHWTimedSinglePointAOAndDataXferNotProgIO,
//         ErrorNonBufferedAOAndDataXferNotProgIO =
//             nidaqmx_sys::DAQmxErrorNonBufferedAOAndDataXferNotProgIO,
//         ErrorProgIODataXferForBufferedAO = nidaqmx_sys::DAQmxErrorProgIODataXferForBufferedAO,
//         ErrorTEDSLegacyTemplateIDInvalidOrUnsupported =
//             nidaqmx_sys::DAQmxErrorTEDSLegacyTemplateIDInvalidOrUnsupported,
//         ErrorTEDSMappingMethodInvalidOrUnsupported =
//             nidaqmx_sys::DAQmxErrorTEDSMappingMethodInvalidOrUnsupported,
//         ErrorTEDSLinearMappingSlopeZero = nidaqmx_sys::DAQmxErrorTEDSLinearMappingSlopeZero,
//         ErrorAIInputBufferSizeNotMultOfXferSize =
//             nidaqmx_sys::DAQmxErrorAIInputBufferSizeNotMultOfXferSize,
//         ErrorNoSyncPulseExtSampClkTimebase = nidaqmx_sys::DAQmxErrorNoSyncPulseExtSampClkTimebase,
//         ErrorNoSyncPulseAnotherTaskRunning = nidaqmx_sys::DAQmxErrorNoSyncPulseAnotherTaskRunning,
//         ErrorAOMinMaxNotInGainRange = nidaqmx_sys::DAQmxErrorAOMinMaxNotInGainRange,
//         ErrorAOMinMaxNotInDACRange = nidaqmx_sys::DAQmxErrorAOMinMaxNotInDACRange,
//         ErrorDevOnlySupportsSampClkTimingAO = nidaqmx_sys::DAQmxErrorDevOnlySupportsSampClkTimingAO,
//         ErrorDevOnlySupportsSampClkTimingAI = nidaqmx_sys::DAQmxErrorDevOnlySupportsSampClkTimingAI,
//         ErrorTEDSIncompatibleSensorAndMeasType =
//             nidaqmx_sys::DAQmxErrorTEDSIncompatibleSensorAndMeasType,
//         ErrorTEDSMultipleCalTemplatesNotSupported =
//             nidaqmx_sys::DAQmxErrorTEDSMultipleCalTemplatesNotSupported,
//         ErrorTEDSTemplateParametersNotSupported =
//             nidaqmx_sys::DAQmxErrorTEDSTemplateParametersNotSupported,
//         ErrorParsingTEDSData = nidaqmx_sys::DAQmxErrorParsingTEDSData,
//         ErrorMultipleActivePhysChansNotSupported =
//             nidaqmx_sys::DAQmxErrorMultipleActivePhysChansNotSupported,
//         ErrorNoChansSpecdForChangeDetect = nidaqmx_sys::DAQmxErrorNoChansSpecdForChangeDetect,
//         ErrorInvalidCalVoltageForGivenGain = nidaqmx_sys::DAQmxErrorInvalidCalVoltageForGivenGain,
//         ErrorInvalidCalGain = nidaqmx_sys::DAQmxErrorInvalidCalGain,
//         ErrorMultipleWritesBetweenSampClks = nidaqmx_sys::DAQmxErrorMultipleWritesBetweenSampClks,
//         ErrorInvalidAcqTypeForFREQOUT = nidaqmx_sys::DAQmxErrorInvalidAcqTypeForFREQOUT,
//         ErrorSuitableTimebaseNotFoundTimeCombo2 =
//             nidaqmx_sys::DAQmxErrorSuitableTimebaseNotFoundTimeCombo2,
//         ErrorSuitableTimebaseNotFoundFrequencyCombo2 =
//             nidaqmx_sys::DAQmxErrorSuitableTimebaseNotFoundFrequencyCombo2,
//         ErrorRefClkRateRefClkSrcMismatch = nidaqmx_sys::DAQmxErrorRefClkRateRefClkSrcMismatch,
//         ErrorNoTEDSTerminalBlock = nidaqmx_sys::DAQmxErrorNoTEDSTerminalBlock,
//         ErrorCorruptedTEDSMemory = nidaqmx_sys::DAQmxErrorCorruptedTEDSMemory,
//         ErrorTEDSNotSupported = nidaqmx_sys::DAQmxErrorTEDSNotSupported,
//         ErrorTimingSrcTaskStartedBeforeTimedLoop =
//             nidaqmx_sys::DAQmxErrorTimingSrcTaskStartedBeforeTimedLoop,
//         ErrorPropertyNotSupportedForTimingSrc =
//             nidaqmx_sys::DAQmxErrorPropertyNotSupportedForTimingSrc,
//         ErrorTimingSrcDoesNotExist = nidaqmx_sys::DAQmxErrorTimingSrcDoesNotExist,
//         ErrorInputBufferSizeNotEqualSampsPerChanForFiniteSampMode =
//             nidaqmx_sys::DAQmxErrorInputBufferSizeNotEqualSampsPerChanForFiniteSampMode,
//         ErrorFREQOUTCannotProduceDesiredFrequency2 =
//             nidaqmx_sys::DAQmxErrorFREQOUTCannotProduceDesiredFrequency2,
//         ErrorExtRefClkRateNotSpecified = nidaqmx_sys::DAQmxErrorExtRefClkRateNotSpecified,
//         ErrorDeviceDoesNotSupportDMADataXferForNonBufferedAcq =
//             nidaqmx_sys::DAQmxErrorDeviceDoesNotSupportDMADataXferForNonBufferedAcq,
//         ErrorDigFilterMinPulseWidthSetWhenTristateIsFalse =
//             nidaqmx_sys::DAQmxErrorDigFilterMinPulseWidthSetWhenTristateIsFalse,
//         ErrorDigFilterEnableSetWhenTristateIsFalse =
//             nidaqmx_sys::DAQmxErrorDigFilterEnableSetWhenTristateIsFalse,
//         ErrorNoHWTimingWithOnDemand = nidaqmx_sys::DAQmxErrorNoHWTimingWithOnDemand,
//         ErrorCannotDetectChangesWhenTristateIsFalse =
//             nidaqmx_sys::DAQmxErrorCannotDetectChangesWhenTristateIsFalse,
//         ErrorCannotHandshakeWhenTristateIsFalse =
//             nidaqmx_sys::DAQmxErrorCannotHandshakeWhenTristateIsFalse,
//         ErrorLinesUsedForStaticInputNotForHandshakingControl =
//             nidaqmx_sys::DAQmxErrorLinesUsedForStaticInputNotForHandshakingControl,
//         ErrorLinesUsedForHandshakingControlNotForStaticInput =
//             nidaqmx_sys::DAQmxErrorLinesUsedForHandshakingControlNotForStaticInput,
//         ErrorLinesUsedForStaticInputNotForHandshakingInput =
//             nidaqmx_sys::DAQmxErrorLinesUsedForStaticInputNotForHandshakingInput,
//         ErrorLinesUsedForHandshakingInputNotForStaticInput =
//             nidaqmx_sys::DAQmxErrorLinesUsedForHandshakingInputNotForStaticInput,
//         ErrorDifferentDITristateValsForChansInTask =
//             nidaqmx_sys::DAQmxErrorDifferentDITristateValsForChansInTask,
//         ErrorTimebaseCalFreqVarianceTooLarge =
//             nidaqmx_sys::DAQmxErrorTimebaseCalFreqVarianceTooLarge,
//         ErrorTimebaseCalFailedToConverge = nidaqmx_sys::DAQmxErrorTimebaseCalFailedToConverge,
//         ErrorInadequateResolutionForTimebaseCal =
//             nidaqmx_sys::DAQmxErrorInadequateResolutionForTimebaseCal,
//         ErrorInvalidAOGainCalConst = nidaqmx_sys::DAQmxErrorInvalidAOGainCalConst,
//         ErrorInvalidAOOffsetCalConst = nidaqmx_sys::DAQmxErrorInvalidAOOffsetCalConst,
//         ErrorInvalidAIGainCalConst = nidaqmx_sys::DAQmxErrorInvalidAIGainCalConst,
//         ErrorInvalidAIOffsetCalConst = nidaqmx_sys::DAQmxErrorInvalidAIOffsetCalConst,
//         ErrorDigOutputOverrun = nidaqmx_sys::DAQmxErrorDigOutputOverrun,
//         ErrorDigInputOverrun = nidaqmx_sys::DAQmxErrorDigInputOverrun,
//         ErrorAcqStoppedDriverCantXferDataFastEnough =
//             nidaqmx_sys::DAQmxErrorAcqStoppedDriverCantXferDataFastEnough,
//         ErrorChansCantAppearInSameTask = nidaqmx_sys::DAQmxErrorChansCantAppearInSameTask,
//         ErrorInputCfgFailedBecauseWatchdogExpired =
//             nidaqmx_sys::DAQmxErrorInputCfgFailedBecauseWatchdogExpired,
//         ErrorAnalogTrigChanNotExternal = nidaqmx_sys::DAQmxErrorAnalogTrigChanNotExternal,
//         ErrorTooManyChansForInternalAIInputSrc =
//             nidaqmx_sys::DAQmxErrorTooManyChansForInternalAIInputSrc,
//         ErrorTEDSSensorNotDetected = nidaqmx_sys::DAQmxErrorTEDSSensorNotDetected,
//         ErrorPrptyGetSpecdActiveItemFailedDueToDifftValues =
//             nidaqmx_sys::DAQmxErrorPrptyGetSpecdActiveItemFailedDueToDifftValues,
//         ErrorRoutingDestTermPXIClk10InNotInSlot2 =
//             nidaqmx_sys::DAQmxErrorRoutingDestTermPXIClk10InNotInSlot2,
//         ErrorRoutingDestTermPXIStarXNotInSlot2 =
//             nidaqmx_sys::DAQmxErrorRoutingDestTermPXIStarXNotInSlot2,
//         ErrorRoutingSrcTermPXIStarXNotInSlot2 =
//             nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIStarXNotInSlot2,
//         ErrorRoutingSrcTermPXIStarInSlot16AndAbove =
//             nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIStarInSlot16AndAbove,
//         ErrorRoutingDestTermPXIStarInSlot16AndAbove =
//             nidaqmx_sys::DAQmxErrorRoutingDestTermPXIStarInSlot16AndAbove,
//         ErrorRoutingDestTermPXIStarInSlot2 = nidaqmx_sys::DAQmxErrorRoutingDestTermPXIStarInSlot2,
//         ErrorRoutingSrcTermPXIStarInSlot2 = nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIStarInSlot2,
//         ErrorRoutingDestTermPXIChassisNotIdentified =
//             nidaqmx_sys::DAQmxErrorRoutingDestTermPXIChassisNotIdentified,
//         ErrorRoutingSrcTermPXIChassisNotIdentified =
//             nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIChassisNotIdentified,
//         ErrorFailedToAcquireCalData = nidaqmx_sys::DAQmxErrorFailedToAcquireCalData,
//         ErrorBridgeOffsetNullingCalNotSupported =
//             nidaqmx_sys::DAQmxErrorBridgeOffsetNullingCalNotSupported,
//         ErrorAIMaxNotSpecified = nidaqmx_sys::DAQmxErrorAIMaxNotSpecified,
//         ErrorAIMinNotSpecified = nidaqmx_sys::DAQmxErrorAIMinNotSpecified,
//         ErrorOddTotalBufferSizeToWrite = nidaqmx_sys::DAQmxErrorOddTotalBufferSizeToWrite,
//         ErrorOddTotalNumSampsToWrite = nidaqmx_sys::DAQmxErrorOddTotalNumSampsToWrite,
//         ErrorBufferWithWaitMode = nidaqmx_sys::DAQmxErrorBufferWithWaitMode,
//         ErrorBufferWithHWTimedSinglePointSampMode =
//             nidaqmx_sys::DAQmxErrorBufferWithHWTimedSinglePointSampMode,
//         ErrorCOWritePulseLowTicksNotSupported =
//             nidaqmx_sys::DAQmxErrorCOWritePulseLowTicksNotSupported,
//         ErrorCOWritePulseHighTicksNotSupported =
//             nidaqmx_sys::DAQmxErrorCOWritePulseHighTicksNotSupported,
//         ErrorCOWritePulseLowTimeOutOfRange = nidaqmx_sys::DAQmxErrorCOWritePulseLowTimeOutOfRange,
//         ErrorCOWritePulseHighTimeOutOfRange = nidaqmx_sys::DAQmxErrorCOWritePulseHighTimeOutOfRange,
//         ErrorCOWriteFreqOutOfRange = nidaqmx_sys::DAQmxErrorCOWriteFreqOutOfRange,
//         ErrorCOWriteDutyCycleOutOfRange = nidaqmx_sys::DAQmxErrorCOWriteDutyCycleOutOfRange,
//         ErrorInvalidInstallation = nidaqmx_sys::DAQmxErrorInvalidInstallation,
//         ErrorRefTrigMasterSessionUnavailable =
//             nidaqmx_sys::DAQmxErrorRefTrigMasterSessionUnavailable,
//         ErrorRouteFailedBecauseWatchdogExpired =
//             nidaqmx_sys::DAQmxErrorRouteFailedBecauseWatchdogExpired,
//         ErrorDeviceShutDownDueToHighTemp = nidaqmx_sys::DAQmxErrorDeviceShutDownDueToHighTemp,
//         ErrorNoMemMapWhenHWTimedSinglePoint = nidaqmx_sys::DAQmxErrorNoMemMapWhenHWTimedSinglePoint,
//         ErrorWriteFailedBecauseWatchdogExpired =
//             nidaqmx_sys::DAQmxErrorWriteFailedBecauseWatchdogExpired,
//         ErrorDifftInternalAIInputSrcs = nidaqmx_sys::DAQmxErrorDifftInternalAIInputSrcs,
//         ErrorDifftAIInputSrcInOneChanGroup = nidaqmx_sys::DAQmxErrorDifftAIInputSrcInOneChanGroup,
//         ErrorInternalAIInputSrcInMultChanGroups =
//             nidaqmx_sys::DAQmxErrorInternalAIInputSrcInMultChanGroups,
//         ErrorSwitchOpFailedDueToPrevError = nidaqmx_sys::DAQmxErrorSwitchOpFailedDueToPrevError,
//         ErrorWroteMultiSampsUsingSingleSampWrite =
//             nidaqmx_sys::DAQmxErrorWroteMultiSampsUsingSingleSampWrite,
//         ErrorMismatchedInputArraySizes = nidaqmx_sys::DAQmxErrorMismatchedInputArraySizes,
//         ErrorCantExceedRelayDriveLimit = nidaqmx_sys::DAQmxErrorCantExceedRelayDriveLimit,
//         ErrorDACRngLowNotEqualToMinusRefVal = nidaqmx_sys::DAQmxErrorDACRngLowNotEqualToMinusRefVal,
//         ErrorCantAllowConnectDACToGnd = nidaqmx_sys::DAQmxErrorCantAllowConnectDACToGnd,
//         ErrorWatchdogTimeoutOutOfRangeAndNotSpecialVal =
//             nidaqmx_sys::DAQmxErrorWatchdogTimeoutOutOfRangeAndNotSpecialVal,
//         ErrorNoWatchdogOutputOnPortReservedForInput =
//             nidaqmx_sys::DAQmxErrorNoWatchdogOutputOnPortReservedForInput,
//         ErrorNoInputOnPortCfgdForWatchdogOutput =
//             nidaqmx_sys::DAQmxErrorNoInputOnPortCfgdForWatchdogOutput,
//         ErrorWatchdogExpirationStateNotEqualForLinesInPort =
//             nidaqmx_sys::DAQmxErrorWatchdogExpirationStateNotEqualForLinesInPort,
//         ErrorCannotPerformOpWhenTaskNotReserved =
//             nidaqmx_sys::DAQmxErrorCannotPerformOpWhenTaskNotReserved,
//         ErrorPowerupStateNotSupported = nidaqmx_sys::DAQmxErrorPowerupStateNotSupported,
//         ErrorWatchdogTimerNotSupported = nidaqmx_sys::DAQmxErrorWatchdogTimerNotSupported,
//         ErrorOpNotSupportedWhenRefClkSrcNone =
//             nidaqmx_sys::DAQmxErrorOpNotSupportedWhenRefClkSrcNone,
//         ErrorSampClkRateUnavailable = nidaqmx_sys::DAQmxErrorSampClkRateUnavailable,
//         ErrorPrptyGetSpecdSingleActiveChanFailedDueToDifftVals =
//             nidaqmx_sys::DAQmxErrorPrptyGetSpecdSingleActiveChanFailedDueToDifftVals,
//         ErrorPrptyGetImpliedActiveChanFailedDueToDifftVals =
//             nidaqmx_sys::DAQmxErrorPrptyGetImpliedActiveChanFailedDueToDifftVals,
//         ErrorPrptyGetSpecdActiveChanFailedDueToDifftVals =
//             nidaqmx_sys::DAQmxErrorPrptyGetSpecdActiveChanFailedDueToDifftVals,
//         ErrorNoRegenWhenUsingBrdMem = nidaqmx_sys::DAQmxErrorNoRegenWhenUsingBrdMem,
//         ErrorNonbufferedReadMoreThanSampsPerChan =
//             nidaqmx_sys::DAQmxErrorNonbufferedReadMoreThanSampsPerChan,
//         ErrorWatchdogExpirationTristateNotSpecdForEntirePort =
//             nidaqmx_sys::DAQmxErrorWatchdogExpirationTristateNotSpecdForEntirePort,
//         ErrorPowerupTristateNotSpecdForEntirePort =
//             nidaqmx_sys::DAQmxErrorPowerupTristateNotSpecdForEntirePort,
//         ErrorPowerupStateNotSpecdForEntirePort =
//             nidaqmx_sys::DAQmxErrorPowerupStateNotSpecdForEntirePort,
//         ErrorCantSetWatchdogExpirationOnDigInChan =
//             nidaqmx_sys::DAQmxErrorCantSetWatchdogExpirationOnDigInChan,
//         ErrorCantSetPowerupStateOnDigInChan = nidaqmx_sys::DAQmxErrorCantSetPowerupStateOnDigInChan,
//         ErrorPhysChanNotInTask = nidaqmx_sys::DAQmxErrorPhysChanNotInTask,
//         ErrorPhysChanDevNotInTask = nidaqmx_sys::DAQmxErrorPhysChanDevNotInTask,
//         ErrorDigInputNotSupported = nidaqmx_sys::DAQmxErrorDigInputNotSupported,
//         ErrorDigFilterIntervalNotEqualForLines =
//             nidaqmx_sys::DAQmxErrorDigFilterIntervalNotEqualForLines,
//         ErrorDigFilterIntervalAlreadyCfgd = nidaqmx_sys::DAQmxErrorDigFilterIntervalAlreadyCfgd,
//         ErrorCantResetExpiredWatchdog = nidaqmx_sys::DAQmxErrorCantResetExpiredWatchdog,
//         ErrorActiveChanTooManyLinesSpecdWhenGettingPrpty =
//             nidaqmx_sys::DAQmxErrorActiveChanTooManyLinesSpecdWhenGettingPrpty,
//         ErrorActiveChanNotSpecdWhenGetting1LinePrpty =
//             nidaqmx_sys::DAQmxErrorActiveChanNotSpecdWhenGetting1LinePrpty,
//         ErrorDigPrptyCannotBeSetPerLine = nidaqmx_sys::DAQmxErrorDigPrptyCannotBeSetPerLine,
//         ErrorSendAdvCmpltAfterWaitForTrigInScanlist =
//             nidaqmx_sys::DAQmxErrorSendAdvCmpltAfterWaitForTrigInScanlist,
//         ErrorDisconnectionRequiredInScanlist =
//             nidaqmx_sys::DAQmxErrorDisconnectionRequiredInScanlist,
//         ErrorTwoWaitForTrigsAfterConnectionInScanlist =
//             nidaqmx_sys::DAQmxErrorTwoWaitForTrigsAfterConnectionInScanlist,
//         ErrorActionSeparatorRequiredAfterBreakingConnectionInScanlist =
//             nidaqmx_sys::DAQmxErrorActionSeparatorRequiredAfterBreakingConnectionInScanlist,
//         ErrorConnectionInScanlistMustWaitForTrig =
//             nidaqmx_sys::DAQmxErrorConnectionInScanlistMustWaitForTrig,
//         ErrorActionNotSupportedTaskNotWatchdog =
//             nidaqmx_sys::DAQmxErrorActionNotSupportedTaskNotWatchdog,
//         ErrorWfmNameSameAsScriptName = nidaqmx_sys::DAQmxErrorWfmNameSameAsScriptName,
//         ErrorScriptNameSameAsWfmName = nidaqmx_sys::DAQmxErrorScriptNameSameAsWfmName,
//         ErrorDSFStopClock = nidaqmx_sys::DAQmxErrorDSFStopClock,
//         ErrorDSFReadyForStartClock = nidaqmx_sys::DAQmxErrorDSFReadyForStartClock,
//         ErrorWriteOffsetNotMultOfIncr = nidaqmx_sys::DAQmxErrorWriteOffsetNotMultOfIncr,
//         ErrorDifferentPrptyValsNotSupportedOnDev =
//             nidaqmx_sys::DAQmxErrorDifferentPrptyValsNotSupportedOnDev,
//         ErrorRefAndPauseTrigConfigured = nidaqmx_sys::DAQmxErrorRefAndPauseTrigConfigured,
//         ErrorFailedToEnableHighSpeedInputClock =
//             nidaqmx_sys::DAQmxErrorFailedToEnableHighSpeedInputClock,
//         ErrorEmptyPhysChanInPowerUpStatesArray =
//             nidaqmx_sys::DAQmxErrorEmptyPhysChanInPowerUpStatesArray,
//         ErrorActivePhysChanTooManyLinesSpecdWhenGettingPrpty =
//             nidaqmx_sys::DAQmxErrorActivePhysChanTooManyLinesSpecdWhenGettingPrpty,
//         ErrorActivePhysChanNotSpecdWhenGetting1LinePrpty =
//             nidaqmx_sys::DAQmxErrorActivePhysChanNotSpecdWhenGetting1LinePrpty,
//         ErrorPXIDevTempCausedShutDown = nidaqmx_sys::DAQmxErrorPXIDevTempCausedShutDown,
//         ErrorInvalidNumSampsToWrite = nidaqmx_sys::DAQmxErrorInvalidNumSampsToWrite,
//         ErrorOutputFIFOUnderflow2 = nidaqmx_sys::DAQmxErrorOutputFIFOUnderflow2,
//         ErrorRepeatedAIPhysicalChan = nidaqmx_sys::DAQmxErrorRepeatedAIPhysicalChan,
//         ErrorMultScanOpsInOneChassis = nidaqmx_sys::DAQmxErrorMultScanOpsInOneChassis,
//         ErrorInvalidAIChanOrder = nidaqmx_sys::DAQmxErrorInvalidAIChanOrder,
//         ErrorReversePowerProtectionActivated =
//             nidaqmx_sys::DAQmxErrorReversePowerProtectionActivated,
//         ErrorInvalidAsynOpHandle = nidaqmx_sys::DAQmxErrorInvalidAsynOpHandle,
//         ErrorFailedToEnableHighSpeedOutput = nidaqmx_sys::DAQmxErrorFailedToEnableHighSpeedOutput,
//         ErrorCannotReadPastEndOfRecord = nidaqmx_sys::DAQmxErrorCannotReadPastEndOfRecord,
//         ErrorAcqStoppedToPreventInputBufferOverwriteOneDataXferMech =
//             nidaqmx_sys::DAQmxErrorAcqStoppedToPreventInputBufferOverwriteOneDataXferMech,
//         ErrorZeroBasedChanIndexInvalid = nidaqmx_sys::DAQmxErrorZeroBasedChanIndexInvalid,
//         ErrorNoChansOfGivenTypeInTask = nidaqmx_sys::DAQmxErrorNoChansOfGivenTypeInTask,
//         ErrorSampClkSrcInvalidForOutputValidForInput =
//             nidaqmx_sys::DAQmxErrorSampClkSrcInvalidForOutputValidForInput,
//         ErrorOutputBufSizeTooSmallToStartGen =
//             nidaqmx_sys::DAQmxErrorOutputBufSizeTooSmallToStartGen,
//         ErrorInputBufSizeTooSmallToStartAcq = nidaqmx_sys::DAQmxErrorInputBufSizeTooSmallToStartAcq,
//         ErrorExportTwoSignalsOnSameTerminal = nidaqmx_sys::DAQmxErrorExportTwoSignalsOnSameTerminal,
//         ErrorChanIndexInvalid = nidaqmx_sys::DAQmxErrorChanIndexInvalid,
//         ErrorRangeSyntaxNumberTooBig = nidaqmx_sys::DAQmxErrorRangeSyntaxNumberTooBig,
//         ErrorNULLPtr = nidaqmx_sys::DAQmxErrorNULLPtr,
//         ErrorScaledMinEqualMax = nidaqmx_sys::DAQmxErrorScaledMinEqualMax,
//         ErrorPreScaledMinEqualMax = nidaqmx_sys::DAQmxErrorPreScaledMinEqualMax,
//         ErrorPropertyNotSupportedForScaleType =
//             nidaqmx_sys::DAQmxErrorPropertyNotSupportedForScaleType,
//         ErrorChannelNameGenerationNumberTooBig =
//             nidaqmx_sys::DAQmxErrorChannelNameGenerationNumberTooBig,
//         ErrorRepeatedNumberInScaledValues = nidaqmx_sys::DAQmxErrorRepeatedNumberInScaledValues,
//         ErrorRepeatedNumberInPreScaledValues =
//             nidaqmx_sys::DAQmxErrorRepeatedNumberInPreScaledValues,
//         ErrorLinesAlreadyReservedForOutput = nidaqmx_sys::DAQmxErrorLinesAlreadyReservedForOutput,
//         ErrorSwitchOperationChansSpanMultipleDevsInList =
//             nidaqmx_sys::DAQmxErrorSwitchOperationChansSpanMultipleDevsInList,
//         ErrorInvalidIDInListAtBeginningOfSwitchOperation =
//             nidaqmx_sys::DAQmxErrorInvalidIDInListAtBeginningOfSwitchOperation,
//         ErrorMStudioInvalidPolyDirection = nidaqmx_sys::DAQmxErrorMStudioInvalidPolyDirection,
//         ErrorMStudioPropertyGetWhileTaskNotVerified =
//             nidaqmx_sys::DAQmxErrorMStudioPropertyGetWhileTaskNotVerified,
//         ErrorRangeWithTooManyObjects = nidaqmx_sys::DAQmxErrorRangeWithTooManyObjects,
//         ErrorCppDotNetAPINegativeBufferSize = nidaqmx_sys::DAQmxErrorCppDotNetAPINegativeBufferSize,
//         ErrorCppCantRemoveInvalidEventHandler =
//             nidaqmx_sys::DAQmxErrorCppCantRemoveInvalidEventHandler,
//         ErrorCppCantRemoveEventHandlerTwice = nidaqmx_sys::DAQmxErrorCppCantRemoveEventHandlerTwice,
//         ErrorCppCantRemoveOtherObjectsEventHandler =
//             nidaqmx_sys::DAQmxErrorCppCantRemoveOtherObjectsEventHandler,
//         ErrorDigLinesReservedOrUnavailable = nidaqmx_sys::DAQmxErrorDigLinesReservedOrUnavailable,
//         ErrorDSFFailedToResetStream = nidaqmx_sys::DAQmxErrorDSFFailedToResetStream,
//         ErrorDSFReadyForOutputNotAsserted = nidaqmx_sys::DAQmxErrorDSFReadyForOutputNotAsserted,
//         ErrorSampToWritePerChanNotMultipleOfIncr =
//             nidaqmx_sys::DAQmxErrorSampToWritePerChanNotMultipleOfIncr,
//         ErrorAOPropertiesCauseVoltageBelowMin =
//             nidaqmx_sys::DAQmxErrorAOPropertiesCauseVoltageBelowMin,
//         ErrorAOPropertiesCauseVoltageOverMax =
//             nidaqmx_sys::DAQmxErrorAOPropertiesCauseVoltageOverMax,
//         ErrorPropertyNotSupportedWhenRefClkSrcNone =
//             nidaqmx_sys::DAQmxErrorPropertyNotSupportedWhenRefClkSrcNone,
//         ErrorAIMaxTooSmall = nidaqmx_sys::DAQmxErrorAIMaxTooSmall,
//         ErrorAIMaxTooLarge = nidaqmx_sys::DAQmxErrorAIMaxTooLarge,
//         ErrorAIMinTooSmall = nidaqmx_sys::DAQmxErrorAIMinTooSmall,
//         ErrorAIMinTooLarge = nidaqmx_sys::DAQmxErrorAIMinTooLarge,
//         ErrorBuiltInCJCSrcNotSupported = nidaqmx_sys::DAQmxErrorBuiltInCJCSrcNotSupported,
//         ErrorTooManyPostTrigSampsPerChan = nidaqmx_sys::DAQmxErrorTooManyPostTrigSampsPerChan,
//         ErrorTrigLineNotFoundSingleDevRoute = nidaqmx_sys::DAQmxErrorTrigLineNotFoundSingleDevRoute,
//         ErrorDifferentInternalAIInputSources =
//             nidaqmx_sys::DAQmxErrorDifferentInternalAIInputSources,
//         ErrorDifferentAIInputSrcInOneChanGroup =
//             nidaqmx_sys::DAQmxErrorDifferentAIInputSrcInOneChanGroup,
//         ErrorInternalAIInputSrcInMultipleChanGroups =
//             nidaqmx_sys::DAQmxErrorInternalAIInputSrcInMultipleChanGroups,
//         ErrorCAPIChanIndexInvalid = nidaqmx_sys::DAQmxErrorCAPIChanIndexInvalid,
//         ErrorCollectionDoesNotMatchChanType = nidaqmx_sys::DAQmxErrorCollectionDoesNotMatchChanType,
//         ErrorOutputCantStartChangedRegenerationMode =
//             nidaqmx_sys::DAQmxErrorOutputCantStartChangedRegenerationMode,
//         ErrorOutputCantStartChangedBufferSize =
//             nidaqmx_sys::DAQmxErrorOutputCantStartChangedBufferSize,
//         ErrorChanSizeTooBigForU32PortWrite = nidaqmx_sys::DAQmxErrorChanSizeTooBigForU32PortWrite,
//         ErrorChanSizeTooBigForU8PortWrite = nidaqmx_sys::DAQmxErrorChanSizeTooBigForU8PortWrite,
//         ErrorChanSizeTooBigForU32PortRead = nidaqmx_sys::DAQmxErrorChanSizeTooBigForU32PortRead,
//         ErrorChanSizeTooBigForU8PortRead = nidaqmx_sys::DAQmxErrorChanSizeTooBigForU8PortRead,
//         ErrorInvalidDigDataWrite = nidaqmx_sys::DAQmxErrorInvalidDigDataWrite,
//         ErrorInvalidAODataWrite = nidaqmx_sys::DAQmxErrorInvalidAODataWrite,
//         ErrorWaitUntilDoneDoesNotIndicateDone =
//             nidaqmx_sys::DAQmxErrorWaitUntilDoneDoesNotIndicateDone,
//         ErrorMultiChanTypesInTask = nidaqmx_sys::DAQmxErrorMultiChanTypesInTask,
//         ErrorMultiDevsInTask = nidaqmx_sys::DAQmxErrorMultiDevsInTask,
//         ErrorCannotSetPropertyWhenTaskRunning =
//             nidaqmx_sys::DAQmxErrorCannotSetPropertyWhenTaskRunning,
//         ErrorCannotGetPropertyWhenTaskNotCommittedOrRunning =
//             nidaqmx_sys::DAQmxErrorCannotGetPropertyWhenTaskNotCommittedOrRunning,
//         ErrorLeadingUnderscoreInString = nidaqmx_sys::DAQmxErrorLeadingUnderscoreInString,
//         ErrorTrailingSpaceInString = nidaqmx_sys::DAQmxErrorTrailingSpaceInString,
//         ErrorLeadingSpaceInString = nidaqmx_sys::DAQmxErrorLeadingSpaceInString,
//         ErrorInvalidCharInString = nidaqmx_sys::DAQmxErrorInvalidCharInString,
//         ErrorDLLBecameUnlocked = nidaqmx_sys::DAQmxErrorDLLBecameUnlocked,
//         ErrorDLLLock = nidaqmx_sys::DAQmxErrorDLLLock,
//         ErrorSelfCalConstsInvalid = nidaqmx_sys::DAQmxErrorSelfCalConstsInvalid,
//         ErrorInvalidTrigCouplingExceptForExtTrigChan =
//             nidaqmx_sys::DAQmxErrorInvalidTrigCouplingExceptForExtTrigChan,
//         ErrorWriteFailsBufferSizeAutoConfigured =
//             nidaqmx_sys::DAQmxErrorWriteFailsBufferSizeAutoConfigured,
//         ErrorExtCalAdjustExtRefVoltageFailed =
//             nidaqmx_sys::DAQmxErrorExtCalAdjustExtRefVoltageFailed,
//         ErrorSelfCalFailedExtNoiseOrRefVoltageOutOfCal =
//             nidaqmx_sys::DAQmxErrorSelfCalFailedExtNoiseOrRefVoltageOutOfCal,
//         ErrorExtCalTemperatureNotDAQmx = nidaqmx_sys::DAQmxErrorExtCalTemperatureNotDAQmx,
//         ErrorExtCalDateTimeNotDAQmx = nidaqmx_sys::DAQmxErrorExtCalDateTimeNotDAQmx,
//         ErrorSelfCalTemperatureNotDAQmx = nidaqmx_sys::DAQmxErrorSelfCalTemperatureNotDAQmx,
//         ErrorSelfCalDateTimeNotDAQmx = nidaqmx_sys::DAQmxErrorSelfCalDateTimeNotDAQmx,
//         ErrorDACRefValNotSet = nidaqmx_sys::DAQmxErrorDACRefValNotSet,
//         ErrorAnalogMultiSampWriteNotSupported =
//             nidaqmx_sys::DAQmxErrorAnalogMultiSampWriteNotSupported,
//         ErrorInvalidActionInControlTask = nidaqmx_sys::DAQmxErrorInvalidActionInControlTask,
//         ErrorPolyCoeffsInconsistent = nidaqmx_sys::DAQmxErrorPolyCoeffsInconsistent,
//         ErrorSensorValTooLow = nidaqmx_sys::DAQmxErrorSensorValTooLow,
//         ErrorSensorValTooHigh = nidaqmx_sys::DAQmxErrorSensorValTooHigh,
//         ErrorWaveformNameTooLong = nidaqmx_sys::DAQmxErrorWaveformNameTooLong,
//         ErrorIdentifierTooLongInScript = nidaqmx_sys::DAQmxErrorIdentifierTooLongInScript,
//         ErrorUnexpectedIDFollowingSwitchChanName =
//             nidaqmx_sys::DAQmxErrorUnexpectedIDFollowingSwitchChanName,
//         ErrorRelayNameNotSpecifiedInList = nidaqmx_sys::DAQmxErrorRelayNameNotSpecifiedInList,
//         ErrorUnexpectedIDFollowingRelayNameInList =
//             nidaqmx_sys::DAQmxErrorUnexpectedIDFollowingRelayNameInList,
//         ErrorUnexpectedIDFollowingSwitchOpInList =
//             nidaqmx_sys::DAQmxErrorUnexpectedIDFollowingSwitchOpInList,
//         ErrorInvalidLineGrouping = nidaqmx_sys::DAQmxErrorInvalidLineGrouping,
//         ErrorCtrMinMax = nidaqmx_sys::DAQmxErrorCtrMinMax,
//         ErrorWriteChanTypeMismatch = nidaqmx_sys::DAQmxErrorWriteChanTypeMismatch,
//         ErrorReadChanTypeMismatch = nidaqmx_sys::DAQmxErrorReadChanTypeMismatch,
//         ErrorWriteNumChansMismatch = nidaqmx_sys::DAQmxErrorWriteNumChansMismatch,
//         ErrorOneChanReadForMultiChanTask = nidaqmx_sys::DAQmxErrorOneChanReadForMultiChanTask,
//         ErrorCannotSelfCalDuringExtCal = nidaqmx_sys::DAQmxErrorCannotSelfCalDuringExtCal,
//         ErrorMeasCalAdjustOscillatorPhaseDAC =
//             nidaqmx_sys::DAQmxErrorMeasCalAdjustOscillatorPhaseDAC,
//         ErrorInvalidCalConstCalADCAdjustment =
//             nidaqmx_sys::DAQmxErrorInvalidCalConstCalADCAdjustment,
//         ErrorInvalidCalConstOscillatorFreqDACValue =
//             nidaqmx_sys::DAQmxErrorInvalidCalConstOscillatorFreqDACValue,
//         ErrorInvalidCalConstOscillatorPhaseDACValue =
//             nidaqmx_sys::DAQmxErrorInvalidCalConstOscillatorPhaseDACValue,
//         ErrorInvalidCalConstOffsetDACValue = nidaqmx_sys::DAQmxErrorInvalidCalConstOffsetDACValue,
//         ErrorInvalidCalConstGainDACValue = nidaqmx_sys::DAQmxErrorInvalidCalConstGainDACValue,
//         ErrorInvalidNumCalADCReadsToAverage = nidaqmx_sys::DAQmxErrorInvalidNumCalADCReadsToAverage,
//         ErrorInvalidCfgCalAdjustDirectPathOutputImpedance =
//             nidaqmx_sys::DAQmxErrorInvalidCfgCalAdjustDirectPathOutputImpedance,
//         ErrorInvalidCfgCalAdjustMainPathOutputImpedance =
//             nidaqmx_sys::DAQmxErrorInvalidCfgCalAdjustMainPathOutputImpedance,
//         ErrorInvalidCfgCalAdjustMainPathPostAmpGainAndOffset =
//             nidaqmx_sys::DAQmxErrorInvalidCfgCalAdjustMainPathPostAmpGainAndOffset,
//         ErrorInvalidCfgCalAdjustMainPathPreAmpGain =
//             nidaqmx_sys::DAQmxErrorInvalidCfgCalAdjustMainPathPreAmpGain,
//         ErrorInvalidCfgCalAdjustMainPreAmpOffset =
//             nidaqmx_sys::DAQmxErrorInvalidCfgCalAdjustMainPreAmpOffset,
//         ErrorMeasCalAdjustCalADC = nidaqmx_sys::DAQmxErrorMeasCalAdjustCalADC,
//         ErrorMeasCalAdjustOscillatorFrequency =
//             nidaqmx_sys::DAQmxErrorMeasCalAdjustOscillatorFrequency,
//         ErrorMeasCalAdjustDirectPathOutputImpedance =
//             nidaqmx_sys::DAQmxErrorMeasCalAdjustDirectPathOutputImpedance,
//         ErrorMeasCalAdjustMainPathOutputImpedance =
//             nidaqmx_sys::DAQmxErrorMeasCalAdjustMainPathOutputImpedance,
//         ErrorMeasCalAdjustDirectPathGain = nidaqmx_sys::DAQmxErrorMeasCalAdjustDirectPathGain,
//         ErrorMeasCalAdjustMainPathPostAmpGainAndOffset =
//             nidaqmx_sys::DAQmxErrorMeasCalAdjustMainPathPostAmpGainAndOffset,
//         ErrorMeasCalAdjustMainPathPreAmpGain =
//             nidaqmx_sys::DAQmxErrorMeasCalAdjustMainPathPreAmpGain,
//         ErrorMeasCalAdjustMainPathPreAmpOffset =
//             nidaqmx_sys::DAQmxErrorMeasCalAdjustMainPathPreAmpOffset,
//         ErrorInvalidDateTimeInEEPROM = nidaqmx_sys::DAQmxErrorInvalidDateTimeInEEPROM,
//         ErrorUnableToLocateErrorResources = nidaqmx_sys::DAQmxErrorUnableToLocateErrorResources,
//         ErrorDotNetAPINotUnsigned32BitNumber =
//             nidaqmx_sys::DAQmxErrorDotNetAPINotUnsigned32BitNumber,
//         ErrorInvalidRangeOfObjectsSyntaxInString =
//             nidaqmx_sys::DAQmxErrorInvalidRangeOfObjectsSyntaxInString,
//         ErrorAttemptToEnableLineNotPreviouslyDisabled =
//             nidaqmx_sys::DAQmxErrorAttemptToEnableLineNotPreviouslyDisabled,
//         ErrorInvalidCharInPattern = nidaqmx_sys::DAQmxErrorInvalidCharInPattern,
//         ErrorIntermediateBufferFull = nidaqmx_sys::DAQmxErrorIntermediateBufferFull,
//         ErrorLoadTaskFailsBecauseNoTimingOnDev =
//             nidaqmx_sys::DAQmxErrorLoadTaskFailsBecauseNoTimingOnDev,
//         ErrorCAPIReservedParamNotNULLNorEmpty =
//             nidaqmx_sys::DAQmxErrorCAPIReservedParamNotNULLNorEmpty,
//         ErrorCAPIReservedParamNotNULL = nidaqmx_sys::DAQmxErrorCAPIReservedParamNotNULL,
//         ErrorCAPIReservedParamNotZero = nidaqmx_sys::DAQmxErrorCAPIReservedParamNotZero,
//         ErrorSampleValueOutOfRange = nidaqmx_sys::DAQmxErrorSampleValueOutOfRange,
//         ErrorChanAlreadyInTask = nidaqmx_sys::DAQmxErrorChanAlreadyInTask,
//         ErrorVirtualChanDoesNotExist = nidaqmx_sys::DAQmxErrorVirtualChanDoesNotExist,
//         ErrorChanNotInTask = nidaqmx_sys::DAQmxErrorChanNotInTask,
//         ErrorTaskNotInDataNeighborhood = nidaqmx_sys::DAQmxErrorTaskNotInDataNeighborhood,
//         ErrorCantSaveTaskWithoutReplace = nidaqmx_sys::DAQmxErrorCantSaveTaskWithoutReplace,
//         ErrorCantSaveChanWithoutReplace = nidaqmx_sys::DAQmxErrorCantSaveChanWithoutReplace,
//         ErrorDevNotInTask = nidaqmx_sys::DAQmxErrorDevNotInTask,
//         ErrorDevAlreadyInTask = nidaqmx_sys::DAQmxErrorDevAlreadyInTask,
//         ErrorCanNotPerformOpWhileTaskRunning =
//             nidaqmx_sys::DAQmxErrorCanNotPerformOpWhileTaskRunning,
//         ErrorCanNotPerformOpWhenNoChansInTask =
//             nidaqmx_sys::DAQmxErrorCanNotPerformOpWhenNoChansInTask,
//         ErrorCanNotPerformOpWhenNoDevInTask = nidaqmx_sys::DAQmxErrorCanNotPerformOpWhenNoDevInTask,
//         ErrorCannotPerformOpWhenTaskNotRunning =
//             nidaqmx_sys::DAQmxErrorCannotPerformOpWhenTaskNotRunning,
//         ErrorOperationTimedOut = nidaqmx_sys::DAQmxErrorOperationTimedOut,
//         ErrorCannotReadWhenAutoStartFalseAndTaskNotRunningOrCommitted =
//             nidaqmx_sys::DAQmxErrorCannotReadWhenAutoStartFalseAndTaskNotRunningOrCommitted,
//         ErrorCannotWriteWhenAutoStartFalseAndTaskNotRunningOrCommitted =
//             nidaqmx_sys::DAQmxErrorCannotWriteWhenAutoStartFalseAndTaskNotRunningOrCommitted,
//         ErrorTaskVersionNew = nidaqmx_sys::DAQmxErrorTaskVersionNew,
//         ErrorChanVersionNew = nidaqmx_sys::DAQmxErrorChanVersionNew,
//         ErrorEmptyString = nidaqmx_sys::DAQmxErrorEmptyString,
//         ErrorChannelSizeTooBigForPortReadType =
//             nidaqmx_sys::DAQmxErrorChannelSizeTooBigForPortReadType,
//         ErrorChannelSizeTooBigForPortWriteType =
//             nidaqmx_sys::DAQmxErrorChannelSizeTooBigForPortWriteType,
//         ErrorExpectedNumberOfChannelsVerificationFailed =
//             nidaqmx_sys::DAQmxErrorExpectedNumberOfChannelsVerificationFailed,
//         ErrorNumLinesMismatchInReadOrWrite = nidaqmx_sys::DAQmxErrorNumLinesMismatchInReadOrWrite,
//         ErrorOutputBufferEmpty = nidaqmx_sys::DAQmxErrorOutputBufferEmpty,
//         ErrorInvalidChanName = nidaqmx_sys::DAQmxErrorInvalidChanName,
//         ErrorReadNoInputChansInTask = nidaqmx_sys::DAQmxErrorReadNoInputChansInTask,
//         ErrorWriteNoOutputChansInTask = nidaqmx_sys::DAQmxErrorWriteNoOutputChansInTask,
//         ErrorPropertyNotSupportedNotInputTask =
//             nidaqmx_sys::DAQmxErrorPropertyNotSupportedNotInputTask,
//         ErrorPropertyNotSupportedNotOutputTask =
//             nidaqmx_sys::DAQmxErrorPropertyNotSupportedNotOutputTask,
//         ErrorGetPropertyNotInputBufferedTask =
//             nidaqmx_sys::DAQmxErrorGetPropertyNotInputBufferedTask,
//         ErrorGetPropertyNotOutputBufferedTask =
//             nidaqmx_sys::DAQmxErrorGetPropertyNotOutputBufferedTask,
//         ErrorInvalidTimeoutVal = nidaqmx_sys::DAQmxErrorInvalidTimeoutVal,
//         ErrorAttributeNotSupportedInTaskContext =
//             nidaqmx_sys::DAQmxErrorAttributeNotSupportedInTaskContext,
//         ErrorAttributeNotQueryableUnlessTaskIsCommitted =
//             nidaqmx_sys::DAQmxErrorAttributeNotQueryableUnlessTaskIsCommitted,
//         ErrorAttributeNotSettableWhenTaskIsRunning =
//             nidaqmx_sys::DAQmxErrorAttributeNotSettableWhenTaskIsRunning,
//         ErrorDACRngLowNotMinusRefValNorZero = nidaqmx_sys::DAQmxErrorDACRngLowNotMinusRefValNorZero,
//         ErrorDACRngHighNotEqualRefVal = nidaqmx_sys::DAQmxErrorDACRngHighNotEqualRefVal,
//         ErrorUnitsNotFromCustomScale = nidaqmx_sys::DAQmxErrorUnitsNotFromCustomScale,
//         ErrorInvalidVoltageReadingDuringExtCal =
//             nidaqmx_sys::DAQmxErrorInvalidVoltageReadingDuringExtCal,
//         ErrorCalFunctionNotSupported = nidaqmx_sys::DAQmxErrorCalFunctionNotSupported,
//         ErrorInvalidPhysicalChanForCal = nidaqmx_sys::DAQmxErrorInvalidPhysicalChanForCal,
//         ErrorExtCalNotComplete = nidaqmx_sys::DAQmxErrorExtCalNotComplete,
//         ErrorCantSyncToExtStimulusFreqDuringCal =
//             nidaqmx_sys::DAQmxErrorCantSyncToExtStimulusFreqDuringCal,
//         ErrorUnableToDetectExtStimulusFreqDuringCal =
//             nidaqmx_sys::DAQmxErrorUnableToDetectExtStimulusFreqDuringCal,
//         ErrorInvalidCloseAction = nidaqmx_sys::DAQmxErrorInvalidCloseAction,
//         ErrorExtCalFunctionOutsideExtCalSession =
//             nidaqmx_sys::DAQmxErrorExtCalFunctionOutsideExtCalSession,
//         ErrorInvalidCalArea = nidaqmx_sys::DAQmxErrorInvalidCalArea,
//         ErrorExtCalConstsInvalid = nidaqmx_sys::DAQmxErrorExtCalConstsInvalid,
//         ErrorStartTrigDelayWithExtSampClk = nidaqmx_sys::DAQmxErrorStartTrigDelayWithExtSampClk,
//         ErrorDelayFromSampClkWithExtConv = nidaqmx_sys::DAQmxErrorDelayFromSampClkWithExtConv,
//         ErrorFewerThan2PreScaledVals = nidaqmx_sys::DAQmxErrorFewerThan2PreScaledVals,
//         ErrorFewerThan2ScaledValues = nidaqmx_sys::DAQmxErrorFewerThan2ScaledValues,
//         ErrorPhysChanOutputType = nidaqmx_sys::DAQmxErrorPhysChanOutputType,
//         ErrorPhysChanMeasType = nidaqmx_sys::DAQmxErrorPhysChanMeasType,
//         ErrorInvalidPhysChanType = nidaqmx_sys::DAQmxErrorInvalidPhysChanType,
//         ErrorLabVIEWEmptyTaskOrChans = nidaqmx_sys::DAQmxErrorLabVIEWEmptyTaskOrChans,
//         ErrorLabVIEWInvalidTaskOrChans = nidaqmx_sys::DAQmxErrorLabVIEWInvalidTaskOrChans,
//         ErrorInvalidRefClkRate = nidaqmx_sys::DAQmxErrorInvalidRefClkRate,
//         ErrorInvalidExtTrigImpedance = nidaqmx_sys::DAQmxErrorInvalidExtTrigImpedance,
//         ErrorHystTrigLevelAIMax = nidaqmx_sys::DAQmxErrorHystTrigLevelAIMax,
//         ErrorLineNumIncompatibleWithVideoSignalFormat =
//             nidaqmx_sys::DAQmxErrorLineNumIncompatibleWithVideoSignalFormat,
//         ErrorTrigWindowAIMinAIMaxCombo = nidaqmx_sys::DAQmxErrorTrigWindowAIMinAIMaxCombo,
//         ErrorTrigAIMinAIMax = nidaqmx_sys::DAQmxErrorTrigAIMinAIMax,
//         ErrorHystTrigLevelAIMin = nidaqmx_sys::DAQmxErrorHystTrigLevelAIMin,
//         ErrorInvalidSampRateConsiderRIS = nidaqmx_sys::DAQmxErrorInvalidSampRateConsiderRIS,
//         ErrorInvalidReadPosDuringRIS = nidaqmx_sys::DAQmxErrorInvalidReadPosDuringRIS,
//         ErrorImmedTrigDuringRISMode = nidaqmx_sys::DAQmxErrorImmedTrigDuringRISMode,
//         ErrorTDCNotEnabledDuringRISMode = nidaqmx_sys::DAQmxErrorTDCNotEnabledDuringRISMode,
//         ErrorMultiRecWithRIS = nidaqmx_sys::DAQmxErrorMultiRecWithRIS,
//         ErrorInvalidRefClkSrc = nidaqmx_sys::DAQmxErrorInvalidRefClkSrc,
//         ErrorInvalidSampClkSrc = nidaqmx_sys::DAQmxErrorInvalidSampClkSrc,
//         ErrorInsufficientOnBoardMemForNumRecsAndSamps =
//             nidaqmx_sys::DAQmxErrorInsufficientOnBoardMemForNumRecsAndSamps,
//         ErrorInvalidAIAttenuation = nidaqmx_sys::DAQmxErrorInvalidAIAttenuation,
//         ErrorACCouplingNotAllowedWith50OhmImpedance =
//             nidaqmx_sys::DAQmxErrorACCouplingNotAllowedWith50OhmImpedance,
//         ErrorInvalidRecordNum = nidaqmx_sys::DAQmxErrorInvalidRecordNum,
//         ErrorZeroSlopeLinearScale = nidaqmx_sys::DAQmxErrorZeroSlopeLinearScale,
//         ErrorZeroReversePolyScaleCoeffs = nidaqmx_sys::DAQmxErrorZeroReversePolyScaleCoeffs,
//         ErrorZeroForwardPolyScaleCoeffs = nidaqmx_sys::DAQmxErrorZeroForwardPolyScaleCoeffs,
//         ErrorNoReversePolyScaleCoeffs = nidaqmx_sys::DAQmxErrorNoReversePolyScaleCoeffs,
//         ErrorNoForwardPolyScaleCoeffs = nidaqmx_sys::DAQmxErrorNoForwardPolyScaleCoeffs,
//         ErrorNoPolyScaleCoeffs = nidaqmx_sys::DAQmxErrorNoPolyScaleCoeffs,
//         ErrorReversePolyOrderLessThanNumPtsToCompute =
//             nidaqmx_sys::DAQmxErrorReversePolyOrderLessThanNumPtsToCompute,
//         ErrorReversePolyOrderNotPositive = nidaqmx_sys::DAQmxErrorReversePolyOrderNotPositive,
//         ErrorNumPtsToComputeNotPositive = nidaqmx_sys::DAQmxErrorNumPtsToComputeNotPositive,
//         ErrorWaveformLengthNotMultipleOfIncr =
//             nidaqmx_sys::DAQmxErrorWaveformLengthNotMultipleOfIncr,
//         ErrorCAPINoExtendedErrorInfoAvailable =
//             nidaqmx_sys::DAQmxErrorCAPINoExtendedErrorInfoAvailable,
//         ErrorCVIFunctionNotFoundInDAQmxDLL = nidaqmx_sys::DAQmxErrorCVIFunctionNotFoundInDAQmxDLL,
//         ErrorCVIFailedToLoadDAQmxDLL = nidaqmx_sys::DAQmxErrorCVIFailedToLoadDAQmxDLL,
//         ErrorNoCommonTrigLineForImmedRoute = nidaqmx_sys::DAQmxErrorNoCommonTrigLineForImmedRoute,
//         ErrorNoCommonTrigLineForTaskRoute = nidaqmx_sys::DAQmxErrorNoCommonTrigLineForTaskRoute,
//         ErrorF64PrptyValNotUnsignedInt = nidaqmx_sys::DAQmxErrorF64PrptyValNotUnsignedInt,
//         ErrorRegisterNotWritable = nidaqmx_sys::DAQmxErrorRegisterNotWritable,
//         ErrorInvalidOutputVoltageAtSampClkRate =
//             nidaqmx_sys::DAQmxErrorInvalidOutputVoltageAtSampClkRate,
//         ErrorStrobePhaseShiftDCMBecameUnlocked =
//             nidaqmx_sys::DAQmxErrorStrobePhaseShiftDCMBecameUnlocked,
//         ErrorDrivePhaseShiftDCMBecameUnlocked =
//             nidaqmx_sys::DAQmxErrorDrivePhaseShiftDCMBecameUnlocked,
//         ErrorClkOutPhaseShiftDCMBecameUnlocked =
//             nidaqmx_sys::DAQmxErrorClkOutPhaseShiftDCMBecameUnlocked,
//         ErrorOutputBoardClkDCMBecameUnlocked =
//             nidaqmx_sys::DAQmxErrorOutputBoardClkDCMBecameUnlocked,
//         ErrorInputBoardClkDCMBecameUnlocked = nidaqmx_sys::DAQmxErrorInputBoardClkDCMBecameUnlocked,
//         ErrorInternalClkDCMBecameUnlocked = nidaqmx_sys::DAQmxErrorInternalClkDCMBecameUnlocked,
//         ErrorDCMLock = nidaqmx_sys::DAQmxErrorDCMLock,
//         ErrorDataLineReservedForDynamicOutput =
//             nidaqmx_sys::DAQmxErrorDataLineReservedForDynamicOutput,
//         ErrorInvalidRefClkSrcGivenSampClkSrc =
//             nidaqmx_sys::DAQmxErrorInvalidRefClkSrcGivenSampClkSrc,
//         ErrorNoPatternMatcherAvailable = nidaqmx_sys::DAQmxErrorNoPatternMatcherAvailable,
//         ErrorInvalidDelaySampRateBelowPhaseShiftDCMThresh =
//             nidaqmx_sys::DAQmxErrorInvalidDelaySampRateBelowPhaseShiftDCMThresh,
//         ErrorStrainGageCalibration = nidaqmx_sys::DAQmxErrorStrainGageCalibration,
//         ErrorInvalidExtClockFreqAndDivCombo = nidaqmx_sys::DAQmxErrorInvalidExtClockFreqAndDivCombo,
//         ErrorCustomScaleDoesNotExist = nidaqmx_sys::DAQmxErrorCustomScaleDoesNotExist,
//         ErrorOnlyFrontEndChanOpsDuringScan = nidaqmx_sys::DAQmxErrorOnlyFrontEndChanOpsDuringScan,
//         ErrorInvalidOptionForDigitalPortChannel =
//             nidaqmx_sys::DAQmxErrorInvalidOptionForDigitalPortChannel,
//         ErrorUnsupportedSignalTypeExportSignal =
//             nidaqmx_sys::DAQmxErrorUnsupportedSignalTypeExportSignal,
//         ErrorInvalidSignalTypeExportSignal = nidaqmx_sys::DAQmxErrorInvalidSignalTypeExportSignal,
//         ErrorUnsupportedTrigTypeSendsSWTrig = nidaqmx_sys::DAQmxErrorUnsupportedTrigTypeSendsSWTrig,
//         ErrorInvalidTrigTypeSendsSWTrig = nidaqmx_sys::DAQmxErrorInvalidTrigTypeSendsSWTrig,
//         ErrorRepeatedPhysicalChan = nidaqmx_sys::DAQmxErrorRepeatedPhysicalChan,
//         ErrorResourcesInUseForRouteInTask = nidaqmx_sys::DAQmxErrorResourcesInUseForRouteInTask,
//         ErrorResourcesInUseForRoute = nidaqmx_sys::DAQmxErrorResourcesInUseForRoute,
//         ErrorRouteNotSupportedByHW = nidaqmx_sys::DAQmxErrorRouteNotSupportedByHW,
//         ErrorResourcesInUseForExportSignalPolarity =
//             nidaqmx_sys::DAQmxErrorResourcesInUseForExportSignalPolarity,
//         ErrorResourcesInUseForInversionInTask =
//             nidaqmx_sys::DAQmxErrorResourcesInUseForInversionInTask,
//         ErrorResourcesInUseForInversion = nidaqmx_sys::DAQmxErrorResourcesInUseForInversion,
//         ErrorExportSignalPolarityNotSupportedByHW =
//             nidaqmx_sys::DAQmxErrorExportSignalPolarityNotSupportedByHW,
//         ErrorInversionNotSupportedByHW = nidaqmx_sys::DAQmxErrorInversionNotSupportedByHW,
//         ErrorOverloadedChansExistNotRead = nidaqmx_sys::DAQmxErrorOverloadedChansExistNotRead,
//         ErrorInputFIFOOverflow2 = nidaqmx_sys::DAQmxErrorInputFIFOOverflow2,
//         ErrorCJCChanNotSpecd = nidaqmx_sys::DAQmxErrorCJCChanNotSpecd,
//         ErrorCtrExportSignalNotPossible = nidaqmx_sys::DAQmxErrorCtrExportSignalNotPossible,
//         ErrorRefTrigWhenContinuous = nidaqmx_sys::DAQmxErrorRefTrigWhenContinuous,
//         ErrorIncompatibleSensorOutputAndDeviceInputRanges =
//             nidaqmx_sys::DAQmxErrorIncompatibleSensorOutputAndDeviceInputRanges,
//         ErrorCustomScaleNameUsed = nidaqmx_sys::DAQmxErrorCustomScaleNameUsed,
//         ErrorPropertyValNotSupportedByHW = nidaqmx_sys::DAQmxErrorPropertyValNotSupportedByHW,
//         ErrorPropertyValNotValidTermName = nidaqmx_sys::DAQmxErrorPropertyValNotValidTermName,
//         ErrorResourcesInUseForProperty = nidaqmx_sys::DAQmxErrorResourcesInUseForProperty,
//         ErrorCJCChanAlreadyUsed = nidaqmx_sys::DAQmxErrorCJCChanAlreadyUsed,
//         ErrorForwardPolynomialCoefNotSpecd = nidaqmx_sys::DAQmxErrorForwardPolynomialCoefNotSpecd,
//         ErrorTableScaleNumPreScaledAndScaledValsNotEqual =
//             nidaqmx_sys::DAQmxErrorTableScaleNumPreScaledAndScaledValsNotEqual,
//         ErrorTableScalePreScaledValsNotSpecd =
//             nidaqmx_sys::DAQmxErrorTableScalePreScaledValsNotSpecd,
//         ErrorTableScaleScaledValsNotSpecd = nidaqmx_sys::DAQmxErrorTableScaleScaledValsNotSpecd,
//         ErrorIntermediateBufferSizeNotMultipleOfIncr =
//             nidaqmx_sys::DAQmxErrorIntermediateBufferSizeNotMultipleOfIncr,
//         ErrorEventPulseWidthOutOfRange = nidaqmx_sys::DAQmxErrorEventPulseWidthOutOfRange,
//         ErrorEventDelayOutOfRange = nidaqmx_sys::DAQmxErrorEventDelayOutOfRange,
//         ErrorSampPerChanNotMultipleOfIncr = nidaqmx_sys::DAQmxErrorSampPerChanNotMultipleOfIncr,
//         ErrorCannotCalculateNumSampsTaskNotStarted =
//             nidaqmx_sys::DAQmxErrorCannotCalculateNumSampsTaskNotStarted,
//         ErrorScriptNotInMem = nidaqmx_sys::DAQmxErrorScriptNotInMem,
//         ErrorOnboardMemTooSmall = nidaqmx_sys::DAQmxErrorOnboardMemTooSmall,
//         ErrorReadAllAvailableDataWithoutBuffer =
//             nidaqmx_sys::DAQmxErrorReadAllAvailableDataWithoutBuffer,
//         ErrorPulseActiveAtStart = nidaqmx_sys::DAQmxErrorPulseActiveAtStart,
//         ErrorCalTempNotSupported = nidaqmx_sys::DAQmxErrorCalTempNotSupported,
//         ErrorDelayFromSampClkTooLong = nidaqmx_sys::DAQmxErrorDelayFromSampClkTooLong,
//         ErrorDelayFromSampClkTooShort = nidaqmx_sys::DAQmxErrorDelayFromSampClkTooShort,
//         ErrorAIConvRateTooHigh = nidaqmx_sys::DAQmxErrorAIConvRateTooHigh,
//         ErrorDelayFromStartTrigTooLong = nidaqmx_sys::DAQmxErrorDelayFromStartTrigTooLong,
//         ErrorDelayFromStartTrigTooShort = nidaqmx_sys::DAQmxErrorDelayFromStartTrigTooShort,
//         ErrorSampRateTooHigh = nidaqmx_sys::DAQmxErrorSampRateTooHigh,
//         ErrorSampRateTooLow = nidaqmx_sys::DAQmxErrorSampRateTooLow,
//         ErrorPFI0UsedForAnalogAndDigitalSrc = nidaqmx_sys::DAQmxErrorPFI0UsedForAnalogAndDigitalSrc,
//         ErrorPrimingCfgFIFO = nidaqmx_sys::DAQmxErrorPrimingCfgFIFO,
//         ErrorCannotOpenTopologyCfgFile = nidaqmx_sys::DAQmxErrorCannotOpenTopologyCfgFile,
//         ErrorInvalidDTInsideWfmDataType = nidaqmx_sys::DAQmxErrorInvalidDTInsideWfmDataType,
//         ErrorRouteSrcAndDestSame = nidaqmx_sys::DAQmxErrorRouteSrcAndDestSame,
//         ErrorReversePolynomialCoefNotSpecd = nidaqmx_sys::DAQmxErrorReversePolynomialCoefNotSpecd,
//         ErrorDevAbsentOrUnavailable = nidaqmx_sys::DAQmxErrorDevAbsentOrUnavailable,
//         ErrorNoAdvTrigForMultiDevScan = nidaqmx_sys::DAQmxErrorNoAdvTrigForMultiDevScan,
//         ErrorInterruptsInsufficientDataXferMech =
//             nidaqmx_sys::DAQmxErrorInterruptsInsufficientDataXferMech,
//         ErrorInvalidAttentuationBasedOnMinMax =
//             nidaqmx_sys::DAQmxErrorInvalidAttentuationBasedOnMinMax,
//         ErrorCabledModuleCannotRouteSSH = nidaqmx_sys::DAQmxErrorCabledModuleCannotRouteSSH,
//         ErrorCabledModuleCannotRouteConvClk = nidaqmx_sys::DAQmxErrorCabledModuleCannotRouteConvClk,
//         ErrorInvalidExcitValForScaling = nidaqmx_sys::DAQmxErrorInvalidExcitValForScaling,
//         ErrorNoDevMemForScript = nidaqmx_sys::DAQmxErrorNoDevMemForScript,
//         ErrorScriptDataUnderflow = nidaqmx_sys::DAQmxErrorScriptDataUnderflow,
//         ErrorNoDevMemForWaveform = nidaqmx_sys::DAQmxErrorNoDevMemForWaveform,
//         ErrorStreamDCMBecameUnlocked = nidaqmx_sys::DAQmxErrorStreamDCMBecameUnlocked,
//         ErrorStreamDCMLock = nidaqmx_sys::DAQmxErrorStreamDCMLock,
//         ErrorWaveformNotInMem = nidaqmx_sys::DAQmxErrorWaveformNotInMem,
//         ErrorWaveformWriteOutOfBounds = nidaqmx_sys::DAQmxErrorWaveformWriteOutOfBounds,
//         ErrorWaveformPreviouslyAllocated = nidaqmx_sys::DAQmxErrorWaveformPreviouslyAllocated,
//         ErrorSampClkTbMasterTbDivNotAppropriateForSampTbSrc =
//             nidaqmx_sys::DAQmxErrorSampClkTbMasterTbDivNotAppropriateForSampTbSrc,
//         ErrorSampTbRateSampTbSrcMismatch = nidaqmx_sys::DAQmxErrorSampTbRateSampTbSrcMismatch,
//         ErrorMasterTbRateMasterTbSrcMismatch =
//             nidaqmx_sys::DAQmxErrorMasterTbRateMasterTbSrcMismatch,
//         ErrorSampsPerChanTooBig = nidaqmx_sys::DAQmxErrorSampsPerChanTooBig,
//         ErrorFinitePulseTrainNotPossible = nidaqmx_sys::DAQmxErrorFinitePulseTrainNotPossible,
//         ErrorExtMasterTimebaseRateNotSpecified =
//             nidaqmx_sys::DAQmxErrorExtMasterTimebaseRateNotSpecified,
//         ErrorExtSampClkSrcNotSpecified = nidaqmx_sys::DAQmxErrorExtSampClkSrcNotSpecified,
//         ErrorInputSignalSlowerThanMeasTime = nidaqmx_sys::DAQmxErrorInputSignalSlowerThanMeasTime,
//         ErrorCannotUpdatePulseGenProperty = nidaqmx_sys::DAQmxErrorCannotUpdatePulseGenProperty,
//         ErrorInvalidTimingType = nidaqmx_sys::DAQmxErrorInvalidTimingType,
//         ErrorPropertyUnavailWhenUsingOnboardMemory =
//             nidaqmx_sys::DAQmxErrorPropertyUnavailWhenUsingOnboardMemory,
//         ErrorCannotWriteAfterStartWithOnboardMemory =
//             nidaqmx_sys::DAQmxErrorCannotWriteAfterStartWithOnboardMemory,
//         ErrorNotEnoughSampsWrittenForInitialXferRqstCondition =
//             nidaqmx_sys::DAQmxErrorNotEnoughSampsWrittenForInitialXferRqstCondition,
//         ErrorNoMoreSpace = nidaqmx_sys::DAQmxErrorNoMoreSpace,
//         ErrorSamplesCanNotYetBeWritten = nidaqmx_sys::DAQmxErrorSamplesCanNotYetBeWritten,
//         ErrorGenStoppedToPreventIntermediateBufferRegenOfOldSamples =
//             nidaqmx_sys::DAQmxErrorGenStoppedToPreventIntermediateBufferRegenOfOldSamples,
//         ErrorGenStoppedToPreventRegenOfOldSamples =
//             nidaqmx_sys::DAQmxErrorGenStoppedToPreventRegenOfOldSamples,
//         ErrorSamplesNoLongerWriteable = nidaqmx_sys::DAQmxErrorSamplesNoLongerWriteable,
//         ErrorSamplesWillNeverBeGenerated = nidaqmx_sys::DAQmxErrorSamplesWillNeverBeGenerated,
//         ErrorNegativeWriteSampleNumber = nidaqmx_sys::DAQmxErrorNegativeWriteSampleNumber,
//         ErrorNoAcqStarted = nidaqmx_sys::DAQmxErrorNoAcqStarted,
//         ErrorSamplesNotYetAvailable = nidaqmx_sys::DAQmxErrorSamplesNotYetAvailable,
//         ErrorAcqStoppedToPreventIntermediateBufferOverflow =
//             nidaqmx_sys::DAQmxErrorAcqStoppedToPreventIntermediateBufferOverflow,
//         ErrorNoRefTrigConfigured = nidaqmx_sys::DAQmxErrorNoRefTrigConfigured,
//         ErrorCannotReadRelativeToRefTrigUntilDone =
//             nidaqmx_sys::DAQmxErrorCannotReadRelativeToRefTrigUntilDone,
//         ErrorSamplesNoLongerAvailable = nidaqmx_sys::DAQmxErrorSamplesNoLongerAvailable,
//         ErrorSamplesWillNeverBeAvailable = nidaqmx_sys::DAQmxErrorSamplesWillNeverBeAvailable,
//         ErrorNegativeReadSampleNumber = nidaqmx_sys::DAQmxErrorNegativeReadSampleNumber,
//         ErrorExternalSampClkAndRefClkThruSameTerm =
//             nidaqmx_sys::DAQmxErrorExternalSampClkAndRefClkThruSameTerm,
//         ErrorExtSampClkRateTooLowForClkIn = nidaqmx_sys::DAQmxErrorExtSampClkRateTooLowForClkIn,
//         ErrorExtSampClkRateTooHighForBackplane =
//             nidaqmx_sys::DAQmxErrorExtSampClkRateTooHighForBackplane,
//         ErrorSampClkRateAndDivCombo = nidaqmx_sys::DAQmxErrorSampClkRateAndDivCombo,
//         ErrorSampClkRateTooLowForDivDown = nidaqmx_sys::DAQmxErrorSampClkRateTooLowForDivDown,
//         ErrorProductOfAOMinAndGainTooSmall = nidaqmx_sys::DAQmxErrorProductOfAOMinAndGainTooSmall,
//         ErrorInterpolationRateNotPossible = nidaqmx_sys::DAQmxErrorInterpolationRateNotPossible,
//         ErrorOffsetTooLarge = nidaqmx_sys::DAQmxErrorOffsetTooLarge,
//         ErrorOffsetTooSmall = nidaqmx_sys::DAQmxErrorOffsetTooSmall,
//         ErrorProductOfAOMaxAndGainTooLarge = nidaqmx_sys::DAQmxErrorProductOfAOMaxAndGainTooLarge,
//         ErrorMinAndMaxNotSymmetric = nidaqmx_sys::DAQmxErrorMinAndMaxNotSymmetric,
//         ErrorInvalidAnalogTrigSrc = nidaqmx_sys::DAQmxErrorInvalidAnalogTrigSrc,
//         ErrorTooManyChansForAnalogRefTrig = nidaqmx_sys::DAQmxErrorTooManyChansForAnalogRefTrig,
//         ErrorTooManyChansForAnalogPauseTrig = nidaqmx_sys::DAQmxErrorTooManyChansForAnalogPauseTrig,
//         ErrorTrigWhenOnDemandSampTiming = nidaqmx_sys::DAQmxErrorTrigWhenOnDemandSampTiming,
//         ErrorInconsistentAnalogTrigSettings = nidaqmx_sys::DAQmxErrorInconsistentAnalogTrigSettings,
//         ErrorMemMapDataXferModeSampTimingCombo =
//             nidaqmx_sys::DAQmxErrorMemMapDataXferModeSampTimingCombo,
//         ErrorInvalidJumperedAttr = nidaqmx_sys::DAQmxErrorInvalidJumperedAttr,
//         ErrorInvalidGainBasedOnMinMax = nidaqmx_sys::DAQmxErrorInvalidGainBasedOnMinMax,
//         ErrorInconsistentExcit = nidaqmx_sys::DAQmxErrorInconsistentExcit,
//         ErrorTopologyNotSupportedByCfgTermBlock =
//             nidaqmx_sys::DAQmxErrorTopologyNotSupportedByCfgTermBlock,
//         ErrorBuiltInTempSensorNotSupported = nidaqmx_sys::DAQmxErrorBuiltInTempSensorNotSupported,
//         ErrorInvalidTerm = nidaqmx_sys::DAQmxErrorInvalidTerm,
//         ErrorCannotTristateTerm = nidaqmx_sys::DAQmxErrorCannotTristateTerm,
//         ErrorCannotTristateBusyTerm = nidaqmx_sys::DAQmxErrorCannotTristateBusyTerm,
//         ErrorNoDMAChansAvailable = nidaqmx_sys::DAQmxErrorNoDMAChansAvailable,
//         ErrorInvalidWaveformLengthWithinLoopInScript =
//             nidaqmx_sys::DAQmxErrorInvalidWaveformLengthWithinLoopInScript,
//         ErrorInvalidSubsetLengthWithinLoopInScript =
//             nidaqmx_sys::DAQmxErrorInvalidSubsetLengthWithinLoopInScript,
//         ErrorMarkerPosInvalidForLoopInScript =
//             nidaqmx_sys::DAQmxErrorMarkerPosInvalidForLoopInScript,
//         ErrorIntegerExpectedInScript = nidaqmx_sys::DAQmxErrorIntegerExpectedInScript,
//         ErrorPLLBecameUnlocked = nidaqmx_sys::DAQmxErrorPLLBecameUnlocked,
//         ErrorPLLLock = nidaqmx_sys::DAQmxErrorPLLLock,
//         ErrorDDCClkOutDCMBecameUnlocked = nidaqmx_sys::DAQmxErrorDDCClkOutDCMBecameUnlocked,
//         ErrorDDCClkOutDCMLock = nidaqmx_sys::DAQmxErrorDDCClkOutDCMLock,
//         ErrorClkDoublerDCMBecameUnlocked = nidaqmx_sys::DAQmxErrorClkDoublerDCMBecameUnlocked,
//         ErrorClkDoublerDCMLock = nidaqmx_sys::DAQmxErrorClkDoublerDCMLock,
//         ErrorSampClkDCMBecameUnlocked = nidaqmx_sys::DAQmxErrorSampClkDCMBecameUnlocked,
//         ErrorSampClkDCMLock = nidaqmx_sys::DAQmxErrorSampClkDCMLock,
//         ErrorSampClkTimebaseDCMBecameUnlocked =
//             nidaqmx_sys::DAQmxErrorSampClkTimebaseDCMBecameUnlocked,
//         ErrorSampClkTimebaseDCMLock = nidaqmx_sys::DAQmxErrorSampClkTimebaseDCMLock,
//         ErrorAttrCannotBeReset = nidaqmx_sys::DAQmxErrorAttrCannotBeReset,
//         ErrorExplanationNotFound = nidaqmx_sys::DAQmxErrorExplanationNotFound,
//         ErrorWriteBufferTooSmall = nidaqmx_sys::DAQmxErrorWriteBufferTooSmall,
//         ErrorSpecifiedAttrNotValid = nidaqmx_sys::DAQmxErrorSpecifiedAttrNotValid,
//         ErrorAttrCannotBeRead = nidaqmx_sys::DAQmxErrorAttrCannotBeRead,
//         ErrorAttrCannotBeSet = nidaqmx_sys::DAQmxErrorAttrCannotBeSet,
//         ErrorNULLPtrForC_Api = nidaqmx_sys::DAQmxErrorNULLPtrForC_Api,
//         ErrorReadBufferTooSmall = nidaqmx_sys::DAQmxErrorReadBufferTooSmall,
//         ErrorBufferTooSmallForString = nidaqmx_sys::DAQmxErrorBufferTooSmallForString,
//         ErrorNoAvailTrigLinesOnDevice = nidaqmx_sys::DAQmxErrorNoAvailTrigLinesOnDevice,
//         ErrorTrigBusLineNotAvail = nidaqmx_sys::DAQmxErrorTrigBusLineNotAvail,
//         ErrorCouldNotReserveRequestedTrigLine =
//             nidaqmx_sys::DAQmxErrorCouldNotReserveRequestedTrigLine,
//         ErrorTrigLineNotFound = nidaqmx_sys::DAQmxErrorTrigLineNotFound,
//         ErrorSCXI1126ThreshHystCombination = nidaqmx_sys::DAQmxErrorSCXI1126ThreshHystCombination,
//         ErrorAcqStoppedToPreventInputBufferOverwrite =
//             nidaqmx_sys::DAQmxErrorAcqStoppedToPreventInputBufferOverwrite,
//         ErrorTimeoutExceeded = nidaqmx_sys::DAQmxErrorTimeoutExceeded,
//         ErrorInvalidDeviceID = nidaqmx_sys::DAQmxErrorInvalidDeviceID,
//         ErrorInvalidAOChanOrder = nidaqmx_sys::DAQmxErrorInvalidAOChanOrder,
//         ErrorSampleTimingTypeAndDataXferMode =
//             nidaqmx_sys::DAQmxErrorSampleTimingTypeAndDataXferMode,
//         ErrorBufferWithOnDemandSampTiming = nidaqmx_sys::DAQmxErrorBufferWithOnDemandSampTiming,
//         ErrorBufferAndDataXferMode = nidaqmx_sys::DAQmxErrorBufferAndDataXferMode,
//         ErrorMemMapAndBuffer = nidaqmx_sys::DAQmxErrorMemMapAndBuffer,
//         ErrorNoAnalogTrigHW = nidaqmx_sys::DAQmxErrorNoAnalogTrigHW,
//         ErrorTooManyPretrigPlusMinPostTrigSamps =
//             nidaqmx_sys::DAQmxErrorTooManyPretrigPlusMinPostTrigSamps,
//         ErrorInconsistentUnitsSpecified = nidaqmx_sys::DAQmxErrorInconsistentUnitsSpecified,
//         ErrorMultipleRelaysForSingleRelayOp = nidaqmx_sys::DAQmxErrorMultipleRelaysForSingleRelayOp,
//         ErrorMultipleDevIDsPerChassisSpecifiedInList =
//             nidaqmx_sys::DAQmxErrorMultipleDevIDsPerChassisSpecifiedInList,
//         ErrorDuplicateDevIDInList = nidaqmx_sys::DAQmxErrorDuplicateDevIDInList,
//         ErrorInvalidRangeStatementCharInList =
//             nidaqmx_sys::DAQmxErrorInvalidRangeStatementCharInList,
//         ErrorInvalidDeviceIDInList = nidaqmx_sys::DAQmxErrorInvalidDeviceIDInList,
//         ErrorTriggerPolarityConflict = nidaqmx_sys::DAQmxErrorTriggerPolarityConflict,
//         ErrorCannotScanWithCurrentTopology = nidaqmx_sys::DAQmxErrorCannotScanWithCurrentTopology,
//         ErrorUnexpectedIdentifierInFullySpecifiedPathInList =
//             nidaqmx_sys::DAQmxErrorUnexpectedIdentifierInFullySpecifiedPathInList,
//         ErrorSwitchCannotDriveMultipleTrigLines =
//             nidaqmx_sys::DAQmxErrorSwitchCannotDriveMultipleTrigLines,
//         ErrorInvalidRelayName = nidaqmx_sys::DAQmxErrorInvalidRelayName,
//         ErrorSwitchScanlistTooBig = nidaqmx_sys::DAQmxErrorSwitchScanlistTooBig,
//         ErrorSwitchChanInUse = nidaqmx_sys::DAQmxErrorSwitchChanInUse,
//         ErrorSwitchNotResetBeforeScan = nidaqmx_sys::DAQmxErrorSwitchNotResetBeforeScan,
//         ErrorInvalidTopology = nidaqmx_sys::DAQmxErrorInvalidTopology,
//         ErrorAttrNotSupported = nidaqmx_sys::DAQmxErrorAttrNotSupported,
//         ErrorUnexpectedEndOfActionsInList = nidaqmx_sys::DAQmxErrorUnexpectedEndOfActionsInList,
//         ErrorPowerLimitExceeded = nidaqmx_sys::DAQmxErrorPowerLimitExceeded,
//         ErrorHWUnexpectedlyPoweredOffAndOn = nidaqmx_sys::DAQmxErrorHWUnexpectedlyPoweredOffAndOn,
//         ErrorSwitchOperationNotSupported = nidaqmx_sys::DAQmxErrorSwitchOperationNotSupported,
//         ErrorOnlyContinuousScanSupported = nidaqmx_sys::DAQmxErrorOnlyContinuousScanSupported,
//         ErrorSwitchDifferentTopologyWhenScanning =
//             nidaqmx_sys::DAQmxErrorSwitchDifferentTopologyWhenScanning,
//         ErrorDisconnectPathNotSameAsExistingPath =
//             nidaqmx_sys::DAQmxErrorDisconnectPathNotSameAsExistingPath,
//         ErrorConnectionNotPermittedOnChanReservedForRouting =
//             nidaqmx_sys::DAQmxErrorConnectionNotPermittedOnChanReservedForRouting,
//         ErrorCannotConnectSrcChans = nidaqmx_sys::DAQmxErrorCannotConnectSrcChans,
//         ErrorCannotConnectChannelToItself = nidaqmx_sys::DAQmxErrorCannotConnectChannelToItself,
//         ErrorChannelNotReservedForRouting = nidaqmx_sys::DAQmxErrorChannelNotReservedForRouting,
//         ErrorCannotConnectChansDirectly = nidaqmx_sys::DAQmxErrorCannotConnectChansDirectly,
//         ErrorChansAlreadyConnected = nidaqmx_sys::DAQmxErrorChansAlreadyConnected,
//         ErrorChanDuplicatedInPath = nidaqmx_sys::DAQmxErrorChanDuplicatedInPath,
//         ErrorNoPathToDisconnect = nidaqmx_sys::DAQmxErrorNoPathToDisconnect,
//         ErrorInvalidSwitchChan = nidaqmx_sys::DAQmxErrorInvalidSwitchChan,
//         ErrorNoPathAvailableBetween2SwitchChans =
//             nidaqmx_sys::DAQmxErrorNoPathAvailableBetween2SwitchChans,
//         ErrorExplicitConnectionExists = nidaqmx_sys::DAQmxErrorExplicitConnectionExists,
//         ErrorSwitchDifferentSettlingTimeWhenScanning =
//             nidaqmx_sys::DAQmxErrorSwitchDifferentSettlingTimeWhenScanning,
//         ErrorOperationOnlyPermittedWhileScanning =
//             nidaqmx_sys::DAQmxErrorOperationOnlyPermittedWhileScanning,
//         ErrorOperationNotPermittedWhileScanning =
//             nidaqmx_sys::DAQmxErrorOperationNotPermittedWhileScanning,
//         ErrorHardwareNotResponding = nidaqmx_sys::DAQmxErrorHardwareNotResponding,
//         ErrorInvalidSampAndMasterTimebaseRateCombo =
//             nidaqmx_sys::DAQmxErrorInvalidSampAndMasterTimebaseRateCombo,
//         ErrorNonZeroBufferSizeInProgIOXfer = nidaqmx_sys::DAQmxErrorNonZeroBufferSizeInProgIOXfer,
//         ErrorVirtualChanNameUsed = nidaqmx_sys::DAQmxErrorVirtualChanNameUsed,
//         ErrorPhysicalChanDoesNotExist = nidaqmx_sys::DAQmxErrorPhysicalChanDoesNotExist,
//         ErrorMemMapOnlyForProgIOXfer = nidaqmx_sys::DAQmxErrorMemMapOnlyForProgIOXfer,
//         ErrorTooManyChans = nidaqmx_sys::DAQmxErrorTooManyChans,
//         ErrorCannotHaveCJTempWithOtherChans = nidaqmx_sys::DAQmxErrorCannotHaveCJTempWithOtherChans,
//         ErrorOutputBufferUnderwrite = nidaqmx_sys::DAQmxErrorOutputBufferUnderwrite,
//         ErrorSensorInvalidCompletionResistance =
//             nidaqmx_sys::DAQmxErrorSensorInvalidCompletionResistance,
//         ErrorVoltageExcitIncompatibleWith2WireCfg =
//             nidaqmx_sys::DAQmxErrorVoltageExcitIncompatibleWith2WireCfg,
//         ErrorIntExcitSrcNotAvailable = nidaqmx_sys::DAQmxErrorIntExcitSrcNotAvailable,
//         ErrorCannotCreateChannelAfterTaskVerified =
//             nidaqmx_sys::DAQmxErrorCannotCreateChannelAfterTaskVerified,
//         ErrorLinesReservedForSCXIControl = nidaqmx_sys::DAQmxErrorLinesReservedForSCXIControl,
//         ErrorCouldNotReserveLinesForSCXIControl =
//             nidaqmx_sys::DAQmxErrorCouldNotReserveLinesForSCXIControl,
//         ErrorCalibrationFailed = nidaqmx_sys::DAQmxErrorCalibrationFailed,
//         ErrorReferenceFrequencyInvalid = nidaqmx_sys::DAQmxErrorReferenceFrequencyInvalid,
//         ErrorReferenceResistanceInvalid = nidaqmx_sys::DAQmxErrorReferenceResistanceInvalid,
//         ErrorReferenceCurrentInvalid = nidaqmx_sys::DAQmxErrorReferenceCurrentInvalid,
//         ErrorReferenceVoltageInvalid = nidaqmx_sys::DAQmxErrorReferenceVoltageInvalid,
//         ErrorEEPROMDataInvalid = nidaqmx_sys::DAQmxErrorEEPROMDataInvalid,
//         ErrorCabledModuleNotCapableOfRoutingAI =
//             nidaqmx_sys::DAQmxErrorCabledModuleNotCapableOfRoutingAI,
//         ErrorChannelNotAvailableInParallelMode =
//             nidaqmx_sys::DAQmxErrorChannelNotAvailableInParallelMode,
//         ErrorExternalTimebaseRateNotKnownForDelay =
//             nidaqmx_sys::DAQmxErrorExternalTimebaseRateNotKnownForDelay,
//         ErrorFREQOUTCannotProduceDesiredFrequency =
//             nidaqmx_sys::DAQmxErrorFREQOUTCannotProduceDesiredFrequency,
//         ErrorMultipleCounterInputTask = nidaqmx_sys::DAQmxErrorMultipleCounterInputTask,
//         ErrorCounterStartPauseTriggerConflict =
//             nidaqmx_sys::DAQmxErrorCounterStartPauseTriggerConflict,
//         ErrorCounterInputPauseTriggerAndSampleClockInvalid =
//             nidaqmx_sys::DAQmxErrorCounterInputPauseTriggerAndSampleClockInvalid,
//         ErrorCounterOutputPauseTriggerInvalid =
//             nidaqmx_sys::DAQmxErrorCounterOutputPauseTriggerInvalid,
//         ErrorCounterTimebaseRateNotSpecified =
//             nidaqmx_sys::DAQmxErrorCounterTimebaseRateNotSpecified,
//         ErrorCounterTimebaseRateNotFound = nidaqmx_sys::DAQmxErrorCounterTimebaseRateNotFound,
//         ErrorCounterOverflow = nidaqmx_sys::DAQmxErrorCounterOverflow,
//         ErrorCounterNoTimebaseEdgesBetweenGates =
//             nidaqmx_sys::DAQmxErrorCounterNoTimebaseEdgesBetweenGates,
//         ErrorCounterMaxMinRangeFreq = nidaqmx_sys::DAQmxErrorCounterMaxMinRangeFreq,
//         ErrorCounterMaxMinRangeTime = nidaqmx_sys::DAQmxErrorCounterMaxMinRangeTime,
//         ErrorSuitableTimebaseNotFoundTimeCombo =
//             nidaqmx_sys::DAQmxErrorSuitableTimebaseNotFoundTimeCombo,
//         ErrorSuitableTimebaseNotFoundFrequencyCombo =
//             nidaqmx_sys::DAQmxErrorSuitableTimebaseNotFoundFrequencyCombo,
//         ErrorInternalTimebaseSourceDivisorCombo =
//             nidaqmx_sys::DAQmxErrorInternalTimebaseSourceDivisorCombo,
//         ErrorInternalTimebaseSourceRateCombo =
//             nidaqmx_sys::DAQmxErrorInternalTimebaseSourceRateCombo,
//         ErrorInternalTimebaseRateDivisorSourceCombo =
//             nidaqmx_sys::DAQmxErrorInternalTimebaseRateDivisorSourceCombo,
//         ErrorExternalTimebaseRateNotknownForRate =
//             nidaqmx_sys::DAQmxErrorExternalTimebaseRateNotknownForRate,
//         ErrorAnalogTrigChanNotFirstInScanList =
//             nidaqmx_sys::DAQmxErrorAnalogTrigChanNotFirstInScanList,
//         ErrorNoDivisorForExternalSignal = nidaqmx_sys::DAQmxErrorNoDivisorForExternalSignal,
//         ErrorAttributeInconsistentAcrossRepeatedPhysicalChannels =
//             nidaqmx_sys::DAQmxErrorAttributeInconsistentAcrossRepeatedPhysicalChannels,
//         ErrorCannotHandshakeWithPort0 = nidaqmx_sys::DAQmxErrorCannotHandshakeWithPort0,
//         ErrorControlLineConflictOnPortC = nidaqmx_sys::DAQmxErrorControlLineConflictOnPortC,
//         ErrorLines4To7ConfiguredForOutput = nidaqmx_sys::DAQmxErrorLines4To7ConfiguredForOutput,
//         ErrorLines4To7ConfiguredForInput = nidaqmx_sys::DAQmxErrorLines4To7ConfiguredForInput,
//         ErrorLines0To3ConfiguredForOutput = nidaqmx_sys::DAQmxErrorLines0To3ConfiguredForOutput,
//         ErrorLines0To3ConfiguredForInput = nidaqmx_sys::DAQmxErrorLines0To3ConfiguredForInput,
//         ErrorPortConfiguredForOutput = nidaqmx_sys::DAQmxErrorPortConfiguredForOutput,
//         ErrorPortConfiguredForInput = nidaqmx_sys::DAQmxErrorPortConfiguredForInput,
//         ErrorPortConfiguredForStaticDigitalOps =
//             nidaqmx_sys::DAQmxErrorPortConfiguredForStaticDigitalOps,
//         ErrorPortReservedForHandshaking = nidaqmx_sys::DAQmxErrorPortReservedForHandshaking,
//         ErrorPortDoesNotSupportHandshakingDataIO =
//             nidaqmx_sys::DAQmxErrorPortDoesNotSupportHandshakingDataIO,
//         ErrorCannotTristate8255OutputLines = nidaqmx_sys::DAQmxErrorCannotTristate8255OutputLines,
//         ErrorTemperatureOutOfRangeForCalibration =
//             nidaqmx_sys::DAQmxErrorTemperatureOutOfRangeForCalibration,
//         ErrorCalibrationHandleInvalid = nidaqmx_sys::DAQmxErrorCalibrationHandleInvalid,
//         ErrorPasswordRequired = nidaqmx_sys::DAQmxErrorPasswordRequired,
//         ErrorIncorrectPassword = nidaqmx_sys::DAQmxErrorIncorrectPassword,
//         ErrorPasswordTooLong = nidaqmx_sys::DAQmxErrorPasswordTooLong,
//         ErrorCalibrationSessionAlreadyOpen = nidaqmx_sys::DAQmxErrorCalibrationSessionAlreadyOpen,
//         ErrorSCXIModuleIncorrect = nidaqmx_sys::DAQmxErrorSCXIModuleIncorrect,
//         ErrorAttributeInconsistentAcrossChannelsOnDevice =
//             nidaqmx_sys::DAQmxErrorAttributeInconsistentAcrossChannelsOnDevice,
//         ErrorSCXI1122ResistanceChanNotSupportedForCfg =
//             nidaqmx_sys::DAQmxErrorSCXI1122ResistanceChanNotSupportedForCfg,
//         ErrorBracketPairingMismatchInList = nidaqmx_sys::DAQmxErrorBracketPairingMismatchInList,
//         ErrorInconsistentNumSamplesToWrite = nidaqmx_sys::DAQmxErrorInconsistentNumSamplesToWrite,
//         ErrorIncorrectDigitalPattern = nidaqmx_sys::DAQmxErrorIncorrectDigitalPattern,
//         ErrorIncorrectNumChannelsToWrite = nidaqmx_sys::DAQmxErrorIncorrectNumChannelsToWrite,
//         ErrorIncorrectReadFunction = nidaqmx_sys::DAQmxErrorIncorrectReadFunction,
//         ErrorPhysicalChannelNotSpecified = nidaqmx_sys::DAQmxErrorPhysicalChannelNotSpecified,
//         ErrorMoreThanOneTerminal = nidaqmx_sys::DAQmxErrorMoreThanOneTerminal,
//         ErrorMoreThanOneActiveChannelSpecified =
//             nidaqmx_sys::DAQmxErrorMoreThanOneActiveChannelSpecified,
//         ErrorInvalidNumberSamplesToRead = nidaqmx_sys::DAQmxErrorInvalidNumberSamplesToRead,
//         ErrorAnalogWaveformExpected = nidaqmx_sys::DAQmxErrorAnalogWaveformExpected,
//         ErrorDigitalWaveformExpected = nidaqmx_sys::DAQmxErrorDigitalWaveformExpected,
//         ErrorActiveChannelNotSpecified = nidaqmx_sys::DAQmxErrorActiveChannelNotSpecified,
//         ErrorFunctionNotSupportedForDeviceTasks =
//             nidaqmx_sys::DAQmxErrorFunctionNotSupportedForDeviceTasks,
//         ErrorFunctionNotInLibrary = nidaqmx_sys::DAQmxErrorFunctionNotInLibrary,
//         ErrorLibraryNotPresent = nidaqmx_sys::DAQmxErrorLibraryNotPresent,
//         ErrorDuplicateTask = nidaqmx_sys::DAQmxErrorDuplicateTask,
//         ErrorInvalidTask = nidaqmx_sys::DAQmxErrorInvalidTask,
//         ErrorInvalidChannel = nidaqmx_sys::DAQmxErrorInvalidChannel,
//         ErrorInvalidSyntaxForPhysicalChannelRange =
//             nidaqmx_sys::DAQmxErrorInvalidSyntaxForPhysicalChannelRange,
//         ErrorMinNotLessThanMax = nidaqmx_sys::DAQmxErrorMinNotLessThanMax,
//         ErrorSampleRateNumChansConvertPeriodCombo =
//             nidaqmx_sys::DAQmxErrorSampleRateNumChansConvertPeriodCombo,
//         ErrorAODuringCounter1DMAConflict = nidaqmx_sys::DAQmxErrorAODuringCounter1DMAConflict,
//         ErrorAIDuringCounter0DMAConflict = nidaqmx_sys::DAQmxErrorAIDuringCounter0DMAConflict,
//         ErrorInvalidAttributeValue = nidaqmx_sys::DAQmxErrorInvalidAttributeValue,
//         ErrorSuppliedCurrentDataOutsideSpecifiedRange =
//             nidaqmx_sys::DAQmxErrorSuppliedCurrentDataOutsideSpecifiedRange,
//         ErrorSuppliedVoltageDataOutsideSpecifiedRange =
//             nidaqmx_sys::DAQmxErrorSuppliedVoltageDataOutsideSpecifiedRange,
//         ErrorCannotStoreCalConst = nidaqmx_sys::DAQmxErrorCannotStoreCalConst,
//         ErrorSCXIModuleNotFound = nidaqmx_sys::DAQmxErrorSCXIModuleNotFound,
//         ErrorDuplicatePhysicalChansNotSupported =
//             nidaqmx_sys::DAQmxErrorDuplicatePhysicalChansNotSupported,
//         ErrorTooManyPhysicalChansInList = nidaqmx_sys::DAQmxErrorTooManyPhysicalChansInList,
//         ErrorInvalidAdvanceEventTriggerType = nidaqmx_sys::DAQmxErrorInvalidAdvanceEventTriggerType,
//         ErrorDeviceIsNotAValidSwitch = nidaqmx_sys::DAQmxErrorDeviceIsNotAValidSwitch,
//         ErrorDeviceDoesNotSupportScanning = nidaqmx_sys::DAQmxErrorDeviceDoesNotSupportScanning,
//         ErrorScanListCannotBeTimed = nidaqmx_sys::DAQmxErrorScanListCannotBeTimed,
//         ErrorConnectOperatorInvalidAtPointInList =
//             nidaqmx_sys::DAQmxErrorConnectOperatorInvalidAtPointInList,
//         ErrorUnexpectedSwitchActionInList = nidaqmx_sys::DAQmxErrorUnexpectedSwitchActionInList,
//         ErrorUnexpectedSeparatorInList = nidaqmx_sys::DAQmxErrorUnexpectedSeparatorInList,
//         ErrorExpectedTerminatorInList = nidaqmx_sys::DAQmxErrorExpectedTerminatorInList,
//         ErrorExpectedConnectOperatorInList = nidaqmx_sys::DAQmxErrorExpectedConnectOperatorInList,
//         ErrorExpectedSeparatorInList = nidaqmx_sys::DAQmxErrorExpectedSeparatorInList,
//         ErrorFullySpecifiedPathInListContainsRange =
//             nidaqmx_sys::DAQmxErrorFullySpecifiedPathInListContainsRange,
//         ErrorConnectionSeparatorAtEndOfList = nidaqmx_sys::DAQmxErrorConnectionSeparatorAtEndOfList,
//         ErrorIdentifierInListTooLong = nidaqmx_sys::DAQmxErrorIdentifierInListTooLong,
//         ErrorDuplicateDeviceIDInListWhenSettling =
//             nidaqmx_sys::DAQmxErrorDuplicateDeviceIDInListWhenSettling,
//         ErrorChannelNameNotSpecifiedInList = nidaqmx_sys::DAQmxErrorChannelNameNotSpecifiedInList,
//         ErrorDeviceIDNotSpecifiedInList = nidaqmx_sys::DAQmxErrorDeviceIDNotSpecifiedInList,
//         ErrorSemicolonDoesNotFollowRangeInList =
//             nidaqmx_sys::DAQmxErrorSemicolonDoesNotFollowRangeInList,
//         ErrorSwitchActionInListSpansMultipleDevices =
//             nidaqmx_sys::DAQmxErrorSwitchActionInListSpansMultipleDevices,
//         ErrorRangeWithoutAConnectActionInList =
//             nidaqmx_sys::DAQmxErrorRangeWithoutAConnectActionInList,
//         ErrorInvalidIdentifierFollowingSeparatorInList =
//             nidaqmx_sys::DAQmxErrorInvalidIdentifierFollowingSeparatorInList,
//         ErrorInvalidChannelNameInList = nidaqmx_sys::DAQmxErrorInvalidChannelNameInList,
//         ErrorInvalidNumberInRepeatStatementInList =
//             nidaqmx_sys::DAQmxErrorInvalidNumberInRepeatStatementInList,
//         ErrorInvalidTriggerLineInList = nidaqmx_sys::DAQmxErrorInvalidTriggerLineInList,
//         ErrorInvalidIdentifierInListFollowingDeviceID =
//             nidaqmx_sys::DAQmxErrorInvalidIdentifierInListFollowingDeviceID,
//         ErrorInvalidIdentifierInListAtEndOfSwitchAction =
//             nidaqmx_sys::DAQmxErrorInvalidIdentifierInListAtEndOfSwitchAction,
//         ErrorDeviceRemoved = nidaqmx_sys::DAQmxErrorDeviceRemoved,
//         ErrorRoutingPathNotAvailable = nidaqmx_sys::DAQmxErrorRoutingPathNotAvailable,
//         ErrorRoutingHardwareBusy = nidaqmx_sys::DAQmxErrorRoutingHardwareBusy,
//         ErrorRequestedSignalInversionForRoutingNotPossible =
//             nidaqmx_sys::DAQmxErrorRequestedSignalInversionForRoutingNotPossible,
//         ErrorInvalidRoutingDestinationTerminalName =
//             nidaqmx_sys::DAQmxErrorInvalidRoutingDestinationTerminalName,
//         ErrorInvalidRoutingSourceTerminalName =
//             nidaqmx_sys::DAQmxErrorInvalidRoutingSourceTerminalName,
//         ErrorRoutingNotSupportedForDevice = nidaqmx_sys::DAQmxErrorRoutingNotSupportedForDevice,
//         ErrorWaitIsLastInstructionOfLoopInScript =
//             nidaqmx_sys::DAQmxErrorWaitIsLastInstructionOfLoopInScript,
//         ErrorClearIsLastInstructionOfLoopInScript =
//             nidaqmx_sys::DAQmxErrorClearIsLastInstructionOfLoopInScript,
//         ErrorInvalidLoopIterationsInScript = nidaqmx_sys::DAQmxErrorInvalidLoopIterationsInScript,
//         ErrorRepeatLoopNestingTooDeepInScript =
//             nidaqmx_sys::DAQmxErrorRepeatLoopNestingTooDeepInScript,
//         ErrorMarkerPositionOutsideSubsetInScript =
//             nidaqmx_sys::DAQmxErrorMarkerPositionOutsideSubsetInScript,
//         ErrorSubsetStartOffsetNotAlignedInScript =
//             nidaqmx_sys::DAQmxErrorSubsetStartOffsetNotAlignedInScript,
//         ErrorInvalidSubsetLengthInScript = nidaqmx_sys::DAQmxErrorInvalidSubsetLengthInScript,
//         ErrorMarkerPositionNotAlignedInScript =
//             nidaqmx_sys::DAQmxErrorMarkerPositionNotAlignedInScript,
//         ErrorSubsetOutsideWaveformInScript = nidaqmx_sys::DAQmxErrorSubsetOutsideWaveformInScript,
//         ErrorMarkerOutsideWaveformInScript = nidaqmx_sys::DAQmxErrorMarkerOutsideWaveformInScript,
//         ErrorWaveformInScriptNotInMem = nidaqmx_sys::DAQmxErrorWaveformInScriptNotInMem,
//         ErrorKeywordExpectedInScript = nidaqmx_sys::DAQmxErrorKeywordExpectedInScript,
//         ErrorBufferNameExpectedInScript = nidaqmx_sys::DAQmxErrorBufferNameExpectedInScript,
//         ErrorProcedureNameExpectedInScript = nidaqmx_sys::DAQmxErrorProcedureNameExpectedInScript,
//         ErrorScriptHasInvalidIdentifier = nidaqmx_sys::DAQmxErrorScriptHasInvalidIdentifier,
//         ErrorScriptHasInvalidCharacter = nidaqmx_sys::DAQmxErrorScriptHasInvalidCharacter,
//         ErrorResourceAlreadyReserved = nidaqmx_sys::DAQmxErrorResourceAlreadyReserved,
//         ErrorSelfTestFailed = nidaqmx_sys::DAQmxErrorSelfTestFailed,
//         ErrorADCOverrun = nidaqmx_sys::DAQmxErrorADCOverrun,
//         ErrorDACUnderflow = nidaqmx_sys::DAQmxErrorDACUnderflow,
//         ErrorInputFIFOUnderflow = nidaqmx_sys::DAQmxErrorInputFIFOUnderflow,
//         ErrorOutputFIFOUnderflow = nidaqmx_sys::DAQmxErrorOutputFIFOUnderflow,
//         ErrorSCXISerialCommunication = nidaqmx_sys::DAQmxErrorSCXISerialCommunication,
//         ErrorDigitalTerminalSpecifiedMoreThanOnce =
//             nidaqmx_sys::DAQmxErrorDigitalTerminalSpecifiedMoreThanOnce,
//         ErrorDigitalOutputNotSupported = nidaqmx_sys::DAQmxErrorDigitalOutputNotSupported,
//         ErrorInconsistentChannelDirections = nidaqmx_sys::DAQmxErrorInconsistentChannelDirections,
//         ErrorInputFIFOOverflow = nidaqmx_sys::DAQmxErrorInputFIFOOverflow,
//         ErrorTimeStampOverwritten = nidaqmx_sys::DAQmxErrorTimeStampOverwritten,
//         ErrorStopTriggerHasNotOccurred = nidaqmx_sys::DAQmxErrorStopTriggerHasNotOccurred,
//         ErrorRecordNotAvailable = nidaqmx_sys::DAQmxErrorRecordNotAvailable,
//         ErrorRecordOverwritten = nidaqmx_sys::DAQmxErrorRecordOverwritten,
//         ErrorDataNotAvailable = nidaqmx_sys::DAQmxErrorDataNotAvailable,
//         ErrorDataOverwrittenInDeviceMemory = nidaqmx_sys::DAQmxErrorDataOverwrittenInDeviceMemory,
//         ErrorDuplicatedChannel = nidaqmx_sys::DAQmxErrorDuplicatedChannel,
//         ErrorInterfaceObsoleted_Routing = nidaqmx_sys::DAQmxErrorInterfaceObsoleted_Routing,
//         ErrorRoCoServiceNotAvailable_Routing =
//             nidaqmx_sys::DAQmxErrorRoCoServiceNotAvailable_Routing,
//         ErrorRoutingDestTermPXIDStarXNotInSystemTimingSlot_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingDestTermPXIDStarXNotInSystemTimingSlot_Routing,
//         ErrorRoutingSrcTermPXIDStarXNotInSystemTimingSlot_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIDStarXNotInSystemTimingSlot_Routing,
//         ErrorRoutingSrcTermPXIDStarInNonDStarTriggerSlot_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIDStarInNonDStarTriggerSlot_Routing,
//         ErrorRoutingDestTermPXIDStarInNonDStarTriggerSlot_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingDestTermPXIDStarInNonDStarTriggerSlot_Routing,
//         ErrorRoutingDestTermPXIClk10InNotInStarTriggerSlot_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingDestTermPXIClk10InNotInStarTriggerSlot_Routing,
//         ErrorRoutingDestTermPXIClk10InNotInSystemTimingSlot_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingDestTermPXIClk10InNotInSystemTimingSlot_Routing,
//         ErrorRoutingDestTermPXIStarXNotInStarTriggerSlot_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingDestTermPXIStarXNotInStarTriggerSlot_Routing,
//         ErrorRoutingDestTermPXIStarXNotInSystemTimingSlot_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingDestTermPXIStarXNotInSystemTimingSlot_Routing,
//         ErrorRoutingSrcTermPXIStarXNotInStarTriggerSlot_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIStarXNotInStarTriggerSlot_Routing,
//         ErrorRoutingSrcTermPXIStarXNotInSystemTimingSlot_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIStarXNotInSystemTimingSlot_Routing,
//         ErrorRoutingSrcTermPXIStarInNonStarTriggerSlot_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIStarInNonStarTriggerSlot_Routing,
//         ErrorRoutingDestTermPXIStarInNonStarTriggerSlot_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingDestTermPXIStarInNonStarTriggerSlot_Routing,
//         ErrorRoutingDestTermPXIStarInStarTriggerSlot_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingDestTermPXIStarInStarTriggerSlot_Routing,
//         ErrorRoutingDestTermPXIStarInSystemTimingSlot_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingDestTermPXIStarInSystemTimingSlot_Routing,
//         ErrorRoutingSrcTermPXIStarInStarTriggerSlot_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIStarInStarTriggerSlot_Routing,
//         ErrorRoutingSrcTermPXIStarInSystemTimingSlot_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIStarInSystemTimingSlot_Routing,
//         ErrorInvalidSignalModifier_Routing = nidaqmx_sys::DAQmxErrorInvalidSignalModifier_Routing,
//         ErrorRoutingDestTermPXIClk10InNotInSlot2_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingDestTermPXIClk10InNotInSlot2_Routing,
//         ErrorRoutingDestTermPXIStarXNotInSlot2_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingDestTermPXIStarXNotInSlot2_Routing,
//         ErrorRoutingSrcTermPXIStarXNotInSlot2_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIStarXNotInSlot2_Routing,
//         ErrorRoutingSrcTermPXIStarInSlot16AndAbove_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIStarInSlot16AndAbove_Routing,
//         ErrorRoutingDestTermPXIStarInSlot16AndAbove_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingDestTermPXIStarInSlot16AndAbove_Routing,
//         ErrorRoutingDestTermPXIStarInSlot2_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingDestTermPXIStarInSlot2_Routing,
//         ErrorRoutingSrcTermPXIStarInSlot2_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIStarInSlot2_Routing,
//         ErrorRoutingDestTermPXIChassisNotIdentified_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingDestTermPXIChassisNotIdentified_Routing,
//         ErrorRoutingSrcTermPXIChassisNotIdentified_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingSrcTermPXIChassisNotIdentified_Routing,
//         ErrorTrigLineNotFoundSingleDevRoute_Routing =
//             nidaqmx_sys::DAQmxErrorTrigLineNotFoundSingleDevRoute_Routing,
//         ErrorNoCommonTrigLineForRoute_Routing =
//             nidaqmx_sys::DAQmxErrorNoCommonTrigLineForRoute_Routing,
//         ErrorResourcesInUseForRouteInTask_Routing =
//             nidaqmx_sys::DAQmxErrorResourcesInUseForRouteInTask_Routing,
//         ErrorResourcesInUseForRoute_Routing = nidaqmx_sys::DAQmxErrorResourcesInUseForRoute_Routing,
//         ErrorRouteNotSupportedByHW_Routing = nidaqmx_sys::DAQmxErrorRouteNotSupportedByHW_Routing,
//         ErrorResourcesInUseForInversionInTask_Routing =
//             nidaqmx_sys::DAQmxErrorResourcesInUseForInversionInTask_Routing,
//         ErrorResourcesInUseForInversion_Routing =
//             nidaqmx_sys::DAQmxErrorResourcesInUseForInversion_Routing,
//         ErrorInversionNotSupportedByHW_Routing =
//             nidaqmx_sys::DAQmxErrorInversionNotSupportedByHW_Routing,
//         ErrorResourcesInUseForProperty_Routing =
//             nidaqmx_sys::DAQmxErrorResourcesInUseForProperty_Routing,
//         ErrorRouteSrcAndDestSame_Routing = nidaqmx_sys::DAQmxErrorRouteSrcAndDestSame_Routing,
//         ErrorDevAbsentOrUnavailable_Routing = nidaqmx_sys::DAQmxErrorDevAbsentOrUnavailable_Routing,
//         ErrorInvalidTerm_Routing = nidaqmx_sys::DAQmxErrorInvalidTerm_Routing,
//         ErrorCannotTristateTerm_Routing = nidaqmx_sys::DAQmxErrorCannotTristateTerm_Routing,
//         ErrorCannotTristateBusyTerm_Routing = nidaqmx_sys::DAQmxErrorCannotTristateBusyTerm_Routing,
//         ErrorCouldNotReserveRequestedTrigLine_Routing =
//             nidaqmx_sys::DAQmxErrorCouldNotReserveRequestedTrigLine_Routing,
//         ErrorTrigLineNotFound_Routing = nidaqmx_sys::DAQmxErrorTrigLineNotFound_Routing,
//         ErrorRoutingPathNotAvailable_Routing =
//             nidaqmx_sys::DAQmxErrorRoutingPathNotAvailable_Routing,
//         ErrorRoutingHardwareBusy_Routing = nidaqmx_sys::DAQmxErrorRoutingHardwareBusy_Routing,
//         ErrorRequestedSignalInversionForRoutingNotPossible_Routing =
//             nidaqmx_sys::DAQmxErrorRequestedSignalInversionForRoutingNotPossible_Routing,
//         ErrorInvalidRoutingDestinationTerminalName_Routing =
//             nidaqmx_sys::DAQmxErrorInvalidRoutingDestinationTerminalName_Routing,
//         ErrorInvalidRoutingSourceTerminalName_Routing =
//             nidaqmx_sys::DAQmxErrorInvalidRoutingSourceTerminalName_Routing,
//         ErrorServiceLocatorNotAvailable_Routing =
//             nidaqmx_sys::DAQmxErrorServiceLocatorNotAvailable_Routing,
//         ErrorCouldNotConnectToServer_Routing =
//             nidaqmx_sys::DAQmxErrorCouldNotConnectToServer_Routing,
//         ErrorDeviceNameContainsSpacesOrPunctuation_Routing =
//             nidaqmx_sys::DAQmxErrorDeviceNameContainsSpacesOrPunctuation_Routing,
//         ErrorDeviceNameContainsNonprintableCharacters_Routing =
//             nidaqmx_sys::DAQmxErrorDeviceNameContainsNonprintableCharacters_Routing,
//         ErrorDeviceNameIsEmpty_Routing = nidaqmx_sys::DAQmxErrorDeviceNameIsEmpty_Routing,
//         ErrorDeviceNameNotFound_Routing = nidaqmx_sys::DAQmxErrorDeviceNameNotFound_Routing,
//         ErrorLocalRemoteDriverVersionMismatch_Routing =
//             nidaqmx_sys::DAQmxErrorLocalRemoteDriverVersionMismatch_Routing,
//         ErrorDuplicateDeviceName_Routing = nidaqmx_sys::DAQmxErrorDuplicateDeviceName_Routing,
//         ErrorRuntimeAborting_Routing = nidaqmx_sys::DAQmxErrorRuntimeAborting_Routing,
//         ErrorRuntimeAborted_Routing = nidaqmx_sys::DAQmxErrorRuntimeAborted_Routing,
//         ErrorResourceNotInPool_Routing = nidaqmx_sys::DAQmxErrorResourceNotInPool_Routing,
//         ErrorDriverDeviceGUIDNotFound_Routing =
//             nidaqmx_sys::DAQmxErrorDriverDeviceGUIDNotFound_Routing,
//         ErrorPALUSBTransactionError = nidaqmx_sys::DAQmxErrorPALUSBTransactionError,
//         ErrorPALIsocStreamBufferError = nidaqmx_sys::DAQmxErrorPALIsocStreamBufferError,
//         ErrorPALInvalidAddressComponent = nidaqmx_sys::DAQmxErrorPALInvalidAddressComponent,
//         ErrorPALSharingViolation = nidaqmx_sys::DAQmxErrorPALSharingViolation,
//         ErrorPALInvalidDeviceState = nidaqmx_sys::DAQmxErrorPALInvalidDeviceState,
//         ErrorPALConnectionReset = nidaqmx_sys::DAQmxErrorPALConnectionReset,
//         ErrorPALConnectionAborted = nidaqmx_sys::DAQmxErrorPALConnectionAborted,
//         ErrorPALConnectionRefused = nidaqmx_sys::DAQmxErrorPALConnectionRefused,
//         ErrorPALBusResetOccurred = nidaqmx_sys::DAQmxErrorPALBusResetOccurred,
//         ErrorPALWaitInterrupted = nidaqmx_sys::DAQmxErrorPALWaitInterrupted,
//         ErrorPALMessageUnderflow = nidaqmx_sys::DAQmxErrorPALMessageUnderflow,
//         ErrorPALMessageOverflow = nidaqmx_sys::DAQmxErrorPALMessageOverflow,
//         ErrorPALThreadAlreadyDead = nidaqmx_sys::DAQmxErrorPALThreadAlreadyDead,
//         ErrorPALThreadStackSizeNotSupported = nidaqmx_sys::DAQmxErrorPALThreadStackSizeNotSupported,
//         ErrorPALThreadControllerIsNotThreadCreator =
//             nidaqmx_sys::DAQmxErrorPALThreadControllerIsNotThreadCreator,
//         ErrorPALThreadHasNoThreadObject = nidaqmx_sys::DAQmxErrorPALThreadHasNoThreadObject,
//         ErrorPALThreadCouldNotRun = nidaqmx_sys::DAQmxErrorPALThreadCouldNotRun,
//         ErrorPALSyncAbandoned = nidaqmx_sys::DAQmxErrorPALSyncAbandoned,
//         ErrorPALSyncTimedOut = nidaqmx_sys::DAQmxErrorPALSyncTimedOut,
//         ErrorPALReceiverSocketInvalid = nidaqmx_sys::DAQmxErrorPALReceiverSocketInvalid,
//         ErrorPALSocketListenerInvalid = nidaqmx_sys::DAQmxErrorPALSocketListenerInvalid,
//         ErrorPALSocketListenerAlreadyRegistered =
//             nidaqmx_sys::DAQmxErrorPALSocketListenerAlreadyRegistered,
//         ErrorPALDispatcherAlreadyExported = nidaqmx_sys::DAQmxErrorPALDispatcherAlreadyExported,
//         ErrorPALDMALinkEventMissed = nidaqmx_sys::DAQmxErrorPALDMALinkEventMissed,
//         ErrorPALBusError = nidaqmx_sys::DAQmxErrorPALBusError,
//         ErrorPALRetryLimitExceeded = nidaqmx_sys::DAQmxErrorPALRetryLimitExceeded,
//         ErrorPALTransferOverread = nidaqmx_sys::DAQmxErrorPALTransferOverread,
//         ErrorPALTransferOverwritten = nidaqmx_sys::DAQmxErrorPALTransferOverwritten,
//         ErrorPALPhysicalBufferFull = nidaqmx_sys::DAQmxErrorPALPhysicalBufferFull,
//         ErrorPALPhysicalBufferEmpty = nidaqmx_sys::DAQmxErrorPALPhysicalBufferEmpty,
//         ErrorPALLogicalBufferFull = nidaqmx_sys::DAQmxErrorPALLogicalBufferFull,
//         ErrorPALLogicalBufferEmpty = nidaqmx_sys::DAQmxErrorPALLogicalBufferEmpty,
//         ErrorPALTransferAborted = nidaqmx_sys::DAQmxErrorPALTransferAborted,
//         ErrorPALTransferStopped = nidaqmx_sys::DAQmxErrorPALTransferStopped,
//         ErrorPALTransferInProgress = nidaqmx_sys::DAQmxErrorPALTransferInProgress,
//         ErrorPALTransferNotInProgress = nidaqmx_sys::DAQmxErrorPALTransferNotInProgress,
//         ErrorPALCommunicationsFault = nidaqmx_sys::DAQmxErrorPALCommunicationsFault,
//         ErrorPALTransferTimedOut = nidaqmx_sys::DAQmxErrorPALTransferTimedOut,
//         ErrorPALMemoryHeapNotEmpty = nidaqmx_sys::DAQmxErrorPALMemoryHeapNotEmpty,
//         ErrorPALMemoryBlockCheckFailed = nidaqmx_sys::DAQmxErrorPALMemoryBlockCheckFailed,
//         ErrorPALMemoryPageLockFailed = nidaqmx_sys::DAQmxErrorPALMemoryPageLockFailed,
//         ErrorPALMemoryFull = nidaqmx_sys::DAQmxErrorPALMemoryFull,
//         ErrorPALMemoryAlignmentFault = nidaqmx_sys::DAQmxErrorPALMemoryAlignmentFault,
//         ErrorPALMemoryConfigurationFault = nidaqmx_sys::DAQmxErrorPALMemoryConfigurationFault,
//         ErrorPALDeviceInitializationFault = nidaqmx_sys::DAQmxErrorPALDeviceInitializationFault,
//         ErrorPALDeviceNotSupported = nidaqmx_sys::DAQmxErrorPALDeviceNotSupported,
//         ErrorPALDeviceUnknown = nidaqmx_sys::DAQmxErrorPALDeviceUnknown,
//         ErrorPALDeviceNotFound = nidaqmx_sys::DAQmxErrorPALDeviceNotFound,
//         ErrorPALFeatureDisabled = nidaqmx_sys::DAQmxErrorPALFeatureDisabled,
//         ErrorPALComponentBusy = nidaqmx_sys::DAQmxErrorPALComponentBusy,
//         ErrorPALComponentAlreadyInstalled = nidaqmx_sys::DAQmxErrorPALComponentAlreadyInstalled,
//         ErrorPALComponentNotUnloadable = nidaqmx_sys::DAQmxErrorPALComponentNotUnloadable,
//         ErrorPALComponentNeverLoaded = nidaqmx_sys::DAQmxErrorPALComponentNeverLoaded,
//         ErrorPALComponentAlreadyLoaded = nidaqmx_sys::DAQmxErrorPALComponentAlreadyLoaded,
//         ErrorPALComponentCircularDependency = nidaqmx_sys::DAQmxErrorPALComponentCircularDependency,
//         ErrorPALComponentInitializationFault =
//             nidaqmx_sys::DAQmxErrorPALComponentInitializationFault,
//         ErrorPALComponentImageCorrupt = nidaqmx_sys::DAQmxErrorPALComponentImageCorrupt,
//         ErrorPALFeatureNotSupported = nidaqmx_sys::DAQmxErrorPALFeatureNotSupported,
//         ErrorPALFunctionNotFound = nidaqmx_sys::DAQmxErrorPALFunctionNotFound,
//         ErrorPALFunctionObsolete = nidaqmx_sys::DAQmxErrorPALFunctionObsolete,
//         ErrorPALComponentTooNew = nidaqmx_sys::DAQmxErrorPALComponentTooNew,
//         ErrorPALComponentTooOld = nidaqmx_sys::DAQmxErrorPALComponentTooOld,
//         ErrorPALComponentNotFound = nidaqmx_sys::DAQmxErrorPALComponentNotFound,
//         ErrorPALVersionMismatch = nidaqmx_sys::DAQmxErrorPALVersionMismatch,
//         ErrorPALFileFault = nidaqmx_sys::DAQmxErrorPALFileFault,
//         ErrorPALFileWriteFault = nidaqmx_sys::DAQmxErrorPALFileWriteFault,
//         ErrorPALFileReadFault = nidaqmx_sys::DAQmxErrorPALFileReadFault,
//         ErrorPALFileSeekFault = nidaqmx_sys::DAQmxErrorPALFileSeekFault,
//         ErrorPALFileCloseFault = nidaqmx_sys::DAQmxErrorPALFileCloseFault,
//         ErrorPALFileOpenFault = nidaqmx_sys::DAQmxErrorPALFileOpenFault,
//         ErrorPALDiskFull = nidaqmx_sys::DAQmxErrorPALDiskFull,
//         ErrorPALOSFault = nidaqmx_sys::DAQmxErrorPALOSFault,
//         ErrorPALOSInitializationFault = nidaqmx_sys::DAQmxErrorPALOSInitializationFault,
//         ErrorPALOSUnsupported = nidaqmx_sys::DAQmxErrorPALOSUnsupported,
//         ErrorPALCalculationOverflow = nidaqmx_sys::DAQmxErrorPALCalculationOverflow,
//         ErrorPALHardwareFault = nidaqmx_sys::DAQmxErrorPALHardwareFault,
//         ErrorPALFirmwareFault = nidaqmx_sys::DAQmxErrorPALFirmwareFault,
//         ErrorPALSoftwareFault = nidaqmx_sys::DAQmxErrorPALSoftwareFault,
//         ErrorPALMessageQueueFull = nidaqmx_sys::DAQmxErrorPALMessageQueueFull,
//         ErrorPALResourceAmbiguous = nidaqmx_sys::DAQmxErrorPALResourceAmbiguous,
//         ErrorPALResourceBusy = nidaqmx_sys::DAQmxErrorPALResourceBusy,
//         ErrorPALResourceInitialized = nidaqmx_sys::DAQmxErrorPALResourceInitialized,
//         ErrorPALResourceNotInitialized = nidaqmx_sys::DAQmxErrorPALResourceNotInitialized,
//         ErrorPALResourceReserved = nidaqmx_sys::DAQmxErrorPALResourceReserved,
//         ErrorPALResourceNotReserved = nidaqmx_sys::DAQmxErrorPALResourceNotReserved,
//         ErrorPALResourceNotAvailable = nidaqmx_sys::DAQmxErrorPALResourceNotAvailable,
//         ErrorPALResourceOwnedBySystem = nidaqmx_sys::DAQmxErrorPALResourceOwnedBySystem,
//         ErrorPALBadToken = nidaqmx_sys::DAQmxErrorPALBadToken,
//         ErrorPALBadThreadMultitask = nidaqmx_sys::DAQmxErrorPALBadThreadMultitask,
//         ErrorPALBadLibrarySpecifier = nidaqmx_sys::DAQmxErrorPALBadLibrarySpecifier,
//         ErrorPALBadAddressSpace = nidaqmx_sys::DAQmxErrorPALBadAddressSpace,
//         ErrorPALBadWindowType = nidaqmx_sys::DAQmxErrorPALBadWindowType,
//         ErrorPALBadAddressClass = nidaqmx_sys::DAQmxErrorPALBadAddressClass,
//         ErrorPALBadWriteCount = nidaqmx_sys::DAQmxErrorPALBadWriteCount,
//         ErrorPALBadWriteOffset = nidaqmx_sys::DAQmxErrorPALBadWriteOffset,
//         ErrorPALBadWriteMode = nidaqmx_sys::DAQmxErrorPALBadWriteMode,
//         ErrorPALBadReadCount = nidaqmx_sys::DAQmxErrorPALBadReadCount,
//         ErrorPALBadReadOffset = nidaqmx_sys::DAQmxErrorPALBadReadOffset,
//         ErrorPALBadReadMode = nidaqmx_sys::DAQmxErrorPALBadReadMode,
//         ErrorPALBadCount = nidaqmx_sys::DAQmxErrorPALBadCount,
//         ErrorPALBadOffset = nidaqmx_sys::DAQmxErrorPALBadOffset,
//         ErrorPALBadMode = nidaqmx_sys::DAQmxErrorPALBadMode,
//         ErrorPALBadDataSize = nidaqmx_sys::DAQmxErrorPALBadDataSize,
//         ErrorPALBadPointer = nidaqmx_sys::DAQmxErrorPALBadPointer,
//         ErrorPALBadSelector = nidaqmx_sys::DAQmxErrorPALBadSelector,
//         ErrorPALBadDevice = nidaqmx_sys::DAQmxErrorPALBadDevice,
//         ErrorPALIrrelevantAttribute = nidaqmx_sys::DAQmxErrorPALIrrelevantAttribute,
//         ErrorPALValueConflict = nidaqmx_sys::DAQmxErrorPALValueConflict,
//     }

//     #[test]
//     fn test_get_success_strings() {
//         let file = File::create("ret_messages.rs").unwrap();
//         let mut file = LineWriter::new(file);

//         let success = NidaqmxSuccess::iter();
//         let error = NidaqmxError::iter();

//         for ret in success {
//             println!("{:#?}", ret);
//             let mut buffer: Vec<u8> = vec![0; 4000];
//             let retcode: i32 = ret.clone().into();
//             unsafe {
//                 nidaqmx_sys::DAQmxGetErrorString(retcode, buffer.as_mut_ptr() as *mut i8, 4000_u32)
//             };
//             buffer = unsafe { CStr::from_ptr(buffer.as_mut_ptr() as *mut i8) }
//                 .to_bytes()
//                 .to_vec();
//             let message = String::from_utf8_lossy(buffer.as_slice())
//                 .to_string()
//                 .replace("\n", " ");
//             file.write("#[error(\"".as_bytes());
//             file.write(message.as_bytes());
//             file.write("\")]".as_bytes());
//             file.write("\n".as_bytes());
//             file.write(ret.to_string().as_bytes());
//             file.write(",".as_bytes());
//             file.write("\n".as_bytes());
//             println!("{:#?}", message)
//         }

//         for ret in error {
//             println!("{:#?}", ret);
//             let mut buffer: Vec<u8> = vec![0; 4000];
//             let retcode: i32 = ret.clone().into();
//             unsafe {
//                 nidaqmx_sys::DAQmxGetErrorString(retcode, buffer.as_mut_ptr() as *mut i8, 4000_u32)
//             };
//             buffer = unsafe { CStr::from_ptr(buffer.as_mut_ptr() as *mut i8) }
//                 .to_bytes()
//                 .to_vec();
//             let message = String::from_utf8_lossy(buffer.as_slice())
//                 .to_string()
//                 .replace("\n", " ");
//             file.write("#[error(\"".as_bytes());
//             file.write(message.as_bytes());
//             file.write("\")]".as_bytes());
//             file.write("\n".as_bytes());
//             file.write(ret.to_string().as_bytes());
//             file.write(",".as_bytes());
//             file.write("\n".as_bytes());
//             println!("{:#?}", message)
//         }
//     }
// }
